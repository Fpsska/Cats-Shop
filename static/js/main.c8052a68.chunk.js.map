{"version":3,"sources":["reportWebVitals.js","Redux/Actions/cardActions.ts","Redux/Reducers/cardReducer.ts","Redux/Actions/headerActions.ts","Redux/Reducers/headerReducer.ts","Redux/store.ts","components/Common/SvgTemplate.tsx","components/Header/HeaderLink.tsx","components/Header/HeaderNav.tsx","components/BurgerMenu/BurgerMenu.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","assets/images/no_photo.png","Redux/Middleware/fetchCardsData.ts","Redux/Middleware/fetchGifData.ts","components/Common/Layout.tsx","components/Card/Card.tsx","components/Card/CardLits.tsx","components/SortButton/SortButtonTemplate.tsx","components/SortButton/SortButtonList.tsx","components/Common/Preloader/Preloader.tsx","components/Common/Alert/Alert.tsx","components/Pages/MainPage/MainPage.tsx","components/Filter/Filter.tsx","assets/images/empty.png","components/Pages/FavouritePage/FavouritePage.tsx","components/Pages/OverviewPage/OverviewPage.tsx","assets/images/in_process.png","components/Pages/ProfilePage/ProfilePage.tsx","assets/images/no_found.png","components/Pages/NoFoundPage/NoFoundPage.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ACTION_FETCH_CARDS","ACTION_FETCH_CARDS_DATA_TOGGLE","ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS","ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE","ACTION_SET_GIF_DATA","ACTION_FETCH_GIF_DATA_TOGGLE","ACTION_SET_GIF_DATA_ERROR_STATUS","ACTION_SET_GIF_DATA_ERROR_MESSAGE","ACTION_SET_LIKED_CARDS_DATA","ACTION_SET_FAVOURITE_STATUS","ACTION_SET_NOTIFICATION_VISIBLE_STATUS","ACTION_SORT_CARDS_PRICE_DECREASE","ACTION_SORT_CARDS_PRICE_INCREASE","ACTION_SORT_CARDS_AGE_DECREASE","ACTION_SORT_CARDS_AGE_INCREASE","ACTION_SET_FILTERED_CARDS_DATA","ACTION_SET_FILTERED_STATUS","fetchCards","data","type","payload","fetchCardsDataToggle","value","setFetchCardsDataErrorStatus","setGifData","fetchGifDataToggle","setGifDataErrorStatus","setNotificationVisibleStatus","status","setFavouriteStatus","id","setFilteredCardsData","setFilteredStatus","initialState","cards","gifData","likedCardsData","filteredCardsData","sortButtons","text","isSorted","isCardsDataFetching","isCardsDataFetchError","cardsDataFetchErrorMessage","isGifDataFetching","isGifDataFetchError","gifDataFetchErrorMessage","isNotificationVisible","isDataFiltered","cardReducer","state","action","concat","map","item","isFavourite","filter","sort","a","b","price","parseInt","age","ACTION_CHANGE_NAV_DISPLAY","ACTION_GET_INPUT_VALUE","ACTION_CHANGE_MAIN_PAGE_STATUS","ACTION_CHANGE_OVERVIEW_PAGE_STATUS","ACTION_CHANGE_BURGER_STATUS","ACTION_SET_CURRENT_RANGE_VALUE","changeNavDisplay","changeMainPageStatus","changeOverviewPageStatus","changeBurgerStatus","setCurrentRangeValue","headerLinks","link","isBurgerHidden","isBurgerOpen","isBodyScrolling","isHomePage","isOverviewPage","emailValue","inputRangeTotalValue","inputRangeMinValue","currentRangeValue","headerReducer","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","SvgTemplate","props","className","width","height","viewBox","fill","xmlns","d","clipPath","transform","fillRule","clipRule","HeaderLink","dispatch","useDispatch","to","onClick","document","body","style","overflowY","HeaderNav","headerNav","useMemo","BurgerMenu","calcPaddingValue","paddingRight","window","innerWidth","clientWidth","Header","useSelector","useRef","defineBurgerStatus","useLayoutEffect","addEventListener","removeEventListener","useEffect","length","current","href","Footer","placeholder","required","onChange","event","target","fetchCardsData","pageCount","Math","floor","random","fetch","response","json","setTimeout","actualData","forEach","undefined","image","url","Object","keys","constructor","push","name","location","origin","paw","discount","discountStatus","Boolean","round","cardStatus","message","fetchGifData","Layout","Card","buttonLike","classList","remove","ref","disabled","src","alt","CardList","useState","list","setList","cardList","SortButtonTemplate","isSwitched","setSwitchStatus","toggleSortCardsPriceDecrease","toggleSortCardsAgeDecrease","toggleSortCardsPriceIncrease","toggleSortCardsAgeIncrease","SortButtonList","sortButtonList","Preloader","Alert","alert","add","MainPage","scrollPoint","requestHandler","scrollIntoView","block","behavior","Filter","input","counter","left","e","currentValue","min","max","step","SwiperCore","use","Pagination","FavouritePage","emptyLikedCardsDataStatus","setEmptyLikedCardsStatus","emptyFilteredCardsStatus","setEmptyFilteredCardsStatus","totalPrice","setTotalPrice","calcTotalPrice","array","sum","i","empty_image","slidesPerView","spaceBetween","breakpoints","OverviewPage","ProfilePage","navigate","useNavigate","inProcessImage","replace","NoFoundPage","noFoundPage","App","path","element","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8052a68.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { actualDataTypes, gifDataTypes, cardActionTypes } from \"../../Types/cardType\";\r\n\r\nexport const ACTION_FETCH_CARDS = \"ACTION_FETCH_CARDS\";\r\nexport const ACTION_FETCH_CARDS_DATA_TOGGLE = \"ACTION_FETCH_CARDS_DATA_TOGGLE\";\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS = \"ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS\";\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE = \"ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE\";\r\n\r\nexport const ACTION_SET_GIF_DATA = \"ACTION_SET_GIF_DATA\";\r\nexport const ACTION_FETCH_GIF_DATA_TOGGLE = \"ACTION_FETCH_GIF_DATA_TOGGLE\";\r\nexport const ACTION_SET_GIF_DATA_ERROR_STATUS = \"ACTION_SET_GIF_DATA_ERROR_STATUS\";\r\nexport const ACTION_SET_GIF_DATA_ERROR_MESSAGE = \"ACTION_SET_GIF_DATA_ERROR_MESSAGE\";\r\n\r\nexport const ACTION_SET_LIKED_CARDS_DATA = \"ACTION_SET_LIKED_CARDS_DATA\";\r\nexport const ACTION_SET_FAVOURITE_STATUS = \"ACTION_SET_FAVOURITE_STATUS\";\r\nexport const ACTION_SET_NOTIFICATION_VISIBLE_STATUS = \"ACTION_SET_NOTIFICATION_VISIBLE_STATUS\";\r\n\r\nexport const ACTION_SORT_CARDS_PRICE_DECREASE =\r\n  \"ACTION_SORT_CARDS_PRICE_DECREASE\";\r\nexport const ACTION_SORT_CARDS_PRICE_INCREASE =\r\n  \"ACTION_SORT_CARDS_PRICE_INCREASE\";\r\nexport const ACTION_SORT_CARDS_AGE_DECREASE = \"ACTION_SORT_CARDS_AGE_DECREASE\";\r\nexport const ACTION_SORT_CARDS_AGE_INCREASE = \"ACTION_SORT_CARDS_AGE_INCREASE\";\r\n\r\nexport const ACTION_SET_FILTERED_CARDS_DATA = \"ACTION_SET_FILTERED_CARDS_DATA\";\r\nexport const ACTION_SET_FILTERED_STATUS = \"ACTION_SET_FILTERED_STATUS\";\r\n\r\n// AC Names\r\n\r\nexport const fetchCards = (data: actualDataTypes[]): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_CARDS,\r\n    payload: data\r\n  };\r\n};\r\nexport const fetchCardsDataToggle = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n    payload: {\r\n      value\r\n    },\r\n  };\r\n};\r\nexport const setFetchCardsDataErrorStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n    payload: {\r\n      value\r\n    },\r\n  };\r\n};\r\nexport const setFetchCardsDataErrorMessage = (value: string): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n    payload: {\r\n      value\r\n    },\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const setGifData = (data: gifDataTypes[]): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA,\r\n    payload: data\r\n  };\r\n};\r\nexport const fetchGifDataToggle = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_GIF_DATA_TOGGLE,\r\n    payload: {\r\n      value\r\n    },\r\n  };\r\n};\r\nexport const setGifDataErrorStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n    payload: {\r\n      value\r\n    },\r\n  };\r\n};\r\nexport const setFetchGifDataErrorMessage = (value: string): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n    payload: {\r\n      value\r\n    },\r\n  };\r\n};\r\n\r\n\r\nexport const setNotificationVisibleStatus = (status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n    payload: {\r\n      status\r\n    },\r\n  };\r\n};\r\n\r\n\r\nexport const setLikedCardsData = (status: boolean): cardActionTypes => {  \r\n  return {\r\n    type: ACTION_SET_LIKED_CARDS_DATA,\r\n    payload: status \r\n  };\r\n};\r\n\r\n\r\n\r\nexport const setFavouriteStatus = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FAVOURITE_STATUS,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const toggleSortCardsPriceDecrease = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_PRICE_DECREASE,\r\n    payload: { id, status }\r\n  };\r\n};\r\nexport const toggleSortCardsPriceIncrease = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_PRICE_INCREASE,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const toggleSortCardsAgeDecrease = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_AGE_DECREASE,\r\n    payload: { id, status }\r\n  };\r\n};\r\nexport const toggleSortCardsAgeIncrease = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_AGE_INCREASE,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const setFilteredCardsData = (value: number): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FILTERED_CARDS_DATA,\r\n    payload: value\r\n  };\r\n};\r\nexport const setFilteredStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FILTERED_STATUS,\r\n    payload: value\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","import {\r\n  ACTION_FETCH_CARDS,\r\n  ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n  ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n  ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n  ACTION_SET_GIF_DATA,\r\n  ACTION_FETCH_GIF_DATA_TOGGLE,\r\n  ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n  ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n  ACTION_SET_FAVOURITE_STATUS,\r\n  ACTION_SET_LIKED_CARDS_DATA,\r\n  ACTION_SORT_CARDS_PRICE_DECREASE,\r\n  ACTION_SORT_CARDS_PRICE_INCREASE,\r\n  ACTION_SORT_CARDS_AGE_DECREASE,\r\n  ACTION_SORT_CARDS_AGE_INCREASE,\r\n  ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n  ACTION_SET_FILTERED_CARDS_DATA,\r\n  ACTION_SET_FILTERED_STATUS\r\n} from \"../Actions/cardActions\";\r\nimport { CardStateTypes, cardActionTypes } from \"../../Types/cardType\";\r\n\r\nconst initialState: CardStateTypes = {\r\n  cards: [],\r\n  gifData: [],\r\n  likedCardsData: [],\r\n  filteredCardsData: [],\r\n  sortButtons: [\r\n    {\r\n      id: \"price\",\r\n      text: \"Price\",\r\n      isSorted: false,\r\n    },\r\n    {\r\n      id: \"age\",\r\n      text: \"Age\",\r\n      isSorted: false,\r\n    },\r\n  ],\r\n  isCardsDataFetching: true,\r\n  isCardsDataFetchError: false,\r\n  cardsDataFetchErrorMessage: \"error from fetchCardsData thunk\",\r\n  isGifDataFetching: true,\r\n  isGifDataFetchError: false,\r\n  gifDataFetchErrorMessage: \"error from fetchGifData thunk\",\r\n  isNotificationVisible: false,\r\n  isDataFiltered: false\r\n};\r\n\r\nconst cardReducer = (\r\n  state = initialState,\r\n  action: cardActionTypes\r\n): CardStateTypes => {\r\n  switch (action.type) {\r\n    case ACTION_FETCH_CARDS:\r\n      return {\r\n        ...state,\r\n        cards: [...state.cards.concat(action.payload)],\r\n      };\r\n    case ACTION_FETCH_CARDS_DATA_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isCardsDataFetching: action.payload.value,\r\n      };\r\n    case ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS:\r\n      return {\r\n        ...state,\r\n        isCardsDataFetchError: action.payload.value,\r\n      };\r\n    case ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        cardsDataFetchErrorMessage: action.payload.value,\r\n      };\r\n    case ACTION_SET_GIF_DATA:\r\n      return {\r\n        ...state,\r\n        gifData: action.payload\r\n      };\r\n    case ACTION_FETCH_GIF_DATA_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isGifDataFetching: action.payload.value,\r\n      };\r\n    case ACTION_SET_GIF_DATA_ERROR_STATUS:\r\n      return {\r\n        ...state,\r\n        isGifDataFetchError: action.payload.value,\r\n      };\r\n    case ACTION_SET_GIF_DATA_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        gifDataFetchErrorMessage: action.payload.value,\r\n      };\r\n    case ACTION_SET_FAVOURITE_STATUS:\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map((item) => {\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              isFavourite: action.payload.status,\r\n            };\r\n          }\r\n          return item\r\n        })\r\n      };\r\n    case ACTION_SET_LIKED_CARDS_DATA:\r\n      return {\r\n        ...state,\r\n        likedCardsData: state.cards.filter(item => item.isFavourite === true)\r\n      };\r\n    case ACTION_SET_NOTIFICATION_VISIBLE_STATUS:\r\n      return {\r\n        ...state,\r\n        isNotificationVisible: action.payload.status\r\n      };\r\n    case ACTION_SORT_CARDS_PRICE_DECREASE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return b.price - a.price;\r\n          }),\r\n        ],\r\n        sortButtons: state.sortButtons.map((item) => {\r\n          return {\r\n            ...item,\r\n            isSorted: action.payload.status,\r\n          };\r\n        }),\r\n      };\r\n    case ACTION_SORT_CARDS_PRICE_INCREASE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return a.price - b.price;\r\n          }),\r\n        ],\r\n        sortButtons: state.sortButtons.map((item) => {\r\n          return {\r\n            ...item,\r\n            isSorted: action.payload.status,\r\n          };\r\n        }),\r\n      };\r\n    case ACTION_SORT_CARDS_AGE_DECREASE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return parseInt(b.age) - parseInt(a.age);\r\n          }),\r\n        ],\r\n        sortButtons: state.sortButtons.map((item) => {\r\n          return {\r\n            ...item,\r\n            isSorted: action.payload.status,\r\n          };\r\n        }),\r\n      };\r\n    case ACTION_SORT_CARDS_AGE_INCREASE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return parseInt(a.age) - parseInt(b.age);\r\n          }),\r\n        ],\r\n        sortButtons: state.sortButtons.map((item) => {\r\n          return {\r\n            ...item,\r\n            isSorted: action.payload.status,\r\n          };\r\n        }),\r\n      };\r\n    case ACTION_SET_FILTERED_CARDS_DATA:\r\n      return {\r\n        ...state,\r\n        filteredCardsData: state.likedCardsData.filter(item => item.price <= action.payload)\r\n      };\r\n    case ACTION_SET_FILTERED_STATUS:\r\n      return {\r\n        ...state,\r\n        isDataFiltered: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { headerActionTypes } from \"../../Types/headerType\";\r\n\r\nexport const ACTION_CHANGE_NAV_DISPLAY = \"ACTION_CHANGE_NAV_DISPLAY\";\r\nexport const ACTION_GET_INPUT_VALUE = \"ACTION_SET_INPUT_VALUE\";\r\nexport const ACTION_CHANGE_MAIN_PAGE_STATUS = \"ACTION_CHANGE_MAIN_PAGE_STATUS\";\r\nexport const ACTION_CHANGE_OVERVIEW_PAGE_STATUS = \"ACTION_CHANGE_OVERVIEW_PAGE_STATUS\";\r\nexport const ACTION_CHANGE_BURGER_STATUS = \"ACTION_CHANGE_BURGER_STATUS\";\r\nexport const ACTION_SET_CURRENT_RANGE_VALUE = \"ACTION_SET_CURRENT_RANGE_VALUE\"\r\n\r\n// AC Names\r\n\r\nexport const changeNavDisplay = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_NAV_DISPLAY,\r\n    payload: status,\r\n  };\r\n};\r\n\r\n\r\nexport const getInputValue = (value: string): headerActionTypes => {\r\n  return {\r\n    type: ACTION_GET_INPUT_VALUE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n\r\nexport const changeMainPageStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n    payload: status,\r\n  };\r\n};\r\n\r\nexport const changeOverviewPageStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_OVERVIEW_PAGE_STATUS,\r\n    payload: status,\r\n  };\r\n};\r\n\r\n\r\nexport const changeBurgerStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_BURGER_STATUS,\r\n    payload: status,\r\n  };\r\n};\r\n\r\nexport const setCurrentRangeValue = (value: number): headerActionTypes => {\r\n  return {\r\n    type: ACTION_SET_CURRENT_RANGE_VALUE,\r\n    payload: value,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { headerStateTypes, headerActionTypes } from \"../../Types/headerType\";\r\n\r\nimport {\r\n  ACTION_CHANGE_NAV_DISPLAY,\r\n  ACTION_GET_INPUT_VALUE,\r\n  ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n  ACTION_CHANGE_OVERVIEW_PAGE_STATUS,\r\n  ACTION_CHANGE_BURGER_STATUS,\r\n  ACTION_SET_CURRENT_RANGE_VALUE\r\n} from \"../Actions/headerActions\";\r\n\r\nconst initialState: headerStateTypes = {\r\n  headerLinks: [\r\n    {\r\n      id: 1,\r\n      text: \"Main\",\r\n      link: \"/Cats-Store/\",\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Favourite\",\r\n      link: \"Favourite\",\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Live\",\r\n      link: \"Live\",\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"Profile\",\r\n      link: \"Profile\",\r\n    },\r\n  ],\r\n  isBurgerHidden: true,\r\n  isBurgerOpen: false,\r\n  isBodyScrolling: true,\r\n  isHomePage: true,\r\n  isOverviewPage: false,\r\n  emailValue: \"\",\r\n  inputRangeTotalValue: 10000,\r\n  inputRangeMinValue: 1500,\r\n  currentRangeValue: 0,\r\n};\r\n\r\nconst headerReducer = (\r\n  state = initialState,\r\n  action: headerActionTypes\r\n): headerStateTypes => {\r\n  switch (action.type) {\r\n    case ACTION_CHANGE_NAV_DISPLAY:\r\n      return {\r\n        ...state,\r\n        isBurgerHidden: action.payload,\r\n      };\r\n    case ACTION_GET_INPUT_VALUE:\r\n      return {\r\n        ...state,\r\n        emailValue: action.payload,\r\n      };\r\n    case ACTION_CHANGE_MAIN_PAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        isHomePage: action.payload,\r\n      };\r\n    case ACTION_CHANGE_OVERVIEW_PAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        isOverviewPage: action.payload,\r\n      };\r\n    case ACTION_CHANGE_BURGER_STATUS:\r\n      return {\r\n        ...state,\r\n        isBurgerOpen: action.payload,\r\n      };\r\n    case ACTION_SET_CURRENT_RANGE_VALUE:\r\n      return {\r\n        ...state,\r\n        currentRangeValue: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default headerReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport cardReducer from \"./Reducers/cardReducer\";\r\nimport headerReducer from \"./Reducers/headerReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  cardReducer: cardReducer,\r\n  headerReducer: headerReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","import React from \"react\";\r\n\r\ninterface SvgTemplateProps {\r\n  id: any;\r\n}\r\n\r\nconst SvgTemplate: React.FC<SvgTemplateProps> = (props) => {\r\n  switch (props.id) {\r\n    case \"heart\":\r\n      return (\r\n        <svg\r\n          className=\"icon__heart\"\r\n          width=\"46\"\r\n          height=\"42\"\r\n          viewBox=\"0 0 46 42\"\r\n          fill=\"#fff\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M33.7812 0.695312C31.2851 0.695312 28.9966 1.4863 26.9794 3.04634C25.0456 4.54197 23.758 6.44693 23 7.83214C22.242 6.44684 20.9544 4.54197 19.0206 3.04634C17.0034 1.4863 14.7149 0.695312 12.2188 0.695312C5.25298 0.695312 0 6.39293 0 13.9485C0 22.1112 6.55347 27.696 16.4746 36.1505C18.1593 37.5863 20.0689 39.2138 22.0538 40.9494C22.3154 41.1785 22.6514 41.3047 23 41.3047C23.3486 41.3047 23.6846 41.1785 23.9462 40.9495C25.9312 39.2136 27.8408 37.5862 29.5265 36.1496C39.4465 27.696 46 22.1112 46 13.9485C46 6.39293 40.747 0.695312 33.7812 0.695312Z\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      );\r\n    case \"arrow\":\r\n      return (\r\n        <svg\r\n          className=\"icon__arrow\"\r\n          width=\"18\"\r\n          height=\"18\"\r\n          viewBox=\"0 0 18 18\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g clipPath=\"url(#clip0)\">\r\n            <path\r\n              d=\"M8.29764 3.99939L0.287559 12.0096C0.102145 12.1949 -8.06437e-08 12.4422 -6.91167e-08 12.7059C-5.75898e-08 12.9696 0.102145 13.2169 0.287559 13.4022L0.87731 13.9921C1.2616 14.3759 1.88618 14.3759 2.26988 13.9921L8.99627 7.2657L15.7301 13.9996C15.9155 14.1848 16.1627 14.2871 16.4263 14.2871C16.6901 14.2871 16.9373 14.1848 17.1228 13.9995L17.7124 13.4097C17.8979 13.2242 18 12.9771 18 12.7134C18 12.4497 17.8979 12.2023 17.7124 12.0171L9.69504 3.99939C9.50904 3.81368 9.26071 3.71168 8.99671 3.71227C8.73169 3.71168 8.48349 3.81368 8.29764 3.99939Z\"\r\n              fill=\"white\"\r\n            />\r\n          </g>\r\n          <defs>\r\n            <clipPath id=\"clip0\">\r\n              <rect\r\n                width=\"18\"\r\n                height=\"18\"\r\n                fill=\"white\"\r\n                transform=\"translate(0 18) rotate(-90)\"\r\n              />\r\n            </clipPath>\r\n          </defs>\r\n        </svg>\r\n      );\r\n    case \"logo\":\r\n      return (\r\n        <svg\r\n          className=\"icon__logo\"\r\n          width=\"78\"\r\n          height=\"52\"\r\n          viewBox=\"0 0 78 52\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M63.0559 15.8815L54.2119 15.8947L27.8012 40.7922H10.0354V23.4593L34.2348 0.848633L17.993 0.899213L0 17.6625V51.1511H34.0283L63.0418 23.5687L63.0559 15.8815Z\"\r\n            fill=\"white\"\r\n          />\r\n          <path\r\n            d=\"M43.9721 0.848633L14.9586 28.4318L14.9453 36.1182L23.7884 36.1049L50.1991 11.2075H67.9649V28.5404L43.7656 51.1511L60.0074 51.1013L78.0004 34.338V0.848633H43.9721Z\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      );\r\n    case \"arrow-sort\":\r\n      return (\r\n        <svg\r\n          className=\"icon__arrow-sort\"\r\n          width=\"15\"\r\n          height=\"15\"\r\n          viewBox=\"0 0 15 15\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <g clipPath=\"url(#clip0_5:133)\">\r\n            <path\r\n              d=\"M8.0853 11.6669L14.7604 4.99166C14.9149 4.83727 15 4.63118 15 4.41142C15 4.19167 14.9149 3.98557 14.7604 3.83118L14.2689 3.3396C13.9487 3.01973 13.4282 3.01973 13.1084 3.3396L7.50311 8.94492L1.89157 3.33338C1.73706 3.17899 1.53109 3.09375 1.31146 3.09375C1.09158 3.09375 0.885606 3.17899 0.730973 3.33338L0.239635 3.82496C0.0851249 3.97947 3.76698e-06 4.18545 3.75737e-06 4.4052C3.74777e-06 4.62496 0.0851249 4.83105 0.239635 4.98544L6.9208 11.6669C7.0758 11.8216 7.28275 11.9066 7.50275 11.9061C7.7236 11.9066 7.93042 11.8216 8.0853 11.6669Z\"\r\n              fill=\"black\"\r\n            />\r\n          </g>\r\n          <defs>\r\n            <clipPath id=\"clip0_5:133\">\r\n              <rect\r\n                width=\"15\"\r\n                height=\"15\"\r\n                fill=\"white\"\r\n                transform=\"translate(15) rotate(90)\"\r\n              />\r\n            </clipPath>\r\n          </defs>\r\n        </svg>\r\n      );\r\n    case \"close\":\r\n      return (\r\n        <svg\r\n          className=\"icon__close\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          viewBox=\"0 0 16 16\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            clipRule=\"evenodd\"\r\n            d=\"M8.00004 8.70711L11.6465 12.3536L12.3536 11.6465L8.70714 8.00001L12.3536 4.35356L11.6465 3.64645L8.00004 7.2929L4.35359 3.64645L3.64648 4.35356L7.29293 8.00001L3.64648 11.6465L4.35359 12.3536L8.00004 8.70711Z\"\r\n            fill=\"\"\r\n          />\r\n        </svg>\r\n      );\r\n    case \"notification\":\r\n      return (\r\n        <svg\r\n          className=\"icon__notification\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          viewBox=\"0 0 16 16\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            clipRule=\"evenodd\"\r\n            d=\"M8.5682 1.03128C10.1593 1.19039 11.6434 1.90518 12.7598 3.04996C13.9762 4.28555 14.6953 5.92552 14.7801 7.65726C14.8649 9.38899 14.3096 11.0913 13.2199 12.4398C12.2176 13.6857 10.8111 14.5416 9.2441 14.8594C7.67708 15.1772 6.04826 14.9369 4.63985 14.18C3.22843 13.4066 2.12659 12.1706 1.51986 10.68C0.910415 9.18166 0.829286 7.52043 1.28985 5.96988C1.74942 4.42537 2.72779 3.0868 4.05984 2.17996C5.38083 1.27892 6.9771 0.87217 8.5682 1.03128ZM9.03988 13.8799C10.3827 13.6075 11.5886 12.8756 12.4499 11.81C13.3825 10.6509 13.857 9.18961 13.7832 7.70376C13.7095 6.21792 13.0926 4.81093 12.0498 3.74991C11.0947 2.77492 9.82729 2.16667 8.46914 2.0314C7.11099 1.89613 5.7485 2.24247 4.61983 3.00992C3.77027 3.59531 3.08425 4.38792 2.62673 5.31265C2.16921 6.23738 1.95535 7.26359 2.00542 8.2941C2.0555 9.3246 2.36784 10.3253 2.91286 11.2013C3.45789 12.0773 4.21752 12.7997 5.11983 13.3C6.31816 13.9467 7.70562 14.1519 9.03988 13.8799ZM7.37482 6L8.62482 6L8.62482 5L7.37482 5L7.37482 6ZM8.62482 7L8.62482 11L7.37482 11L7.37482 7L8.62482 7Z\"\r\n            fill=\"\"\r\n          />\r\n        </svg>\r\n      );\r\n    default:\r\n      return <svg className=\"empty\"></svg>;\r\n  }\r\n};\r\n\r\nexport default SvgTemplate;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  changeMainPageStatus,\r\n  changeBurgerStatus,\r\n  changeOverviewPageStatus\r\n} from \"../../Redux/Actions/headerActions\";\r\nimport { setNotificationVisibleStatus } from \"../../Redux/Actions/cardActions\";\r\n\r\ninterface HeaderLinkProps {\r\n  isBurgerHidden?: boolean;\r\n  link: string;\r\n  text: string;\r\n}\r\n\r\nconst HeaderLink: React.FC<HeaderLinkProps> = ({\r\n  isBurgerHidden,\r\n  link,\r\n  text,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  //\r\n  const defineMainPage = (): void => {\r\n    if (text === \"Main\") {\r\n      dispatch(changeMainPageStatus(true));\r\n      dispatch(setNotificationVisibleStatus(false))\r\n      dispatch(changeOverviewPageStatus(false))\r\n    }\r\n    if (text === \"Favourite\") {\r\n      dispatch(changeOverviewPageStatus(false))\r\n    }\r\n    if (text === \"Live\") {\r\n      dispatch(changeOverviewPageStatus(true))\r\n    }\r\n  };\r\n\r\n  const removeBodyStatus = (): void => {\r\n    dispatch(changeMainPageStatus(false));\r\n    dispatch(changeBurgerStatus(false));\r\n    defineMainPage();\r\n    document.body.style.overflowY = \"auto\";\r\n  };\r\n  // \r\n  return (\r\n    <li className={isBurgerHidden ? \"nav__menu_item\" : \"nav__menu_item-burger\"}>\r\n      <NavLink\r\n        to={link}\r\n        className={isBurgerHidden ? \"nav__menu_link\" : \"nav__menu_link-burger\"}\r\n        onClick={removeBodyStatus}\r\n      >\r\n        {text}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default HeaderLink;\r\n","import React from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport HeaderLink from \"./HeaderLink\";\r\n\r\ninterface HeaderNavProps {\r\n  headerLinks: any[];\r\n  isBurgerHidden?: boolean;\r\n}\r\n\r\nconst HeaderNav: React.FC<HeaderNavProps> = ({\r\n  headerLinks,\r\n  isBurgerHidden,\r\n}) => {\r\n  const headerNav = useMemo(\r\n    () =>\r\n      headerLinks.map((item) => {\r\n        return (\r\n          <HeaderLink\r\n            key={item.id}\r\n            text={item.text}\r\n            link={item.link}\r\n            isBurgerHidden={isBurgerHidden}\r\n          />\r\n        );\r\n      }),\r\n    [headerLinks]\r\n  );\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className={isBurgerHidden ? \"nav__menu\" : \"nav__menu-burger\"}>\r\n        {headerNav}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeBurgerStatus } from \"../../Redux/Actions/headerActions\";\r\nimport HeaderNav from \"../Header/HeaderNav\";\r\nimport \"./BurgerMenu.scss\";\r\n\r\ninterface BurgerMenuProps {\r\n  headerLinks: any[];\r\n  isBurgerOpen: boolean;\r\n}\r\n\r\nconst BurgerMenu: React.FC<BurgerMenuProps> = ({\r\n  headerLinks,\r\n  isBurgerOpen,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  //\r\n  const calcScrollBarWidth = () => {\r\n    return window.innerWidth - document.body.clientWidth;\r\n  };\r\n\r\n  const calcPaddingValue = (): string => {\r\n    return (document.body.style.paddingRight = `${calcScrollBarWidth()}`);\r\n  };\r\n\r\n  const defineScrollStatus = (): void => {\r\n    if (isBurgerOpen === true) {\r\n      document.body.style.overflowY = \"auto\";\r\n    } else {\r\n      document.body.style.overflowY = \"hidden\";\r\n    }\r\n  };\r\n\r\n  const openBurger = (): void => {\r\n    dispatch(changeBurgerStatus(!isBurgerOpen));\r\n    defineScrollStatus();\r\n    calcPaddingValue();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu\" onClick={openBurger}>\r\n        <div\r\n          className={\r\n            isBurgerOpen\r\n              ? \"menu__line menu__line-top opened\"\r\n              : \"menu__line menu__line-top\"\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            isBurgerOpen\r\n              ? \"menu__line menu__line-middle opened\"\r\n              : \"menu__line menu__line-middle\"\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            isBurgerOpen\r\n              ? \"menu__line menu__line-bottom opened\"\r\n              : \"menu__line menu__line-bottom\"\r\n          }\r\n        ></div>\r\n      </div>\r\n      <div className={isBurgerOpen ? \"burger active\" : \"burger\"}>\r\n        <div className=\"burger__nav\">\r\n          <HeaderNav headerLinks={headerLinks} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;\r\n","import React, { useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SvgTemplate from \"../Common/SvgTemplate\";\r\nimport HeaderNav from \"./HeaderNav\";\r\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\r\nimport { changeNavDisplay } from \"../../Redux/Actions/headerActions\";\r\nimport { RootState } from \"../../Redux/store\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header: React.FC = () => {\r\n  const { headerLinks, isBurgerHidden, isBurgerOpen, isHomePage, isOverviewPage } =\r\n    useSelector((state: RootState) => state.headerReducer);\r\n  const { isCardsDataFetching, isCardsDataFetchError, isDataFiltered, cards, likedCardsData, filteredCardsData } = useSelector((state: RootState) => state.cardReducer);\r\n  const text = useRef<string>(\"cat\")\r\n\r\n  const dispatch = useDispatch();\r\n  //\r\n  const defineBurgerStatus = (): void => {\r\n    if (window.innerWidth < 800) {\r\n      dispatch(changeNavDisplay(false));\r\n    } else if (window.innerWidth > 800) {\r\n      dispatch(changeNavDisplay(true));\r\n    }\r\n  };\r\n  //\r\n  useLayoutEffect(() => {\r\n    window.addEventListener(\"resize\", defineBurgerStatus);\r\n    window.addEventListener(\"load\", defineBurgerStatus);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", defineBurgerStatus);\r\n      window.removeEventListener(\"load\", defineBurgerStatus);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (likedCardsData.length === 1) {\r\n      text.current = \"cat\"\r\n    }\r\n    if (likedCardsData.length >= 2) {\r\n      text.current = \"cats\"\r\n    }\r\n    if (filteredCardsData.length === 0) {\r\n      text.current = \"cat\"\r\n    }\r\n    if (filteredCardsData.length === 1) {\r\n      text.current = \"cat\"\r\n    }\r\n    if (filteredCardsData.length >= 2) {\r\n      text.current = \"cats\"\r\n    }\r\n  }, [likedCardsData, filteredCardsData, isDataFiltered])\r\n  // \r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__section\">\r\n          <span className=\"icon\">\r\n            <SvgTemplate id=\"logo\" />\r\n          </span>\r\n          <>\r\n            {isBurgerHidden ? (\r\n              <HeaderNav\r\n                headerLinks={headerLinks}\r\n                isBurgerHidden={isBurgerHidden}\r\n              />\r\n            ) : (\r\n              <BurgerMenu\r\n                headerLinks={headerLinks}\r\n                isBurgerOpen={isBurgerOpen}\r\n              />\r\n            )}\r\n          </>\r\n          <div className=\"header__telephone telephone\">\r\n            <a className=\"telephone__number\" href=\"tel:+544 3490 00000\">\r\n              +544 3490 00000\r\n            </a>\r\n            <span className=\"telephone__description\">Call soon!</span>\r\n          </div>\r\n        </div>\r\n        <>\r\n          <>\r\n            {isCardsDataFetching ? (\r\n              <h1 className=\"header__text header__text--loading\">\r\n                Loading\r\n                <span className=\"header__text_dot\"></span>\r\n                <span className=\"header__text_dot\"></span>\r\n                <span className=\"header__text_dot\"></span>\r\n              </h1>\r\n            ) : (\r\n              <>\r\n                {isHomePage\r\n                  ? <h1 className=\"header__text\">{`Found ${isCardsDataFetchError ? \"0\" : cards.length} cats`}</h1>\r\n                  : isOverviewPage\r\n                    ? <h1 className=\"header__text\">{`Have a good day ;)`}</h1>\r\n                    : <h1 className=\"header__text\">{`Selected ${isCardsDataFetchError ? \"0\" : isDataFiltered ? filteredCardsData.length : likedCardsData.length} ${text.current}`}</h1>\r\n                }\r\n              </>\r\n            )}\r\n          </>\r\n        </>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getInputValue } from \"../../Redux/Actions/headerActions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Footer.scss\";\r\nimport { RootState } from \"../../Redux/store\";\r\n\r\nconst Footer: React.FC = () => {\r\n  const { emailValue } = useSelector(\r\n    (state: RootState) => state.headerReducer\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    dispatch(getInputValue(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"footer__wrapper\">\r\n          <div className=\"footer__description\">\r\n            <h2 className=\"footer__title\">Hurry up to buy!</h2>\r\n            <p className=\"footer__subtitle\">\r\n              Subscribe and catch all the promotions\r\n            </p>\r\n          </div>\r\n          <form className=\"form\">\r\n            <div className=\"form__controls\">\r\n              <input\r\n                className=\"form__input\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                value={emailValue}\r\n                onChange={inputHandler}\r\n              />\r\n              <button className=\"form__button button\">Subscribe</button>\r\n            </div>\r\n            <label className=\"form__cheakbox-text\">\r\n              Subscribe to news\r\n              <input\r\n                className=\"form__cheakbox-input\"\r\n                type=\"checkbox\"\r\n                required\r\n              />\r\n            </label>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/no_photo.bb351cb8.png\";","import { fetchCards, fetchCardsDataToggle, setFetchCardsDataErrorMessage, setFetchCardsDataErrorStatus } from \"../Actions/cardActions\";\r\nimport url from \"../../assets/images/no_photo.png\";\r\nimport { cardActionTypes, actualDataTypes } from \"../../Types/cardType\";\r\n\r\n\r\nconst fetchCardsData = () => {\r\n    const pageCount = Math.floor(Math.random() * 10)\r\n    return async function (dispatch: (arg0: cardActionTypes) => void) {\r\n        try {\r\n            const response = await fetch(`https://api.thecatapi.com/v1/breeds?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=6&page=${pageCount}`)\r\n            const data = await response.json()\r\n\r\n            setTimeout(() => {\r\n                dispatch(fetchCardsDataToggle(false))\r\n            }, 900)\r\n\r\n            const responseData: any[] = data\r\n            const actualData: actualDataTypes[] = []\r\n\r\n            responseData.forEach(item => {\r\n                if (item[\"image\"] === undefined) {\r\n                    const wrongItem = item\r\n                    wrongItem.image = { url }\r\n                }\r\n                if (Object.keys(item.image).length === 0 && item.image.constructor === Object) {\r\n                    const wrongItem = item\r\n                    wrongItem.image = { url }\r\n                }\r\n                // /. response validation\r\n                actualData.push(\r\n                    {\r\n                        id: `${Math.random() + item.id}`,\r\n                        image: item.image.url,\r\n                        name: item.name,\r\n                        location: item.origin,\r\n                        paw: \"4\",\r\n                        age: `${Math.floor(Math.random() * 12) + 1} mth.`,\r\n                        price: +Math.floor(Math.random() * 10000), // max 10000\r\n                        discount: `-${Math.floor(Math.random() * 60) + 10}%`,\r\n                        discountStatus: Boolean(Math.round(Math.random())),\r\n                        cardStatus: Boolean(Math.round(Math.random())),\r\n                        isFavourite: false\r\n                    }\r\n                )\r\n            })\r\n            dispatch(fetchCards(actualData))\r\n        } catch (error: any) {\r\n            dispatch(setFetchCardsDataErrorMessage(`There are some problems with response: ${error.message}.`))\r\n            setTimeout(() => {\r\n                dispatch(fetchCardsDataToggle(false))\r\n                dispatch(setFetchCardsDataErrorStatus(true))\r\n            }, 600);\r\n        }\r\n    }\r\n}\r\n\r\nexport default fetchCardsData;\r\n\r\n","import { setGifData, fetchGifDataToggle, setGifDataErrorStatus, setFetchGifDataErrorMessage } from \"../Actions/cardActions\";\r\nimport { cardActionTypes, gifDataTypes } from \"../../Types/cardType\";\r\n\r\nconst fetchGifData = () => {\r\n    return async function (dispatch: (arg0: cardActionTypes) => void) {\r\n        try {\r\n            const response = await fetch(`https://api.thecatapi.com/v1/images/search?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=8&size=full&mime_types=gif`)\r\n            const data = await response.json()\r\n            // console.log(response)\r\n\r\n            setTimeout(() => {\r\n                dispatch(fetchGifDataToggle(false))\r\n            }, 900)\r\n\r\n            const responseData: any[] = data\r\n            const actualData: gifDataTypes[] = []\r\n\r\n            responseData.forEach(item => {\r\n                actualData.push(\r\n                    {\r\n                        id: `${Math.random() + item.id}`,\r\n                        image: item.url,\r\n                    }\r\n                )\r\n            })\r\n            dispatch(setGifData(actualData))\r\n        } catch (error: any) {\r\n            dispatch(setFetchGifDataErrorMessage(`There are some problems with response: ${error.message}.`))\r\n            setTimeout(() => {\r\n                dispatch(fetchGifDataToggle(false))\r\n                dispatch(setGifDataErrorStatus(true))\r\n            }, 600);\r\n        }\r\n    }\r\n}\r\n\r\nexport default fetchGifData;\r\n\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Outlet } from \"react-router\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport fetchCardsData from \"../../Redux/Middleware/fetchCardsData\";\r\nimport fetchGifData from \"../../Redux/Middleware/fetchGifData\";\r\n\r\nconst Layout: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    dispatch(fetchCardsData())\r\n    dispatch(fetchGifData())\r\n  }, [])\r\n  // \r\n  return (\r\n    <div className=\"page\">\r\n      <Header />\r\n      <main className=\"main\">\r\n        <Outlet />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SvgTemplate from \"../Common/SvgTemplate\";\r\nimport { setFavouriteStatus, setLikedCardsData, setFilteredCardsData } from \"../../Redux/Actions/cardActions\";\r\nimport \"./Card.scss\";\r\n\r\ninterface CardProps {\r\n  id: string;\r\n  image: string;\r\n  name: string;\r\n  location: string;\r\n  age: string;\r\n  paw: string;\r\n  price: number;\r\n  discount: string;\r\n  isFavourite: boolean;\r\n  cardStatus: boolean;\r\n  discountStatus: boolean;\r\n  currentRangeValue: number;\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  id,\r\n  image,\r\n  name,\r\n  location,\r\n  age,\r\n  paw,\r\n  price,\r\n  discount,\r\n  isFavourite,\r\n  cardStatus,\r\n  discountStatus,\r\n  currentRangeValue,\r\n}) => {\r\n  const buttonLike = useRef<HTMLButtonElement>(null!)\r\n  const dispatch = useDispatch();\r\n  // \r\n  const setFavourite = (): void => {\r\n    isFavourite\r\n      ? dispatch(setFavouriteStatus(id, false))\r\n      : dispatch(setFavouriteStatus(id, true));\r\n    dispatch(setLikedCardsData(isFavourite)) // filter cards for likedCardsData\r\n    dispatch(setFilteredCardsData(currentRangeValue)) // update filteredCardsData\r\n  };\r\n  // \r\n\r\n  useEffect(() => {\r\n    buttonLike.current.classList.remove(\"unlike\")\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__preview\">\r\n        <div className=\"card__icons\">\r\n          <span\r\n            className={\r\n              discountStatus\r\n                ? \"card__icons_discount\"\r\n                : \"card__icons_discount-none\"\r\n            }\r\n          >\r\n            {discount}\r\n          </span>\r\n          <button\r\n            ref={buttonLike}\r\n            className={isFavourite ? \"card__icons_button like\" : \"card__icons_button unlike\"}\r\n            disabled={cardStatus ? false : true}\r\n            onClick={setFavourite}\r\n          >\r\n            <span className=\"icon\">\r\n              <SvgTemplate id=\"heart\" />\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <img className=\"card__image\" src={image} alt=\"cat\" />\r\n      </div>\r\n      <div className=\"card__information\">\r\n        <p className=\"card__name\">{name}</p>\r\n        <ul className=\"card__description description\">\r\n          <li className=\"description__item description__item_color\">\r\n            Location: <br />\r\n            <strong>{location}</strong>\r\n          </li>\r\n          <li className=\"description__item description__item_age\">\r\n            <span className=\"bold\">{age}</span> <br /> Age\r\n          </li>\r\n          <li className=\"description__item description__item_paw\">\r\n            <span className=\"bold\">{paw}</span> <br /> Paws count\r\n          </li>\r\n        </ul>\r\n        <p className=\"card__price\">{`${price} USD`}</p>\r\n      </div>\r\n      <button\r\n        className={\r\n          cardStatus ? \"card__button button\" : \"card__button-sold button\"\r\n        }\r\n      >\r\n        {cardStatus ? \"Buy\" : \"Sold\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React, { useMemo, useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from \"./Card\";\r\nimport { RootState } from \"../../Redux/store\";\r\nimport { actualDataTypes } from \"../../Types/cardType\"\r\n\r\n\r\nconst CardList: React.FC = () => {\r\n  const { cards, likedCardsData } = useSelector((state: RootState) => state.cardReducer);\r\n  const { isHomePage, currentRangeValue } = useSelector((state: RootState) => state.headerReducer);\r\n  const [list, setList] = useState<actualDataTypes[]>([])\r\n  // \r\n  useEffect(() => {\r\n    isHomePage ? setList(cards) : setList(likedCardsData)\r\n  }, [cards, likedCardsData, isHomePage])\r\n  // \r\n  const cardList = useMemo(\r\n    () =>\r\n      list.map((item) => {\r\n        return (\r\n          <Card\r\n            key={item.id}\r\n            id={item.id}\r\n            image={item.image}\r\n            name={item.name}\r\n            location={item.location}\r\n            age={item.age}\r\n            paw={item.paw}\r\n            price={item.price}\r\n            discount={item.discount}\r\n            isFavourite={item.isFavourite}\r\n            cardStatus={item.cardStatus}\r\n            discountStatus={item.discountStatus}\r\n            currentRangeValue={currentRangeValue}\r\n          />\r\n        );\r\n      }),\r\n    [list]\r\n  );\r\n\r\n  return <div className=\"gallery__cards\">{cardList}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  toggleSortCardsPriceDecrease,\r\n  toggleSortCardsAgeDecrease,\r\n  toggleSortCardsPriceIncrease,\r\n  toggleSortCardsAgeIncrease,\r\n} from \"../../Redux/Actions/cardActions\";\r\nimport SvgTemplate from \"../Common/SvgTemplate\";\r\n\r\ninterface SortButtonTemplateProps {\r\n  id: string;\r\n  text: string;\r\n  isCardsDataFetching: boolean;\r\n  isCardsDataFetchError: boolean;\r\n  isSorted: boolean;\r\n}\r\n\r\nconst SortButtonTemplate: React.FC<SortButtonTemplateProps> = ({\r\n  id,\r\n  text,\r\n  isCardsDataFetching,\r\n  isCardsDataFetchError,\r\n}) => {\r\n  const [isSwitched, setSwitchStatus] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  //\r\n  const runSort = (): void => {\r\n    setSwitchStatus(!isSwitched);\r\n    if (id === \"price\") {\r\n      dispatch(toggleSortCardsPriceDecrease(id, isSwitched));\r\n    }\r\n    if (id === \"age\") {\r\n      dispatch(toggleSortCardsAgeDecrease(id, isSwitched));\r\n    }\r\n    if (id === \"price\" && isSwitched === false) {\r\n      dispatch(toggleSortCardsPriceIncrease(id, isSwitched));\r\n    }\r\n    if (id === \"age\" && isSwitched === false) {\r\n      dispatch(toggleSortCardsAgeIncrease(id, isSwitched));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"controls__menu\"\r\n      disabled={isCardsDataFetching ? true : isCardsDataFetchError ? true : false}\r\n      onClick={runSort}\r\n    >\r\n      <span className=\"controls__menu_text\">{text}</span>\r\n      <span className={isSwitched ? \"icon sorted\" : \"icon\"}>\r\n        <SvgTemplate id=\"arrow-sort\" />\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SortButtonTemplate;\r\n","import React from \"react\";\r\nimport SortButtonTemplate from \"./SortButtonTemplate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useMemo } from \"react\";\r\nimport { RootState } from \"../../Redux/store\";\r\nimport \"./Sort.scss\";\r\n\r\n\r\nconst SortButtonList: React.FC = () => {\r\n  const { isCardsDataFetching, isCardsDataFetchError, sortButtons } = useSelector(\r\n    (state: RootState) => state.cardReducer\r\n  );\r\n  //\r\n  const sortButtonList = useMemo(\r\n    () =>\r\n      sortButtons.map((item) => {\r\n        return (\r\n          <SortButtonTemplate\r\n            key={item.id}\r\n            id={item.id}\r\n            text={item.text}\r\n            isSorted={item.isSorted}\r\n            isCardsDataFetching={isCardsDataFetching}\r\n            isCardsDataFetchError={isCardsDataFetchError}\r\n          />\r\n        );\r\n      }),\r\n    [isCardsDataFetching, isCardsDataFetchError]\r\n  );\r\n  return <div className=\"controls__wrapper\">{sortButtonList}</div>;\r\n};\r\n\r\nexport default SortButtonList;\r\n","import React from \"react\";\r\nimport \"./Preloader.scss\";\r\n\r\nlet Preloader: React.FC = () => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SvgTemplate from \"../SvgTemplate\";\r\nimport { setNotificationVisibleStatus } from \"../../../Redux/Actions/cardActions\";\r\nimport { changeMainPageStatus } from \"../../../Redux/Actions/headerActions\";\r\nimport { RootState } from \"../../../Redux/store\";\r\nimport \"./Alert.scss\"\r\n\r\nconst Alert: React.FC = () => {\r\n    const { likedCardsData } = useSelector((state: RootState) => state.cardReducer)\r\n    const dispatch = useDispatch()\r\n    const alert = useRef<HTMLDivElement>(null)\r\n    // \r\n    const closeAlert = (): void => {\r\n        dispatch(setNotificationVisibleStatus(false))\r\n        alert.current?.classList.remove(\"visible\")\r\n        alert.current?.classList.add(\"hide\")\r\n    }\r\n\r\n    const relocateToFavouritePage = (): void => {\r\n        dispatch(changeMainPageStatus(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (likedCardsData.length > 1 && likedCardsData.length % 2 === 0) {\r\n            dispatch(setNotificationVisibleStatus(true))\r\n            alert.current?.classList.add(\"visible\")\r\n            alert.current?.classList.add(\"opacity\")\r\n            alert.current?.classList.remove(\"hide\")\r\n            setTimeout(() => {\r\n                dispatch(setNotificationVisibleStatus(false))\r\n                alert.current?.classList.remove(\"visible\")\r\n                alert.current?.classList.add(\"hide\")\r\n            }, 3500);\r\n        }\r\n        if (likedCardsData.length === 0) {\r\n            dispatch(setNotificationVisibleStatus(false))\r\n        }\r\n    }, [likedCardsData])\r\n    // \r\n    return (\r\n        <div ref={alert} className=\"alert\">\r\n            <div className=\"alert__wrapper\">\r\n                <div className=\"alert__notification\">\r\n                    <span className=\"icon\">\r\n                        <Link to=\"Favourite\" onClick={relocateToFavouritePage}>\r\n                            <SvgTemplate id=\"notification\" />\r\n                        </Link>\r\n                    </span>\r\n                </div>\r\n                <div className=\"alert__information\">\r\n                    <span className=\"alert__message\">Visit to Favourite page!</span>\r\n                    <span className=\"alert__count\">{`${likedCardsData.length} in basket!`}</span>\r\n                </div>\r\n                <button className=\"alert__button\" onClick={closeAlert}>\r\n                    <span className=\"icon\">\r\n                        <SvgTemplate id=\"close\" />\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React, { useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CardList from \"../../Card/CardLits\";\r\nimport SvgTemplate from \"../../Common/SvgTemplate\";\r\nimport SortButtonList from \"../../SortButton/SortButtonList\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport Alert from \"../../Common/Alert/Alert\";\r\nimport requestHandler from \"../../../Redux/Middleware/fetchCardsData\";\r\nimport { RootState } from \"../../../Redux/store\";\r\n\r\nconst MainPage: React.FC = () => {\r\n  const { isCardsDataFetching, isCardsDataFetchError, cardsDataFetchErrorMessage } = useSelector(\r\n    (state: RootState) => state.cardReducer\r\n  );\r\n  const dispatch = useDispatch();\r\n  const scrollPoint = useRef<HTMLDivElement>(null!);\r\n  //\r\n  const scrollTop = (): void => {\r\n    scrollPoint.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\r\n  };\r\n\r\n  const fetchRequest = (): void => {\r\n    dispatch(requestHandler());\r\n  };\r\n  //\r\n  return (\r\n    <div ref={scrollPoint} className=\"section\">\r\n      <div className=\"container\">\r\n        <div className=\"gallery\">\r\n          <div className=\"controls\">\r\n            <span className=\"controls__title\">Sorted by:</span>\r\n            <>\r\n              <SortButtonList />\r\n            </>\r\n          </div>\r\n          <div className=\"gallery__wrapper\">\r\n            <>\r\n              {isCardsDataFetching ? (\r\n                <Preloader />\r\n              ) : isCardsDataFetchError ? (\r\n                <div className=\"error\">{cardsDataFetchErrorMessage}</div>\r\n              ) : (\r\n                <CardList />\r\n              )}</>\r\n            <button\r\n              className=\"gallery__button button\"\r\n              disabled={isCardsDataFetching ? true : isCardsDataFetchError ? true : false}\r\n              onClick={fetchRequest}\r\n            >\r\n              Watch more\r\n            </button>\r\n            <button\r\n              className=\"pagination\"\r\n              disabled={isCardsDataFetching ? true : isCardsDataFetchError ? true : false}\r\n              onClick={scrollTop}\r\n            >\r\n              <span className=\"icon\">\r\n                <SvgTemplate id=\"arrow\" />\r\n              </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Alert />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setCurrentRangeValue } from \"../../Redux/Actions/headerActions\";\r\nimport { setFilteredCardsData, setFilteredStatus } from \"../../Redux/Actions/cardActions\"\r\nimport { RootState } from \"../../Redux/store\";\r\nimport \"./Filter.scss\"\r\n\r\nconst Filter: React.FC = () => {\r\n    const { inputRangeTotalValue, inputRangeMinValue, currentRangeValue } = useSelector((state: RootState) => state.headerReducer)\r\n    const input = useRef<HTMLInputElement>(null!)\r\n    const counter = useRef<HTMLDivElement>(null!)\r\n    const fill = useRef<HTMLDivElement>(null!)\r\n    const dispatch = useDispatch()\r\n    // \r\n    const inputRangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const currentValue = +e.target.value\r\n        dispatch(setCurrentRangeValue(currentValue))\r\n        dispatch(setFilteredCardsData(currentValue))\r\n        dispatch(setFilteredStatus(true)) // many calls => return all true \r\n        fill.current.style.width = 100 * (currentValue - inputRangeMinValue) / (inputRangeTotalValue - inputRangeMinValue) + \"%\"\r\n        counter.current.style.left = 100 * (currentValue - inputRangeMinValue) / (inputRangeTotalValue - inputRangeMinValue) + \"%\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setCurrentRangeValue(inputRangeTotalValue))\r\n        dispatch(setFilteredCardsData(inputRangeTotalValue))\r\n        fill.current.style.width = 100 + \"%\"\r\n        counter.current.style.left = 100 + \"%\"\r\n    }, [])\r\n    // \r\n    return (\r\n        <div className=\"filter\">\r\n            <input ref={input} onChange={inputRangeHandler} className=\"filter__input\" type=\"range\" value={currentRangeValue} min={inputRangeMinValue} max={inputRangeTotalValue} step=\"100\" />\r\n            <span className=\"filter__progress\"><span ref={fill} className=\"filter__progress-fill\"></span></span>\r\n            <span ref={counter} className=\"filter__current\">{currentRangeValue}</span>\r\n            <div className=\"filter__indicators\">\r\n                <span className=\"filter__counter filter__counter--min\">{`${inputRangeMinValue} $`}</span>\r\n                <span className=\"filter__counter filter__counter--max\">{`${inputRangeTotalValue} $`}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n\r\n","export default __webpack_public_path__ + \"static/media/empty.cd1884f0.png\";","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Card from \"../../Card/Card\"\r\nimport Filter from \"../../Filter/Filter\";\r\nimport { actualDataTypes } from \"../../../Types/cardType\";\r\nimport { setFilteredStatus } from \"../../../Redux/Actions/cardActions\"\r\nimport { RootState } from \"../../../Redux/store\";\r\nimport empty_image from \"../../../assets/images/empty.png\";\r\nimport \"./FavouritePage.scss\";\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss'; // core Swiper\r\nimport 'swiper/modules/pagination/pagination.scss'; // Pagination module\r\nimport SwiperCore from \"swiper\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n// import required modules\r\nimport { Pagination } from \"swiper\";\r\nSwiperCore.use([Pagination]);\r\n\r\n\r\nconst FavouritePage: React.FC = () => {\r\n  const { currentRangeValue } = useSelector((state: RootState) => state.headerReducer);\r\n  const { likedCardsData, filteredCardsData, isDataFiltered } = useSelector((state: RootState) => state.cardReducer)\r\n  const [emptyLikedCardsDataStatus, setEmptyLikedCardsStatus] = useState<boolean>(true)\r\n  const [emptyFilteredCardsStatus, setEmptyFilteredCardsStatus] = useState<boolean>(true)\r\n  const [totalPrice, setTotalPrice] = useState<number>(0) // current total price of likedCardsData\r\n  const [list, setList] = useState<actualDataTypes[]>([])\r\n  const dispatch = useDispatch()\r\n  // \r\n  const calcTotalPrice = useMemo(() => (array: any[]) => {\r\n    let sum = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n      sum += array[i].price\r\n      setTotalPrice(sum)\r\n    }\r\n  }, [likedCardsData])\r\n\r\n  useEffect(() => {\r\n    isDataFiltered ? setList(filteredCardsData) : setList(likedCardsData)\r\n  }, [filteredCardsData, likedCardsData, isDataFiltered])\r\n\r\n  useEffect(() => {\r\n    setList(filteredCardsData)\r\n  }, [likedCardsData])\r\n\r\n  useEffect(() => {\r\n    if (likedCardsData.length === 0) {\r\n      setEmptyLikedCardsStatus(true)\r\n      dispatch(setFilteredStatus(false))\r\n      setTotalPrice(0)\r\n    } else {\r\n      setEmptyLikedCardsStatus(false)\r\n    }\r\n    if (filteredCardsData.length === 0) {\r\n      setEmptyFilteredCardsStatus(true)\r\n    } else {\r\n      setEmptyFilteredCardsStatus(false)\r\n    }\r\n    calcTotalPrice(likedCardsData)\r\n  }, [likedCardsData, filteredCardsData])\r\n  // \r\n  return (\r\n    <div className=\"section\">\r\n      <div className={emptyLikedCardsDataStatus ? \"basket empty\" : \"basket\"}>\r\n        <div className=\"basket__wrapper\">\r\n          {emptyLikedCardsDataStatus ?\r\n            <></>\r\n            :\r\n            <div className=\"basket__section\">\r\n              <div className=\"basket__price\">\r\n                <div className=\"price\">\r\n                  <h3 className=\"price__text\">Total price:</h3>\r\n                  <div className=\"price__section\">\r\n                    <span className=\"price__count\">{totalPrice}</span>\r\n                    <span className=\"price__currency\">$</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"basket__filter\">\r\n                <Filter />\r\n              </div>\r\n            </div>\r\n          }\r\n          <div className={emptyLikedCardsDataStatus || emptyFilteredCardsStatus ? \"basket__slider empty\" : \"basket__slider\"}>\r\n            {emptyLikedCardsDataStatus || emptyFilteredCardsStatus\r\n              ?\r\n              <div className=\"empty\">\r\n                <img className=\"empty__preview\" src={empty_image} alt=\"empty\" />\r\n                <h4 className=\"empty__text\">No matches</h4>\r\n              </div>\r\n              :\r\n              <>\r\n                <Swiper className=\"mySwiper\"\r\n                  slidesPerView={3}\r\n                  spaceBetween={5}\r\n                  breakpoints={{\r\n                    320: {\r\n                      slidesPerView: 1,\r\n                      spaceBetween: 30,\r\n                    },\r\n                    360: {\r\n                      slidesPerView: 1,\r\n                      spaceBetween: 30,\r\n                    },\r\n                    768: {\r\n                      slidesPerView: 2,\r\n                      spaceBetween: 30,\r\n                    },\r\n                    1024: {\r\n                      slidesPerView: 2.5,\r\n                      spaceBetween: 30,\r\n                    },\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <SwiperSlide key={item.id}>\r\n                        <Card\r\n                          key={item.id}\r\n                          id={item.id}\r\n                          image={item.image}\r\n                          name={item.name}\r\n                          location={item.location}\r\n                          age={item.age}\r\n                          paw={item.paw}\r\n                          price={item.price}\r\n                          discount={item.discount}\r\n                          isFavourite={item.isFavourite}\r\n                          cardStatus={item.cardStatus}\r\n                          discountStatus={item.discountStatus}\r\n                          currentRangeValue={currentRangeValue}\r\n                        />\r\n                      </SwiperSlide>\r\n                    )\r\n                  })}\r\n                </Swiper>\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavouritePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport fetchGifData from \"../../../Redux/Middleware/fetchGifData\";\r\nimport { fetchGifDataToggle } from \"../../../Redux/Actions/cardActions\";\r\nimport { RootState } from \"../../../Redux/store\";\r\nimport \"./OverviewPage.scss\"\r\n\r\nconst OverviewPage: React.FC = () => {\r\n  const { gifData, isGifDataFetching, isGifDataFetchError, gifDataFetchErrorMessage } = useSelector((state: RootState) => state.cardReducer)\r\n  const dispatch = useDispatch();\r\n  // \r\n  const fetchNewGifData = (): void => {\r\n    dispatch(fetchGifDataToggle(true))\r\n    dispatch(fetchGifData())\r\n    setTimeout(() => {\r\n      dispatch(fetchGifDataToggle(false))\r\n    }, 1000);\r\n  }\r\n  // \r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"container container--middle\">\r\n        <div className=\"overview\">\r\n          <div className=\"overview__wrapper\">\r\n            {isGifDataFetching ?\r\n              <Preloader />\r\n              :\r\n              isGifDataFetchError\r\n                ?\r\n                <div className=\"error\">{gifDataFetchErrorMessage}</div>\r\n                :\r\n                <div className=\"overview__gallery\">\r\n                  {\r\n                    gifData.map(item => {\r\n                      return (\r\n                        <div className=\"overview__card\" key={item.id}>\r\n                          <img className=\"overview__image\" src={item.image} alt=\"funny\" />\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n            }\r\n            <button className=\"overview__button\" onClick={fetchNewGifData} disabled={isGifDataFetching ? true : isGifDataFetchError ? true : false}>Watch others</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPage;\r\n","export default __webpack_public_path__ + \"static/media/in_process.448aa860.png\";","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { changeMainPageStatus } from \"../../../Redux/Actions/headerActions\";\r\nimport inProcessImage from \"../../../assets/images/in_process.png\";\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  //\r\n  const goHomePage = (): void => {\r\n    dispatch(changeMainPageStatus(true));\r\n    navigate(\"/Cats-Store\", { replace: true });\r\n  };\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"section__wrapper\">\r\n        <img className=\"section__image\" src={inProcessImage} alt=\"cat\" />\r\n        <h1 className=\"section__title\">PROFILE PAGE IN PROCESS</h1>\r\n        <p className=\"section__link\">\r\n          return to home{\" \"}\r\n          <span>\r\n            <Link to=\"/Cats-Store\" onClick={goHomePage}>\r\n              page\r\n            </Link>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","export default __webpack_public_path__ + \"static/media/no_found.bee11de8.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeMainPageStatus } from \"../../../Redux/Actions/headerActions\";\r\nimport noFoundPage from \"../../../assets/images/no_found.png\";\r\n\r\n\r\nconst NoFoundPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  //\r\n  const goHomePage = (): void => {\r\n    dispatch(changeMainPageStatus(true));\r\n    navigate(\"/Cats-Store\", { replace: true });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section\">\r\n        <div className=\"section__wrapper\">\r\n          <img className=\"section__image\" src={noFoundPage} alt=\"404 error\" />\r\n          <h1 className=\"section__title section__title-error\">404</h1>\r\n          <p className=\"section__link\">\r\n            Sorry, this page doesn't exist, return to home{\" \"}\r\n            <span>\r\n              <Link to=\"/Cats-Store\" onClick={goHomePage}>\r\n                page\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoFoundPage;\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Layout from \"./components/Common/Layout\";\r\nimport MainPage from \"./components/Pages/MainPage/MainPage\";\r\nimport FavouritePage from \"./components/Pages/FavouritePage/FavouritePage\";\r\nimport OverviewPage from \"./components/Pages/OverviewPage/OverviewPage\";\r\nimport ProfilePage from \"./components/Pages/ProfilePage/ProfilePage\";\r\nimport NoFoundPage from \"./components/Pages/NoFoundPage/NoFoundPage\";\r\nimport \"./App.scss\";\r\nimport \"./assets/scss/reset.scss\";\r\nimport \"./assets/scss/media.scss\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/Cats-Store\" element={<Layout />}>\r\n          <Route index element={<MainPage />} />\r\n          <Route path=\"Favourite\" element={<FavouritePage />} />\r\n          <Route path=\"Live\" element={<OverviewPage />} />\r\n          <Route path=\"Profile\" element={<ProfilePage />} />\r\n          <Route path=\"*\" element={<NoFoundPage />} />\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './Redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from \"./App\"\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n"],"sourceRoot":""}