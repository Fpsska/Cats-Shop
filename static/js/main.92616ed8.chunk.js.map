{"version":3,"sources":["reportWebVitals.js","store/actions/cardActions.ts","store/reducers/cardReducer.ts","store/actions/headerActions.ts","store/reducers/headerReducer.ts","store/actions/formActions.ts","store/reducers/formReducer.ts","store/actions/filterActions.ts","store/reducers/filterReducer.ts","store/store.ts","store/hooks.ts","helpers/declinateByNumber.ts","components/BurgerMenu/BurgerMenu.tsx","components/Common/Preloaders/TextPreloader/TextPreloader.tsx","components/NavLayout/NavLinkTemplate.tsx","components/NavLayout/NavList.tsx","components/Burger/Burger.tsx","components/NavLayout/NavLayout.tsx","assets/images/logo.svg","components/Header/HeaderTitle.tsx","components/Header/Header.tsx","hooks/useLocationData.ts","components/Footer/Footer.tsx","assets/images/no_photo.png","store/async-actions/fetchCardsData.ts","store/async-actions/fetchGifsData.ts","components/Common/Alert/FormAlert/FormAlert.tsx","components/Common/Layout.tsx","components/Card/Card.tsx","components/Card/CardLits.tsx","components/SortButton/SortButtonTemplate.tsx","components/SortButton/SortButtonList.tsx","components/Common/Preloaders/PagePreloader/PagePreloader.tsx","components/Common/Alert/BasketAlert/BasketAlert.tsx","components/Pages/MainPage/MainPage.tsx","components/Filter/Filter.tsx","assets/images/empty.png","components/Pages/FavouritePage/FavouritePage.tsx","helpers/filterByPrice.ts","components/Pages/OverviewPage/OverviewPage.tsx","assets/images/in_process.png","components/Pages/ProfilePage/ProfilePage.tsx","assets/images/no_found.png","components/Pages/NoFoundPage/NoFoundPage.tsx","components/App/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ACTION_FETCH_CARDS","ACTION_FETCH_CARDS_DATA_TOGGLE","ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS","ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE","ACTION_SET_GIF_DATA","ACTION_FETCH_GIF_DATA_TOGGLE","ACTION_SET_GIF_DATA_ERROR_STATUS","ACTION_SET_GIF_DATA_ERROR_MESSAGE","ACTION_SET_LIKED_CARDS_DATA","ACTION_SET_FAVOURITE_STATUS","ACTION_SET_NOTIFICATION_VISIBLE_STATUS","ACTION_SORT_CARDS_BY_PRICE","ACTION_SORT_CARDS_BY_AGE","ACTION_SET_FILTERED_CARDS_DATA_LENGTH","ACTION_SET_BUTTON_SORTED_STATUS","fetchCards","data","type","payload","fetchCardsDataToggle","value","setFetchCardsDataErrorMessage","setGifData","fetchGifDataToggle","setFetchGifDataErrorMessage","setNotificationVisibleStatus","status","setFavouriteStatus","id","initialState","cards","gifData","likedCardsData","filteredCardsData","filteredCardsDataLength","sortButtons","text","isSorted","isCardsDataFetching","isCardsDataFetchError","cardsDataFetchErrorMessage","isGifDataFetching","isGifDataFetchError","gifDataFetchErrorMessage","isNotificationVisible","cardReducer","state","action","map","item","isFavourite","filter","sort","a","b","price","parseInt","age","ACTION_CHANGE_BURGER_VISIBLE_STATUS","ACTION_CHANGE_BURGER_OPENED_STATUS","ACTION_GET_INPUT_VALUE","ACTION_CHANGE_MAIN_PAGE_STATUS","ACTION_CHANGE_OVERVIEW_PAGE_STATUS","changeBurgerVisibleStatus","changeBurgerOpenedStatus","getInputValue","changeMainPageStatus","headerLinks","link","isBurgerHidden","isBurgerOpen","isBodyScrolling","isHomePage","isOverviewPage","emailValue","headerReducer","ACTION_SET_FORM_ALERT_VISIBLE_STATUS","ACTION_SET_FORM_SUBMIT_STATUS","setFormAlertVisibleStatus","isFormAlertVisible","isFormSubmitted","formReducer","ACTION_SET_CURRENT_RANGE_VALUE","ACTION_SET_TOTAL_RANGE_VALUE","setCurrentRangeValue","inputRangeTotalValue","inputRangeMinValue","currentRangeValue","filterReducer","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","declinateByNum","quantity","array","Math","abs","BurgerMenu","dispatch","className","onClick","document","body","style","overflowY","TextPreloader","NavLinkTemplate","to","toLocaleLowerCase","NavList","role","Burger","useEffect","keyHandler","e","code","addEventListener","removeEventListener","NavLayout","useState","window","innerWidth","width","setWidth","breakpoint","windowReizeHandler","HeaderTitle","children","Header","mainTextValue","length","filteredTextValue","useLocation","href","preventDefault","src","logo","alt","defineTextContent","Footer","unavailable","setUnavailableStatus","formRef","useRef","onFormSubmit","current","reset","setTimeout","ref","onSubmit","placeholder","disabled","required","onChange","target","fetchCardsData","pageCount","floor","random","fetch","response","ok","console","error","json","actualData","forEach","image","url","image_placeholder","push","name","location","origin","paw","discount","discountStatus","Boolean","round","cardStatus","message","fetchGifsData","FormAlert","color","size","autoFocus","Layout","Card","props","buttonLikeRef","classList","remove","onError","onerror","CardList","SortButtonTemplate","isSwitched","setSwitchStatus","makeDataSort","setButtonSortedStatus","sortCardsByPrice","sortCardsByAge","SortButtonList","button","PagePreloader","BasketAlert","alert","add","MainPage","scrollPoint","scrollIntoView","block","behavior","Filter","inputRef","counterRef","fillRef","left","step","min","max","currentValue","inputRangeHandler","SwiperCore","use","Pagination","FavouritePage","filteredData","setFilteredData","isLikedDataEmpty","setLikedDataEmptyStatus","isFilteredDataEmpty","setFilteredDataEmptyStatus","totalPrice","setTotalPrice","slidesPerView","spaceBetween","sliderBreakpointsConfig","filterProps","pricesArr","maxPriceValue","totalSum","reduce","acc","empty_image","breakpoints","OverviewPage","gifItem","fetchGifData","ProfilePage","navigate","useNavigate","inProcessImage","replace","NoFoundPage","noFoundPage","App","path","element","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.92616ed8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { IactualData, IgifData, cardActionTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_FETCH_CARDS = 'ACTION_FETCH_CARDS';\r\nexport const ACTION_FETCH_CARDS_DATA_TOGGLE = 'ACTION_FETCH_CARDS_DATA_TOGGLE';\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS = 'ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS';\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE = 'ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE';\r\n\r\nexport const ACTION_SET_GIF_DATA = 'ACTION_SET_GIF_DATA';\r\nexport const ACTION_FETCH_GIF_DATA_TOGGLE = 'ACTION_FETCH_GIF_DATA_TOGGLE';\r\nexport const ACTION_SET_GIF_DATA_ERROR_STATUS = 'ACTION_SET_GIF_DATA_ERROR_STATUS';\r\nexport const ACTION_SET_GIF_DATA_ERROR_MESSAGE = 'ACTION_SET_GIF_DATA_ERROR_MESSAGE';\r\n\r\nexport const ACTION_SET_LIKED_CARDS_DATA = 'ACTION_SET_LIKED_CARDS_DATA';\r\nexport const ACTION_SET_FAVOURITE_STATUS = 'ACTION_SET_FAVOURITE_STATUS';\r\nexport const ACTION_SET_NOTIFICATION_VISIBLE_STATUS = 'ACTION_SET_NOTIFICATION_VISIBLE_STATUS';\r\n\r\nexport const ACTION_SORT_CARDS_BY_PRICE = 'ACTION_SORT_CARDS_BY_PRICE';\r\nexport const ACTION_SORT_CARDS_BY_AGE = 'ACTION_SORT_CARDS_BY_AGE';\r\n\r\nexport const ACTION_SET_FILTERED_CARDS_DATA_LENGTH = 'ACTION_SET_FILTERED_CARDS_DATA_LENGTH';\r\n\r\nexport const ACTION_SET_BUTTON_SORTED_STATUS = 'ACTION_SET_BUTTON_SORTED_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const fetchCards = (data: IactualData[]): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_CARDS,\r\n    payload: data\r\n  };\r\n};\r\nexport const fetchCardsDataToggle = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchCardsDataErrorStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchCardsDataErrorMessage = (value: string): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setGifData = (data: IgifData[]): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA,\r\n    payload: data\r\n  };\r\n};\r\nexport const fetchGifDataToggle = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_GIF_DATA_TOGGLE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setGifDataErrorStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchGifDataErrorMessage = (value: string): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setNotificationVisibleStatus = (status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n    payload: {\r\n      status\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setLikedCardsData = (): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_LIKED_CARDS_DATA\r\n  };\r\n};\r\n\r\n\r\nexport const setFavouriteStatus = (id: string, status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FAVOURITE_STATUS,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const sortCardsByPrice = (id: string, status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_BY_PRICE,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const sortCardsByAge = (id: string, status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_BY_AGE,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const setFilteredCardsDataLength = (value: number): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FILTERED_CARDS_DATA_LENGTH,\r\n    payload: value\r\n  };\r\n};\r\n\r\n\r\nexport const setButtonSortedStatus = (id: string, status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_BUTTON_SORTED_STATUS,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\n\r\n","import {\r\n  ACTION_FETCH_CARDS,\r\n  ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n  ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n  ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n  ACTION_SET_GIF_DATA,\r\n  ACTION_FETCH_GIF_DATA_TOGGLE,\r\n  ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n  ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n  ACTION_SET_FAVOURITE_STATUS,\r\n  ACTION_SET_LIKED_CARDS_DATA,\r\n  ACTION_SET_FILTERED_CARDS_DATA_LENGTH,\r\n  ACTION_SORT_CARDS_BY_PRICE,\r\n  ACTION_SORT_CARDS_BY_AGE,\r\n  ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n  ACTION_SET_BUTTON_SORTED_STATUS\r\n} from '../actions/cardActions';\r\n\r\nimport { IcardState, cardActionTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst initialState: IcardState = {\r\n  cards: [],\r\n  gifData: [],\r\n  likedCardsData: [],\r\n  filteredCardsData: [],\r\n  filteredCardsDataLength: 0,\r\n  sortButtons: [\r\n    {\r\n      id: 'price',\r\n      text: 'Price',\r\n      isSorted: false\r\n    },\r\n    {\r\n      id: 'age',\r\n      text: 'Age',\r\n      isSorted: false\r\n    }\r\n  ],\r\n  isCardsDataFetching: true,\r\n  isCardsDataFetchError: false,\r\n  cardsDataFetchErrorMessage: 'error from fetchCardsData thunk',\r\n  isGifDataFetching: true,\r\n  isGifDataFetchError: false,\r\n  gifDataFetchErrorMessage: 'error from fetchGifData thunk',\r\n  isNotificationVisible: false\r\n};\r\n\r\n// /. initialState\r\n\r\nconst cardReducer = (state = initialState, action: cardActionTypes): IcardState => {\r\n  switch (action.type) {\r\n    case ACTION_FETCH_CARDS:\r\n      return {\r\n        ...state,\r\n        cards: [...state.cards, ...action.payload]\r\n      };\r\n\r\n    case ACTION_FETCH_CARDS_DATA_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isCardsDataFetching: action.payload.value\r\n      };\r\n    case ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS:\r\n      return {\r\n        ...state,\r\n        isCardsDataFetchError: action.payload.value\r\n      };\r\n    case ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        cardsDataFetchErrorMessage: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA:\r\n      return {\r\n        ...state,\r\n        gifData: action.payload\r\n      };\r\n    case ACTION_FETCH_GIF_DATA_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isGifDataFetching: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA_ERROR_STATUS:\r\n      return {\r\n        ...state,\r\n        isGifDataFetchError: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        gifDataFetchErrorMessage: action.payload.value\r\n      };\r\n\r\n    case ACTION_SET_FAVOURITE_STATUS:\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map((item) => {\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              isFavourite: action.payload.status\r\n            };\r\n          }\r\n          return item;\r\n        })\r\n      };\r\n\r\n    case ACTION_SET_LIKED_CARDS_DATA:\r\n      return {\r\n        ...state,\r\n        likedCardsData: state.cards.filter(item => item.isFavourite === true)\r\n      };\r\n\r\n    case ACTION_SET_NOTIFICATION_VISIBLE_STATUS:\r\n      return {\r\n        ...state,\r\n        isNotificationVisible: action.payload.status\r\n      };\r\n    case ACTION_SORT_CARDS_BY_PRICE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return action.payload.status ? b.price - a.price : a.price - b.price;\r\n          })\r\n        ]\r\n      };\r\n    case ACTION_SORT_CARDS_BY_AGE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return action.payload.status\r\n              ? parseInt(b.age, 10) - parseInt(a.age, 10)\r\n              : parseInt(a.age, 10) - parseInt(b.age, 10);\r\n          })\r\n        ]\r\n      };\r\n\r\n    case ACTION_SET_FILTERED_CARDS_DATA_LENGTH:\r\n      return {\r\n        ...state,\r\n        filteredCardsDataLength: action.payload\r\n      };\r\n\r\n    case ACTION_SET_BUTTON_SORTED_STATUS:\r\n      return {\r\n        ...state,\r\n        sortButtons: state.sortButtons.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, isSorted: action.payload.status }\r\n            : item\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { headerActionTypes } from '../../Types/headerTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_CHANGE_BURGER_VISIBLE_STATUS = 'ACTION_CHANGE_BURGER_VISIBLE_STATUS';\r\nexport const ACTION_CHANGE_BURGER_OPENED_STATUS = 'ACTION_CHANGE_BURGER_OPENED_STATUS';\r\nexport const ACTION_GET_INPUT_VALUE = 'ACTION_SET_INPUT_VALUE';\r\nexport const ACTION_CHANGE_MAIN_PAGE_STATUS = 'ACTION_CHANGE_MAIN_PAGE_STATUS';\r\nexport const ACTION_CHANGE_OVERVIEW_PAGE_STATUS = 'ACTION_CHANGE_OVERVIEW_PAGE_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const changeBurgerVisibleStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_BURGER_VISIBLE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\nexport const changeBurgerOpenedStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_BURGER_OPENED_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\n\r\nexport const getInputValue = (value: string): headerActionTypes => {\r\n  return {\r\n    type: ACTION_GET_INPUT_VALUE,\r\n    payload: value\r\n  };\r\n};\r\n\r\n\r\nexport const changeMainPageStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\nexport const changeOverviewPageStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_OVERVIEW_PAGE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { IheaderState, headerActionTypes } from '../../Types/headerTypes';\r\n\r\nimport {\r\n  ACTION_CHANGE_BURGER_VISIBLE_STATUS,\r\n  ACTION_CHANGE_BURGER_OPENED_STATUS,\r\n  ACTION_GET_INPUT_VALUE,\r\n  ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n  ACTION_CHANGE_OVERVIEW_PAGE_STATUS\r\n} from '../actions/headerActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: IheaderState = {\r\n  headerLinks: [\r\n    {\r\n      id: 1,\r\n      text: 'Main',\r\n      link: '/Cats-Store/'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Favourite',\r\n      link: 'Favourite'\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Live',\r\n      link: 'Live'\r\n    },\r\n    {\r\n      id: 4,\r\n      text: 'Profile',\r\n      link: 'Profile'\r\n    }\r\n  ],\r\n  isBurgerHidden: true,\r\n  isBurgerOpen: false,\r\n  isBodyScrolling: true,\r\n  isHomePage: true,\r\n  isOverviewPage: false,\r\n  emailValue: ''\r\n};\r\n\r\n// /. initialState\r\n\r\nconst headerReducer = (state = initialState, action: headerActionTypes): IheaderState => {\r\n  switch (action.type) {\r\n    case ACTION_CHANGE_BURGER_VISIBLE_STATUS:\r\n      return {\r\n        ...state,\r\n        isBurgerHidden: action.payload\r\n      };\r\n    case ACTION_CHANGE_BURGER_OPENED_STATUS:\r\n      return {\r\n        ...state,\r\n        isBurgerOpen: action.payload\r\n      };\r\n    case ACTION_GET_INPUT_VALUE:\r\n      return {\r\n        ...state,\r\n        emailValue: action.payload\r\n      };\r\n    case ACTION_CHANGE_MAIN_PAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        isHomePage: action.payload\r\n      };\r\n    case ACTION_CHANGE_OVERVIEW_PAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        isOverviewPage: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default headerReducer;\r\n","import { formActionTypes } from '../../Types/formTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_SET_FORM_ALERT_VISIBLE_STATUS = 'ACTION_SET_FORM_ALERT_VISIBLE_STATUS';\r\nexport const ACTION_SET_FORM_SUBMIT_STATUS = 'ACTION_SET_FORM_SUBMIT_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const setFormAlertVisibleStatus = (status: boolean): formActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FORM_ALERT_VISIBLE_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\nexport const setFormSubmitStatus = (status: boolean): formActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FORM_SUBMIT_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { IformState, formActionTypes } from '../../Types/formTypes';\r\n\r\nimport {\r\n    ACTION_SET_FORM_ALERT_VISIBLE_STATUS,\r\n    ACTION_SET_FORM_SUBMIT_STATUS\r\n} from '../actions/formActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: IformState = {\r\n    isFormAlertVisible: false,\r\n    isFormSubmitted: false\r\n};\r\n\r\n// /. initialState\r\n\r\nconst formReducer = (\r\n    state = initialState,\r\n    action: formActionTypes\r\n): IformState => {\r\n    switch (action.type) {\r\n        case ACTION_SET_FORM_ALERT_VISIBLE_STATUS:\r\n            return {\r\n                ...state,\r\n                isFormAlertVisible: action.payload\r\n            };\r\n        case ACTION_SET_FORM_SUBMIT_STATUS:\r\n            return {\r\n                ...state,\r\n                isFormSubmitted: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default formReducer;\r\n","import { filterActionTypes } from '../../Types/filterTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_SET_CURRENT_RANGE_VALUE = 'ACTION_SET_CURRENT_RANGE_VALUE';\r\nexport const ACTION_SET_TOTAL_RANGE_VALUE = 'ACTION_SET_TOTAL_RANGE_VALUE';\r\n\r\n// /. AC Names\r\n\r\nexport const setCurrentRangeValue = (value: number): filterActionTypes => {\r\n    return {\r\n        type: ACTION_SET_CURRENT_RANGE_VALUE,\r\n        payload: value\r\n    };\r\n};\r\n\r\nexport const setTotalRangeValue = (value: number): filterActionTypes => {\r\n    return {\r\n        type: ACTION_SET_TOTAL_RANGE_VALUE,\r\n        payload: value\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { IfilterState, filterActionTypes } from '../../Types/filterTypes';\r\n\r\nimport {\r\n    ACTION_SET_CURRENT_RANGE_VALUE,\r\n    ACTION_SET_TOTAL_RANGE_VALUE\r\n} from '../actions/filterActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: IfilterState = {\r\n    inputRangeTotalValue: 0,\r\n    inputRangeMinValue: 0,\r\n    currentRangeValue: 0\r\n};\r\n\r\n// /. initialState\r\n\r\nconst filterReducer = (state = initialState, action: filterActionTypes): IfilterState => {\r\n    switch (action.type) {\r\n        case ACTION_SET_CURRENT_RANGE_VALUE:\r\n            return {\r\n                ...state,\r\n                currentRangeValue: action.payload\r\n            };\r\n        case ACTION_SET_TOTAL_RANGE_VALUE:\r\n            return {\r\n                ...state,\r\n                inputRangeTotalValue: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport cardReducer from './reducers/cardReducer';\r\nimport headerReducer from './reducers/headerReducer';\r\nimport formReducer from './reducers/formReducer';\r\nimport filterReducer from './reducers/filterReducer';\r\n\r\n// /. Imports\r\n\r\nconst reducers = combineReducers({\r\n  cardReducer: cardReducer,\r\n  headerReducer: headerReducer,\r\n  formReducer: formReducer,\r\n  filterReducer: filterReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nexport default store;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// /. imports\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","export function declinateByNum(quantity: number, array: any[]): string {\r\n    quantity = Math.abs(quantity);\r\n\r\n    const itemIDX = (quantity <= 1 ? 0 : 1);\r\n\r\n    return array[itemIDX];\r\n};","import React from 'react';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport { changeBurgerOpenedStatus } from '../../store/actions/headerActions';\r\n\r\nimport './menu.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    isBurgerOpen: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst BurgerMenu: React.FC<propTypes> = ({ isBurgerOpen }) => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    const defineScrollStatus = (): void => {\r\n        isBurgerOpen\r\n            ? document.body.style.overflowY = 'auto'\r\n            : document.body.style.overflowY = 'hidden';\r\n    };\r\n\r\n    const openBurger = (): void => {\r\n        dispatch(changeBurgerOpenedStatus(!isBurgerOpen));\r\n        defineScrollStatus();\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"menu\"\r\n            area-label={isBurgerOpen ? 'close burger menu' : 'open burger menu'}\r\n            onClick={openBurger}>\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-top opened'\r\n                        : 'menu__line menu__line-top'\r\n                }\r\n            ></span>\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-middle opened'\r\n                        : 'menu__line menu__line-middle'\r\n                }\r\n            ></span>\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-bottom opened'\r\n                        : 'menu__line menu__line-bottom'\r\n                }\r\n            ></span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default BurgerMenu;","import React from 'react';\r\n\r\nimport './TextPreloader.scss';\r\n\r\n// /. Imports\r\n\r\nconst TextPreloader: React.FC = () => {\r\n    return (\r\n        <h1 className=\"loader\">\r\n            Loading\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default TextPreloader;","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport {\r\n  changeMainPageStatus,\r\n  changeBurgerOpenedStatus\r\n} from '../../store/actions/headerActions';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n  link: string;\r\n  text: string;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst NavLinkTemplate: React.FC<propTypes> = ({ link, text }) => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const linkHandler = (): void => {\r\n    dispatch(changeBurgerOpenedStatus(false));\r\n    document.body.style.overflowY = 'auto';\r\n  };\r\n\r\n  return (\r\n    <li className=\"nav__menu_item\">\r\n      <NavLink\r\n        className=\"nav__menu_link\"\r\n        to={link}\r\n        state={text.toLocaleLowerCase()}\r\n        onClick={() => linkHandler()}\r\n      >\r\n        {text}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavLinkTemplate;\r\n","import React from 'react';\r\n\r\nimport NavLinkTemplate from './NavLinkTemplate';\r\n\r\nimport './Nav.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n  headerLinks: any[];\r\n  role?: string\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst NavList: React.FC<propTypes> = ({ headerLinks, role }) => {\r\n  return (\r\n    <nav className={role ? `nav ${role}` : 'nav'}>\r\n      <ul className=\"nav__menu\">\r\n        {headerLinks.map(item => {\r\n          return (\r\n            <NavLinkTemplate\r\n              key={item.id}\r\n              {...item}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavList;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport { changeBurgerOpenedStatus } from '../../store/actions/headerActions';\r\n\r\nimport NavList from '../NavLayout/NavList';\r\n\r\nimport './Burger.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n  headerLinks: any[];\r\n  isBurgerOpen: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst Burger: React.FC<propTypes> = ({ headerLinks, isBurgerOpen }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent): void => {\r\n      if (isBurgerOpen && e.code === 'Escape') {\r\n        dispatch(changeBurgerOpenedStatus(false));\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', keyHandler);\r\n    return () => {\r\n      document.removeEventListener('keydown', keyHandler);\r\n    };\r\n  }, [isBurgerOpen]);\r\n\r\n  return (\r\n    <div className={isBurgerOpen ? 'burger active' : 'burger'}>\r\n      <NavList\r\n        headerLinks={headerLinks}\r\n        role={'burger__nav'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\n\r\nimport { changeBurgerVisibleStatus } from '../../store/actions/headerActions';\r\n\r\nimport Burger from '../Burger/Burger';\r\n\r\nimport NavList from './NavList';\r\n\r\n// /. Imports\r\n\r\nconst NavLayout: React.FC = () => {\r\n\r\n    const { headerLinks, isBurgerOpen } = useAppSelector(state => state.headerReducer);\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    const [breakpoint] = useState<number>(800);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        const windowReizeHandler = (): void => {\r\n            setWidth(window.innerWidth);\r\n        };\r\n\r\n        window.addEventListener('resize', windowReizeHandler);\r\n        return () => {\r\n            window.removeEventListener('resize', windowReizeHandler);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        width <= breakpoint ?\r\n            dispatch(changeBurgerVisibleStatus(false)) :\r\n            dispatch(changeBurgerVisibleStatus(true));\r\n    }, [width, breakpoint]);\r\n\r\n    return (\r\n        <>\r\n            {width <= breakpoint ?\r\n                <Burger\r\n                    headerLinks={headerLinks}\r\n                    isBurgerOpen={isBurgerOpen}\r\n                />\r\n                :\r\n                <NavList\r\n                    headerLinks={headerLinks}\r\n                    role={'header__nav'}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavLayout;","export default __webpack_public_path__ + \"static/media/logo.c8358bcd.svg\";","import React from 'react';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    children: string\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst HeaderTitle: React.FC<propTypes> = ({ children }) => {\r\n    return (\r\n        <h1 className=\"header__title\">{children}</h1>\r\n    );\r\n};\r\n\r\nexport default HeaderTitle;","import React from 'react';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport { declinateByNum } from '../../helpers/declinateByNumber';\r\nimport { useLocationData } from '../../hooks/useLocationData';\r\n\r\nimport BurgerMenu from '../BurgerMenu/BurgerMenu';\r\nimport TextPreloader from '../Common/Preloaders/TextPreloader/TextPreloader';\r\nimport NavLayout from '../NavLayout/NavLayout';\r\n\r\nimport logo from '../../assets/images/logo.svg';\r\n\r\nimport HeaderTitle from './HeaderTitle';\r\n\r\nimport './Header.scss';\r\n\r\n// /. Imports\r\n\r\nconst Header: React.FC = () => {\r\n  const {\r\n    isBurgerHidden,\r\n    isBurgerOpen\r\n  } = useAppSelector(state => state.headerReducer);\r\n\r\n  const {\r\n    cards,\r\n    filteredCardsDataLength,\r\n    isCardsDataFetching\r\n  } = useAppSelector(state => state.cardReducer);\r\n\r\n  const mainTextValue = declinateByNum(cards.length, ['cat', 'cats']);\r\n  const filteredTextValue = declinateByNum(filteredCardsDataLength, ['cat', 'cats']);\r\n  const { state } = useLocationData();\r\n\r\n\r\n  const defineTextContent = (value: string): string => {\r\n    switch (value) {\r\n      case null: // for display correct header__title content by first render\r\n        return `Found ${cards.length} ${mainTextValue}`;\r\n      case ('main'):\r\n        return `Found ${cards.length} ${mainTextValue}`;\r\n      case ('favourite'):\r\n        return `Selected ${filteredCardsDataLength} ${filteredTextValue}`;\r\n      default:\r\n        return 'Have a good day ;)';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <section className=\"header__section\">\r\n\r\n          <a className=\"header__logo logo\" href=\"#\" onClick={e => e.preventDefault()}>\r\n            <img className=\"logo__image\" src={logo} alt=\"logo\" />\r\n          </a>\r\n\r\n          <NavLayout />\r\n\r\n          <>\r\n            {!isBurgerHidden && <BurgerMenu isBurgerOpen={isBurgerOpen} />}\r\n          </>\r\n\r\n          <div className=\"header__telephone telephone\">\r\n            <a className=\"telephone__number\" href=\"tel:+544 3490 00000\">\r\n              +544 3490 00000\r\n            </a>\r\n            <span className=\"telephone__description\">Call soon!</span>\r\n          </div>\r\n\r\n        </section>\r\n\r\n        <>\r\n          {isCardsDataFetching ?\r\n            <TextPreloader />\r\n            :\r\n            <HeaderTitle>\r\n              {defineTextContent(state)}\r\n            </HeaderTitle>\r\n          }\r\n        </>\r\n\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useLocation } from 'react-router-dom';\r\n\r\n// /. imports\r\n\r\ninterface returnedPropsTypes {\r\n    hash: string\r\n    key: string,\r\n    pathname: string,\r\n    search: string,\r\n    state: any\r\n}\r\n\r\n// /. Interfaces\r\n\r\nexport function useLocationData(): returnedPropsTypes {\r\n    const location = useLocation();\r\n\r\n    return location;\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\n\r\nimport { getInputValue } from '../../store/actions/headerActions';\r\nimport { setFormAlertVisibleStatus, setFormSubmitStatus } from '../../store/actions/formActions';\r\n\r\nimport './Footer.scss';\r\n\r\n// /. Imports\r\n\r\nconst Footer: React.FC = () => {\r\n  const { emailValue } = useAppSelector(state => state.headerReducer);\r\n  const { isFormAlertVisible, isFormSubmitted } = useAppSelector(state => state.formReducer);\r\n\r\n  const [unavailable, setUnavailableStatus] = useState<boolean>(false);\r\n\r\n\r\n  const formRef = useRef<HTMLFormElement>(null!);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    dispatch(setFormAlertVisibleStatus(true));\r\n    dispatch(setFormSubmitStatus(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFormSubmitted && !isFormAlertVisible) {\r\n      formRef.current.reset();\r\n      dispatch(getInputValue(''));\r\n      setUnavailableStatus(true);\r\n      setTimeout(() => {\r\n        setUnavailableStatus(false);\r\n      }, 10000);\r\n    }\r\n  }, [isFormAlertVisible, isFormSubmitted]);\r\n\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <section className=\"footer__wrapper\">\r\n          <article className=\"footer__description\">\r\n            <h2 className=\"footer__title\">Hurry up to buy!</h2>\r\n            <p className=\"footer__subtitle\">\r\n              Subscribe and catch all the promotions\r\n            </p>\r\n          </article>\r\n          <form ref={formRef} className=\"form\" onSubmit={e => onFormSubmit(e)}>\r\n            <div className=\"form__controls\">\r\n              <input\r\n                className=\"form__input\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                disabled={unavailable}\r\n                required\r\n                value={emailValue}\r\n                onChange={(e) => dispatch(getInputValue(e.target.value))}\r\n              />\r\n              <button className=\"form__button button\" type=\"submit\" disabled={unavailable}>Subscribe</button>\r\n            </div>\r\n            <label className=\"form__cheakbox-label\">\r\n              Subscribe to news\r\n              <input\r\n                className=\"form__cheakbox-input\"\r\n                type=\"checkbox\"\r\n                disabled={unavailable}\r\n                required\r\n              />\r\n              <span className=\"form__cheakbox-fake\"></span>\r\n            </label>\r\n          </form>\r\n        </section>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/no_photo.bb351cb8.png\";","import { Dispatch } from 'redux';\r\n\r\nimport {\r\n    fetchCards,\r\n    fetchCardsDataToggle,\r\n    setFetchCardsDataErrorMessage,\r\n    setFetchCardsDataErrorStatus\r\n} from '../actions/cardActions';\r\n\r\nimport { cardActionTypes, IactualData } from '../../Types/cardTypes';\r\n\r\nimport image_placeholder from '../../assets/images/no_photo.png';\r\n\r\n\r\n// /. Imports\r\n\r\nconst fetchCardsData = () => {\r\n    const pageCount = Math.floor(Math.random() * 10);\r\n\r\n    return async function (dispatch: Dispatch<cardActionTypes>) {\r\n        try {\r\n            const response = await fetch(`https://api.thecatapi.com/v1/breeds?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=6&page=${pageCount}`);\r\n\r\n            if (!response.ok) {\r\n                dispatch(setFetchCardsDataErrorMessage('Error: There are some problems with response of breeds data'));\r\n                console.error('There are some problems with response');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            const actualData: IactualData[] = [];\r\n\r\n            data.forEach((item: any) => {\r\n\r\n                if (!item['image'] || !item.image) {\r\n                    item.image = { url: image_placeholder };\r\n                }\r\n                // /. response validation\r\n\r\n                actualData.push(\r\n                    {\r\n                        id: `${Math.random() + item.id}`,\r\n                        image: item.image.url,\r\n                        name: item.name,\r\n                        location: item.origin,\r\n                        paw: '4',\r\n                        age: `${Math.floor(Math.random() * 12) + 1} mth.`,\r\n                        price: +Math.floor(Math.random() * 10000), // random integer from 0 to 10 000\r\n                        discount: `-${Math.floor(Math.random() * 60) + 10}%`, // random integer from 10 to 60\r\n                        discountStatus: Boolean(Math.round(Math.random())),\r\n                        cardStatus: Boolean(Math.round(Math.random())),\r\n                        isFavourite: false\r\n                    }\r\n                );\r\n            });\r\n\r\n            dispatch(fetchCards(actualData));\r\n\r\n        } catch (error: any) {\r\n            dispatch(setFetchCardsDataErrorMessage(`Error: ${error.message} breeds data.`));\r\n            dispatch(setFetchCardsDataErrorStatus(true));\r\n            console.error(error.message);\r\n        } finally {\r\n            setTimeout(() => {\r\n                dispatch(fetchCardsDataToggle(false));\r\n            }, 500);\r\n        }\r\n    };\r\n};\r\n\r\nexport default fetchCardsData;\r\n\r\n","import { Dispatch } from 'redux';\r\n\r\nimport {\r\n    setGifData,\r\n    fetchGifDataToggle,\r\n    setGifDataErrorStatus,\r\n    setFetchGifDataErrorMessage\r\n} from '../actions/cardActions';\r\n\r\nimport { cardActionTypes, IgifData } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst fetchGifsData = () => {\r\n    return async function (dispatch: Dispatch<cardActionTypes>) {\r\n        try {\r\n            const response = await fetch('https://api.thecatapi.com/v1/images/search?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=8&size=full&mime_types=gif');\r\n\r\n            if (!response.ok) {\r\n                dispatch(setFetchGifDataErrorMessage('Error: There are some problems with response of gifs data'));\r\n                console.error('There are some problems with response');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            const actualData: IgifData[] = [];\r\n\r\n            data.forEach((item: any) => {\r\n                actualData.push(\r\n                    {\r\n                        id: `${Math.random() + item.id}`,\r\n                        image: item.url\r\n                    }\r\n                );\r\n            });\r\n\r\n            dispatch(setGifData(actualData));\r\n\r\n        } catch (error: any) {\r\n            dispatch(setFetchGifDataErrorMessage(`Error: ${error.message} gifs data.`));\r\n            dispatch(setGifDataErrorStatus(true));\r\n            console.error(error.message);\r\n        } finally {\r\n            setTimeout(() => {\r\n                dispatch(fetchGifDataToggle(false));\r\n            }, 500);\r\n        }\r\n    };\r\n};\r\n\r\nexport default fetchGifsData;\r\n\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\n\r\nimport { useAppDispatch } from '../../../../store/hooks';\r\n\r\nimport { setFormAlertVisibleStatus } from '../../../../store/actions/formActions';\r\n\r\nimport './FormAlert.scss';\r\n\r\n// /. Imports\r\n\r\nconst FormAlert: React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const submitAlert = (): void => {\r\n        dispatch(setFormAlertVisibleStatus(false));\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const keyHandler = (e: KeyboardEvent): void => {\r\n            if (e.code === 'Escape') {\r\n                dispatch(setFormAlertVisibleStatus(false));\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', keyHandler);\r\n        return () => {\r\n            document.removeEventListener('keydown', keyHandler);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"form-alert\" role=\"alert\">\r\n            <div className=\"form-alert__wrapper\">\r\n                <div className=\"form-alert__description\">\r\n                    <RiErrorWarningLine color={'#e52d2d'} size={'24px'} />\r\n                    <p className=\"form-alert__text\" >Sorry! Function temporarily unavailable</p>\r\n                </div>\r\n                <div className=\"form-alert__controls\">\r\n                    <button className=\"form-alert__button\" autoFocus onClick={submitAlert} >Ok</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormAlert;","import React, { useEffect } from 'react';\r\n\r\nimport { Outlet } from 'react-router';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport fetchCardsData from '../../store/async-actions/fetchCardsData';\r\nimport fetchGifsData from '../../store/async-actions/fetchGifsData';\r\n\r\nimport FormAlert from './Alert/FormAlert/FormAlert';\r\n\r\n// /. Imports\r\n\r\nconst Layout: React.FC = () => {\r\n  const { isFormAlertVisible } = useAppSelector(state => state.formReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCardsData());\r\n    dispatch(fetchGifsData());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <>\r\n        {isFormAlertVisible && <FormAlert />}\r\n      </>\r\n      <Header />\r\n      <main className=\"main\">\r\n        <Outlet />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { BsHeartFill } from 'react-icons/bs';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport { setFavouriteStatus, setLikedCardsData } from '../../store/actions/cardActions';\r\n\r\nimport image_placeholder from '../../assets/images/no_photo.png';\r\n\r\nimport './Card.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n  id: string;\r\n  image: string;\r\n  name: string;\r\n  location: string;\r\n  age: string;\r\n  paw: string;\r\n  price: number;\r\n  discount: string;\r\n  isFavourite: boolean;\r\n  cardStatus: boolean;\r\n  discountStatus: boolean;\r\n  currentRangeValue: number;\r\n  role?: string\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst Card: React.FC<propTypes> = (props) => {\r\n\r\n  const {\r\n    id,\r\n    image,\r\n    name,\r\n    location,\r\n    age,\r\n    paw,\r\n    price,\r\n    discount,\r\n    isFavourite,\r\n    cardStatus,\r\n    discountStatus,\r\n    role\r\n  } = props;\r\n\r\n  const buttonLikeRef = useRef<HTMLButtonElement>(null!);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const addToFavourite = (): void => {\r\n    isFavourite\r\n      ? dispatch(setFavouriteStatus(id, false))\r\n      : dispatch(setFavouriteStatus(id, true));\r\n\r\n    dispatch(setLikedCardsData()); // update likedCardsData[]\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    buttonLikeRef.current.classList.remove('unlike');\r\n  }, []);\r\n\r\n  return (\r\n    <article className={role ? `${role} card` : 'card'}>\r\n      <div className=\"card__preview\">\r\n        <div className=\"card__icons\">\r\n          {discountStatus &&\r\n            <span className=\"card__icons_discount\">{discount}</span>\r\n          }\r\n          <button\r\n            className={isFavourite ? 'card__icons_button like' : 'card__icons_button unlike'}\r\n            ref={buttonLikeRef}\r\n            disabled={!cardStatus}\r\n            onClick={addToFavourite}\r\n            aria-label=\"add to favourite\"\r\n          >\r\n            <BsHeartFill color={'#fff'} size={'42px'} />\r\n          </button>\r\n        </div>\r\n        <img\r\n          className=\"card__image\"\r\n          src={image}\r\n          alt=\"cat\"\r\n          onError={e => {\r\n            (e.target as HTMLImageElement).src = image_placeholder;\r\n            (e.target as HTMLImageElement).onerror = null;\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"card__information\">\r\n        <h3 className=\"card__name\">{name}</h3>\r\n        <ul className=\"card__description description\">\r\n          <li className=\"description__item description__item_location\">\r\n            Location: <br />\r\n            <strong>{location}</strong>\r\n          </li>\r\n          <li className=\"description__item description__item_age\">\r\n            <span className=\"bold\">{age}</span> <br /> Age\r\n          </li>\r\n          <li className=\"description__item description__item_paw\">\r\n            <span className=\"bold\">{paw}</span> <br /> Paws count\r\n          </li>\r\n        </ul>\r\n        <span className=\"card__price\">{`${price} USD`}</span>\r\n      </div>\r\n      <button className={cardStatus ? 'card__button button' : 'card__button-sold button'}\r\n      >\r\n        {cardStatus ? 'Buy' : 'Sold'}\r\n      </button>\r\n    </article>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport { IactualData } from '../../Types/cardTypes';\r\n\r\nimport Card from './Card';\r\n\r\n// /. Imports\r\n\r\nconst CardList: React.FC = () => {\r\n  const { cards } = useAppSelector(state => state.cardReducer);\r\n  const { currentRangeValue } = useAppSelector(state => state.filterReducer);\r\n\r\n  return (\r\n    <div className=\"gallery__cards\">\r\n      {cards.map((item: IactualData) => {\r\n        return (\r\n          <Card\r\n            key={item.id}\r\n            {...item}\r\n\r\n            currentRangeValue={currentRangeValue}\r\n          />\r\n        );\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState } from 'react';\r\n\r\nimport { MdKeyboardArrowUp, MdKeyboardArrowDown } from 'react-icons/md';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport { sortCardsByPrice, sortCardsByAge, setButtonSortedStatus } from '../../store/actions/cardActions';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n  id: string;\r\n  text: string;\r\n  isCardsDataFetching: boolean;\r\n  isCardsDataFetchError: boolean;\r\n  isSorted: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst SortButtonTemplate: React.FC<propTypes> = (props) => {\r\n\r\n  const { id, text, isCardsDataFetching, isCardsDataFetchError } = props;\r\n\r\n  const [isSwitched, setSwitchStatus] = useState<boolean>(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const makeDataSort = (e: React.SyntheticEvent): void => {\r\n    setSwitchStatus(!isSwitched);\r\n\r\n    dispatch(setButtonSortedStatus(id, isSwitched));\r\n\r\n    id === 'price'\r\n      ? dispatch(sortCardsByPrice(id, isSwitched))\r\n      : dispatch(sortCardsByAge(id, isSwitched));\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"controls__menu\"\r\n      disabled={isCardsDataFetching || isCardsDataFetchError}\r\n      aria-label={`sort by ${id}`}\r\n      onClick={e => makeDataSort(e)}\r\n    >\r\n      <span className=\"controls__menu_text\">{text}</span>\r\n      <span>\r\n        {isSwitched ?\r\n          <MdKeyboardArrowUp color={'#000'} size={'26px'} />\r\n          : <MdKeyboardArrowDown color={'#000'} size={'26px'} />\r\n        }\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SortButtonTemplate;\r\n","import React from 'react';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport SortButtonTemplate from './SortButtonTemplate';\r\n\r\nimport './Sort.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n  role?: string\r\n}\r\n\r\n// /. Interfaces\r\n\r\nconst SortButtonList: React.FC<propTypes> = ({ role }) => {\r\n\r\n  const {\r\n    isCardsDataFetching,\r\n    isCardsDataFetchError,\r\n    sortButtons\r\n  } = useAppSelector(state => state.cardReducer);\r\n\r\n  return (\r\n    <div className={role ? `${role} controls` : 'controls'}>\r\n      <div className=\"controls__wrapper\">\r\n        <span className=\"controls__title\">Sorted by:</span>\r\n        {sortButtons.map(button => {\r\n          return (\r\n            <SortButtonTemplate\r\n              key={button.id}\r\n              {...button}\r\n\r\n              isCardsDataFetching={isCardsDataFetching}\r\n              isCardsDataFetchError={isCardsDataFetchError}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortButtonList;\r\n","import React from 'react';\r\n\r\nimport './PagePreloader.scss';\r\n\r\n// /. Imports\r\n\r\nconst PagePreloader: React.FC = () => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PagePreloader;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\nimport { IoCloseOutline } from 'react-icons/io5';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../../store/hooks';\r\n\r\nimport { setNotificationVisibleStatus } from '../../../../store/actions/cardActions';\r\nimport { changeMainPageStatus } from '../../../../store/actions/headerActions';\r\n\r\nimport './BasketAlert.scss';\r\n\r\n// /. Imports\r\n\r\nconst BasketAlert: React.FC = () => {\r\n    const { likedCardsData } = useAppSelector(state => state.cardReducer);\r\n\r\n    const alert = useRef<HTMLDivElement>(null);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    const closeAlert = (): void => {\r\n        dispatch(setNotificationVisibleStatus(false));\r\n        alert.current?.classList.remove('visible');\r\n        alert.current?.classList.add('hide');\r\n    };\r\n\r\n    const relocateToFavouritePage = (): void => {\r\n        dispatch(changeMainPageStatus(false));\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (likedCardsData.length > 1 && likedCardsData.length % 2 === 0) { // logic of show/hide BasketAlert\r\n            dispatch(setNotificationVisibleStatus(true));\r\n            alert.current?.classList.add('visible');\r\n            alert.current?.classList.add('opacity');\r\n            alert.current?.classList.remove('hide');\r\n            setTimeout(() => {\r\n                dispatch(setNotificationVisibleStatus(false));\r\n                alert.current?.classList.remove('visible');\r\n                alert.current?.classList.add('hide');\r\n            }, 3500);\r\n        }\r\n        if (likedCardsData.length === 0) {\r\n            dispatch(setNotificationVisibleStatus(false));\r\n        }\r\n    }, [likedCardsData]);\r\n\r\n    return (\r\n        <div ref={alert} className=\"alert\" role=\"alert\">\r\n            <div className=\"alert__wrapper\">\r\n                <div className=\"alert__notification\" >\r\n                    <Link to=\"Favourite\" onClick={relocateToFavouritePage} aria-label=\"redirect to basket\">\r\n                        <RiErrorWarningLine color={'#000'} size={'22px'} />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"alert__information\">\r\n                    <span className=\"alert__message\">Visit to Favourite page!</span>\r\n                    <span className=\"alert__count\">{`${likedCardsData.length} in basket!`}</span>\r\n                </div>\r\n                <button className=\"alert__button\" onClick={closeAlert} aria-label=\"close this modal\">\r\n                    <IoCloseOutline color={'#000'} size={'18px'} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BasketAlert;","import React, { useRef } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { MdKeyboardArrowUp } from 'react-icons/md';\r\n\r\nimport { useAppSelector } from '../../../store/hooks';\r\n\r\nimport CardList from '../../Card/CardLits';\r\nimport SortButtonList from '../../SortButton/SortButtonList';\r\nimport PagePreloader from '../../Common/Preloaders/PagePreloader/PagePreloader';\r\nimport BasketAlert from '../../Common/Alert/BasketAlert/BasketAlert';\r\n\r\nimport fetchCardsData from '../../../store/async-actions/fetchCardsData';\r\n\r\n// /. Imports\r\n\r\nconst MainPage: React.FC = () => {\r\n  const {\r\n    isCardsDataFetching,\r\n    isCardsDataFetchError,\r\n    cardsDataFetchErrorMessage\r\n  } = useAppSelector(state => state.cardReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const scrollPoint = useRef<HTMLDivElement>(null!);\r\n\r\n  const scrollTop = (): void => {\r\n    scrollPoint.current.scrollIntoView({ block: 'start', behavior: 'smooth' });\r\n  };\r\n\r\n  const makeFetchRequest = (): void => {\r\n    dispatch(fetchCardsData());\r\n  };\r\n\r\n  return (\r\n    <div ref={scrollPoint} className=\"section\">\r\n      <div className=\"container\">\r\n        <section className=\"gallery\">\r\n          <SortButtonList role={'gallery__controls'} />\r\n          <div className=\"gallery__wrapper\">\r\n            <>\r\n              {isCardsDataFetching ?\r\n                <PagePreloader />\r\n                : isCardsDataFetchError ?\r\n                  <p className=\"error\">{cardsDataFetchErrorMessage}</p>\r\n                  :\r\n                  <CardList />\r\n              }\r\n            </>\r\n            <button\r\n              className=\"gallery__button button\"\r\n              disabled={isCardsDataFetching || isCardsDataFetchError}\r\n              onClick={makeFetchRequest}\r\n            >\r\n              Watch more\r\n            </button>\r\n            <button\r\n              className=\"pagination\"\r\n              disabled={isCardsDataFetching || isCardsDataFetchError}\r\n              onClick={scrollTop}\r\n              aria-label=\"scroll top\"\r\n            >\r\n              <MdKeyboardArrowUp color={'#fff'} size={'36px'} aria-label=\"scroll top\" />\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <BasketAlert />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\n\r\nimport { setCurrentRangeValue } from '../../store/actions/filterActions';\r\n\r\nimport './Filter.scss';\r\n\r\n// /. Imports\r\n\r\nconst Filter: React.FC = () => {\r\n\r\n    const {\r\n        inputRangeTotalValue,\r\n        inputRangeMinValue,\r\n        currentRangeValue\r\n    } = useAppSelector(state => state.filterReducer);\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null!);\r\n    const counterRef = useRef<HTMLDivElement>(null!);\r\n    const fillRef = useRef<HTMLDivElement>(null!);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    const inputRangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const currentValue = +e.target.value;\r\n\r\n        dispatch(setCurrentRangeValue(currentValue));\r\n\r\n        fillRef.current.style.width = `${100 * (currentValue - inputRangeMinValue) / (inputRangeTotalValue - inputRangeMinValue)}%`;\r\n        counterRef.current.style.left = `${100 * (currentValue - inputRangeMinValue) / (inputRangeTotalValue - inputRangeMinValue)}%`;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setCurrentRangeValue(inputRangeTotalValue));\r\n        fillRef.current.style.width = `${100}%`;\r\n        counterRef.current.style.left = `${100}%`;\r\n    }, []);\r\n\r\n    return (\r\n        <form className=\"filter\">\r\n            <input\r\n                ref={inputRef}\r\n                className=\"filter__input\"\r\n                type=\"range\"\r\n                step=\"1\"\r\n                value={currentRangeValue}\r\n                min={inputRangeMinValue}\r\n                max={inputRangeTotalValue}\r\n                onChange={e => inputRangeHandler(e)}\r\n            />\r\n            <span className=\"filter__progress\"><span ref={fillRef} className=\"filter__progress-fill\"></span></span>\r\n            <span ref={counterRef} className=\"filter__current\">{currentRangeValue}</span>\r\n            <div className=\"filter__indicators\">\r\n                <span className=\"filter__counter filter__counter--min\">{`${inputRangeMinValue} $`}</span>\r\n                <span className=\"filter__counter filter__counter--max\">{`${inputRangeTotalValue} $`}</span>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n\r\n","export default __webpack_public_path__ + \"static/media/empty.cd1884f0.png\";","import React, { useState, useEffect } from 'react';\r\n\r\nimport SwiperCore from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n\r\nimport { Pagination } from 'swiper';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\n\r\nimport { IactualData } from '../../../Types/cardTypes';\r\nimport { setFilteredCardsDataLength } from '../../../store/actions/cardActions';\r\nimport { setTotalRangeValue } from '../../../store/actions/filterActions';\r\n\r\nimport { filterByPrice } from '../../../helpers/filterByPrice';\r\n\r\nimport Card from '../../Card/Card';\r\nimport Filter from '../../Filter/Filter';\r\n\r\nimport empty_image from '../../../assets/images/empty.png';\r\n\r\nimport './FavouritePage.scss';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss'; // core Swiper\r\nimport 'swiper/modules/pagination/pagination.scss'; // Pagination module\r\n// import required modules\r\nSwiperCore.use([Pagination]);\r\n\r\n// /. Imports\r\n\r\nconst FavouritePage: React.FC = () => {\r\n  const { currentRangeValue } = useAppSelector(state => state.filterReducer);\r\n  const { likedCardsData } = useAppSelector(state => state.cardReducer);\r\n\r\n  const [filteredData, setFilteredData] = useState<IactualData[]>(likedCardsData);\r\n  const [isLikedDataEmpty, setLikedDataEmptyStatus] = useState<boolean>(true);\r\n  const [isFilteredDataEmpty, setFilteredDataEmptyStatus] = useState<boolean>(true);\r\n  const [totalPrice, setTotalPrice] = useState<number>(0); // current total price of likedCardsData\r\n  const [sliderBreakpointsConfig] = useState<{ [key: number]: { [key: string]: number } }>({\r\n    320: {\r\n      slidesPerView: 1,\r\n      spaceBetween: 30\r\n    },\r\n    360: {\r\n      slidesPerView: 1,\r\n      spaceBetween: 30\r\n    },\r\n    768: {\r\n      slidesPerView: 2,\r\n      spaceBetween: 30\r\n    },\r\n    1024: {\r\n      slidesPerView: 2.5,\r\n      spaceBetween: 30\r\n    }\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    // run filter likedCardsData[]\r\n    setFilteredData(filterByPrice(likedCardsData, currentRangeValue));\r\n\r\n    // handle likedCardsData[] empty status\r\n    likedCardsData.length === 0 ? setLikedDataEmptyStatus(true) : setLikedDataEmptyStatus(false);\r\n\r\n    // calc max price of basket item\r\n    const pricesArr = likedCardsData.map(({ price }) => price); // [1000, 2000, 3000]\r\n    const maxPriceValue = Math.max(...pricesArr); // 3000\r\n    dispatch(setTotalRangeValue(maxPriceValue));\r\n  }, [likedCardsData, currentRangeValue]);\r\n\r\n  useEffect(() => {\r\n    // handle filteredData[] empty status\r\n    filteredData.length === 0 ? setFilteredDataEmptyStatus(true) : setFilteredDataEmptyStatus(false);\r\n    // set current filteredData[] length\r\n    dispatch(setFilteredCardsDataLength(filteredData.length));\r\n  }, [filteredData]);\r\n\r\n  useEffect(() => {\r\n    // calc current basket price\r\n    const totalSum = filteredData.reduce((acc, { price }) => acc + price, 0);\r\n    setTotalPrice(totalSum);\r\n  }, [filteredData]);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <section className={isFilteredDataEmpty ? 'basket empty' : 'basket'}>\r\n        <div className=\"basket__wrapper\">\r\n          {!isLikedDataEmpty &&\r\n            <div className=\"basket__section\">\r\n              <div className=\"basket__price\">\r\n                <div className=\"price\">\r\n                  <h3 className=\"price__text\">Total price:</h3>\r\n                  <div className=\"price__section\">\r\n                    <span className=\"price__count\">{totalPrice}</span>\r\n                    <span className=\"price__currency\">$</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"basket__filter\">\r\n                <Filter />\r\n              </div>\r\n            </div>\r\n          }\r\n          <div className=\"basket__slider\">\r\n            {isFilteredDataEmpty\r\n              ?\r\n              <div className=\"empty\">\r\n                <img className=\"empty__preview\" src={empty_image} alt=\"empty\" />\r\n                <h4 className=\"empty__text\">No matches</h4>\r\n              </div>\r\n              :\r\n              <Swiper className=\"mySwiper\"\r\n                slidesPerView={3}\r\n                spaceBetween={5}\r\n                breakpoints={sliderBreakpointsConfig}\r\n              >\r\n                {filteredData.map((item: IactualData) => {\r\n                  return (\r\n                    <SwiperSlide key={item.id}>\r\n                      <Card\r\n                        key={item.id}\r\n                        {...item}\r\n                        role={'basket__card'}\r\n\r\n                        currentRangeValue={currentRangeValue}\r\n                      />\r\n                    </SwiperSlide>\r\n                  );\r\n                })}\r\n              </Swiper>\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavouritePage;\r\n","export function filterByPrice(array: any[], filterProps: number): any[] {\r\n    return array.filter(({ price }) => price <= filterProps);\r\n};","import React, { useState } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useAppSelector } from '../../../store/hooks';\r\n\r\nimport { IgifData } from '../../../Types/cardTypes';\r\n\r\nimport { fetchGifDataToggle } from '../../../store/actions/cardActions';\r\n\r\nimport fetchGifData from '../../../store/async-actions/fetchGifsData';\r\n\r\nimport PagePreloader from '../../Common/Preloaders/PagePreloader/PagePreloader';\r\n\r\nimport './OverviewPage.scss';\r\n\r\n// /. Imports\r\n\r\nconst OverviewPage: React.FC = () => {\r\n  const {\r\n    gifData,\r\n    isGifDataFetching,\r\n    isGifDataFetchError,\r\n    gifDataFetchErrorMessage\r\n  } = useAppSelector(state => state.cardReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const fetchNewGifData = (): void => {\r\n    dispatch(fetchGifData());\r\n    dispatch(fetchGifDataToggle(true));\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"container container--middle\">\r\n        <section className=\"overview\">\r\n          <div className=\"overview__wrapper\">\r\n            {isGifDataFetching ?\r\n              <PagePreloader />\r\n              :\r\n              isGifDataFetchError\r\n                ?\r\n                <p className=\"error\">{gifDataFetchErrorMessage}</p>\r\n                :\r\n                <div className=\"overview__gallery\">\r\n                  {\r\n                    gifData.map((gifItem: IgifData) => {\r\n                      return (\r\n                        <div className=\"overview__card\" key={gifItem.id}>\r\n                          <img className=\"overview__image\" src={gifItem.image} alt=\"funny gifts\" />\r\n                        </div>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n            }\r\n            <button\r\n              className=\"overview__button\"\r\n              onClick={fetchNewGifData}\r\n              disabled={isGifDataFetching || isGifDataFetchError}\r\n            >\r\n              Watch others\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPage;\r\n","export default __webpack_public_path__ + \"static/media/in_process.448aa860.png\";","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { useAppDispatch } from '../../../store/hooks';\r\n\r\nimport { changeMainPageStatus } from '../../../store/actions/headerActions';\r\n\r\nimport inProcessImage from '../../../assets/images/in_process.png';\r\n\r\n// /. Imports\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  const goHomePage = (): void => {\r\n    dispatch(changeMainPageStatus(true));\r\n    navigate('/Cats-Store', { replace: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <article className=\"section__wrapper\">\r\n        <img className=\"section__image\" src={inProcessImage} alt=\"cat\" />\r\n        <h1 className=\"section__title\">PROFILE PAGE IN PROCESS</h1>\r\n        <p className=\"section__link\">\r\n          return to home{' '}\r\n          <span>\r\n            <Link to=\"/Cats-Store\" onClick={goHomePage}>page</Link>\r\n          </span>\r\n        </p>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","export default __webpack_public_path__ + \"static/media/no_found.bee11de8.png\";","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { useAppDispatch } from '../../../store/hooks';\r\n\r\nimport { changeMainPageStatus } from '../../../store/actions/headerActions';\r\n\r\nimport noFoundPage from '../../../assets/images/no_found.png';\r\n\r\n// /. Imports\r\n\r\nconst NoFoundPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  const goHomePage = (): void => {\r\n    dispatch(changeMainPageStatus(true));\r\n    navigate('/Cats-Store', { replace: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <article className=\"section__wrapper\">\r\n        <img className=\"section__image\" src={noFoundPage} alt=\"404 error\" />\r\n        <h1 className=\"section__title section__title-error\">404</h1>\r\n        <p className=\"section__link\">\r\n          Sorry, this page doesn't exist, return to home{' '}\r\n          <span>\r\n            <Link to=\"/Cats-Store\" onClick={goHomePage}>\r\n              page\r\n            </Link>\r\n          </span>\r\n        </p>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoFoundPage;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Layout from '../Common/Layout';\r\nimport MainPage from '../Pages/MainPage/MainPage';\r\nimport FavouritePage from '../Pages/FavouritePage/FavouritePage';\r\nimport OverviewPage from '../Pages/OverviewPage/OverviewPage';\r\nimport ProfilePage from '../Pages/ProfilePage/ProfilePage';\r\nimport NoFoundPage from '../Pages/NoFoundPage/NoFoundPage';\r\n\r\nimport './App.css';\r\nimport '../../assets/styles/_style.scss';\r\nimport '../../assets/styles/_media.scss';\r\n\r\n// /. Imports\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/Cats-Store\" element={<Layout />}>\r\n          <Route index element={<MainPage />} />\r\n          <Route path=\"Favourite\" element={<FavouritePage />} />\r\n          <Route path=\"Live\" element={<OverviewPage />} />\r\n          <Route path=\"Profile\" element={<ProfilePage />} />\r\n          <Route path=\"*\" element={<NoFoundPage />} />\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store/store';\r\n\r\nimport App from './components/App/App';\r\n\r\n// /. Imports\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n"],"sourceRoot":""}