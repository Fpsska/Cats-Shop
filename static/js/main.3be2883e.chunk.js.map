{"version":3,"sources":["store/actions/cardActions.ts","store/reducers/cardReducer.ts","store/actions/headerActions.ts","store/reducers/headerReducer.ts","store/actions/formActions.ts","store/reducers/formReducer.ts","store/actions/filterActions.ts","store/reducers/filterReducer.ts","store/store.ts","store/hooks.ts","assets/images/no_photo.png","store/async-actions/fetchCardsData.ts","store/async-actions/fetchGifsData.ts","helpers/declinateByNumber.ts","components/BurgerMenu/BurgerMenu.tsx","components/Common/Preloaders/TextPreloader/TextPreloader.tsx","components/NavLayout/NavLinkTemplate.tsx","components/NavLayout/NavList.tsx","components/Burger/Burger.tsx","components/NavLayout/NavLayout.tsx","assets/images/logo.svg","components/Header/HeaderTitle.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Common/Alert/FormAlert/FormAlert.tsx","components/Common/Layout.tsx","components/Card/Card.tsx","components/Card/CardLits.tsx","components/SortButton/SortButtonTemplate.tsx","components/SortButton/SortButtonList.tsx","components/Common/Preloaders/PagePreloader/PagePreloader.tsx","components/Common/Alert/BasketAlert/BasketAlert.tsx","components/Pages/MainPage/MainPage.tsx","components/Filter/Filter.tsx","assets/images/empty.png","components/Pages/FavouritePage/FavouritePage.tsx","helpers/filterByPrice.ts","components/Pages/OverviewPage/OverviewPage.tsx","assets/images/in_process.png","components/Pages/ProfilePage/ProfilePage.tsx","assets/images/no_found.png","components/Pages/NoFoundPage/NoFoundPage.tsx","components/App/App.tsx","reportWebVitals.js","index.tsx"],"names":["ACTION_FETCH_CARDS","ACTION_FETCH_CARDS_DATA_TOGGLE","ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS","ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE","ACTION_SET_GIF_DATA","ACTION_FETCH_GIF_DATA_TOGGLE","ACTION_SET_GIF_DATA_ERROR_STATUS","ACTION_SET_GIF_DATA_ERROR_MESSAGE","ACTION_SET_LIKED_CARDS_DATA","ACTION_SET_FAVOURITE_STATUS","ACTION_SET_NOTIFICATION_VISIBLE_STATUS","ACTION_SORT_CARDS_BY_PRICE","ACTION_SORT_CARDS_BY_AGE","ACTION_SET_FILTERED_CARDS_DATA_LENGTH","ACTION_SET_BUTTON_SORTED_STATUS","fetchCards","data","type","payload","fetchCardsDataToggle","value","setFetchCardsDataErrorMessage","setGifData","fetchGifDataToggle","setFetchGifDataErrorMessage","setNotificationVisibleStatus","status","setFavouriteStatus","id","initialState","cards","gifData","likedCardsData","filteredCardsData","filteredCardsDataLength","sortButtons","text","isSorted","isCardsDataFetching","isCardsDataFetchError","cardsDataFetchErrorMessage","isGifDataFetching","isGifDataFetchError","gifDataFetchErrorMessage","isNotificationVisible","cardReducer","state","arguments","length","undefined","action","_objectSpread","concat","_toConsumableArray","map","item","isFavourite","filter","sort","a","b","price","parseInt","age","ACTION_CHANGE_BURGER_VISIBLE_STATUS","ACTION_CHANGE_BURGER_OPENED_STATUS","ACTION_GET_INPUT_VALUE","ACTION_CHANGE_MAIN_PAGE_STATUS","ACTION_CHANGE_OVERVIEW_PAGE_STATUS","changeBurgerVisibleStatus","changeBurgerOpenedStatus","getInputValue","changeMainPageStatus","headerLinks","link","isBurgerHidden","isBurgerOpen","isBodyScrolling","isHomePage","isOverviewPage","emailValue","headerReducer","ACTION_SET_FORM_ALERT_VISIBLE_STATUS","ACTION_SET_FORM_SUBMIT_STATUS","setFormAlertVisibleStatus","isFormAlertVisible","isFormSubmitted","formReducer","ACTION_SET_CURRENT_RANGE_VALUE","ACTION_SET_TOTAL_RANGE_VALUE","setCurrentRangeValue","inputRangeTotalValue","inputRangeMinValue","currentRangeValue","filterReducer","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","fetchCardsData","pageCount","Math","floor","random","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","actualData","wrap","_context","prev","next","fetch","sent","ok","console","error","json","forEach","image","url","image_placeholder","push","name","location","origin","paw","discount","discountStatus","Boolean","round","cardStatus","t0","message","setTimeout","finish","stop","_x","apply","fetchGifsData","declinateByNum","quantity","array","abs","BurgerMenu","_jsxs","className","onClick","document","body","style","overflowY","children","_jsx","TextPreloader","NavLinkTemplate","NavLink","to","toLocaleLowerCase","NavList","role","Burger","useEffect","keyHandler","e","code","addEventListener","removeEventListener","NavLayout","_useAppSelector","_useState","useState","window","innerWidth","_useState2","_slicedToArray","width","setWidth","_useState3","breakpoint","windowReizeHandler","_Fragment","HeaderTitle","Header","_useAppSelector2","useLocation","mainTextValue","filteredTextValue","href","preventDefault","src","logo","alt","defineTextContent","Footer","unavailable","setUnavailableStatus","formRef","useRef","onFormSubmit","current","reset","ref","onSubmit","placeholder","disabled","required","onChange","target","FormAlert","RiErrorWarningLine","color","size","autoFocus","Layout","Outlet","Card","props","buttonLikeRef","classList","remove","BsHeartFill","onError","onerror","CardList","SortButtonTemplate","isSwitched","setSwitchStatus","makeDataSort","setButtonSortedStatus","sortCardsByPrice","sortCardsByAge","MdKeyboardArrowUp","MdKeyboardArrowDown","SortButtonList","button","PagePreloader","BasketAlert","alert","_alert$current3","_alert$current4","_alert$current5","add","_alert$current6","_alert$current7","Link","_alert$current","_alert$current2","IoCloseOutline","MainPage","scrollPoint","scrollIntoView","block","behavior","Filter","inputRef","counterRef","fillRef","left","step","min","max","currentValue","inputRangeHandler","SwiperCore","use","Pagination","FavouritePage","filteredData","setFilteredData","_useState4","isLikedDataEmpty","setLikedDataEmptyStatus","_useState5","_useState6","isFilteredDataEmpty","setFilteredDataEmptyStatus","_useState7","_useState8","totalPrice","setTotalPrice","_useState9","slidesPerView","spaceBetween","sliderBreakpointsConfig","valueToCompare","pricesArr","maxPriceValue","totalSum","reduce","acc","_ref2","empty_image","Swiper","breakpoints","SwiperSlide","OverviewPage","gifItem","fetchGifData","ProfilePage","navigate","useNavigate","inProcessImage","replace","NoFoundPage","noFoundPage","App","Routes","Route","path","element","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","BrowserRouter","Provider","getElementById"],"mappings":"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","file":"static/js/main.3be2883e.chunk.js","sourcesContent":["// /. Imports\r\n\r\nimport { IgifData, Ipet, cardActionTypes } from 'types/cardTypes';\r\n\r\nexport const ACTION_FETCH_CARDS = 'ACTION_FETCH_CARDS';\r\nexport const ACTION_FETCH_CARDS_DATA_TOGGLE = 'ACTION_FETCH_CARDS_DATA_TOGGLE';\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS =\r\n    'ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS';\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE =\r\n    'ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE';\r\n\r\nexport const ACTION_SET_GIF_DATA = 'ACTION_SET_GIF_DATA';\r\nexport const ACTION_FETCH_GIF_DATA_TOGGLE = 'ACTION_FETCH_GIF_DATA_TOGGLE';\r\nexport const ACTION_SET_GIF_DATA_ERROR_STATUS =\r\n    'ACTION_SET_GIF_DATA_ERROR_STATUS';\r\nexport const ACTION_SET_GIF_DATA_ERROR_MESSAGE =\r\n    'ACTION_SET_GIF_DATA_ERROR_MESSAGE';\r\n\r\nexport const ACTION_SET_LIKED_CARDS_DATA = 'ACTION_SET_LIKED_CARDS_DATA';\r\nexport const ACTION_SET_FAVOURITE_STATUS = 'ACTION_SET_FAVOURITE_STATUS';\r\nexport const ACTION_SET_NOTIFICATION_VISIBLE_STATUS =\r\n    'ACTION_SET_NOTIFICATION_VISIBLE_STATUS';\r\n\r\nexport const ACTION_SORT_CARDS_BY_PRICE = 'ACTION_SORT_CARDS_BY_PRICE';\r\nexport const ACTION_SORT_CARDS_BY_AGE = 'ACTION_SORT_CARDS_BY_AGE';\r\n\r\nexport const ACTION_SET_FILTERED_CARDS_DATA_LENGTH =\r\n    'ACTION_SET_FILTERED_CARDS_DATA_LENGTH';\r\n\r\nexport const ACTION_SET_BUTTON_SORTED_STATUS =\r\n    'ACTION_SET_BUTTON_SORTED_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const fetchCards = (data: Ipet[]): cardActionTypes => {\r\n    return {\r\n        type: ACTION_FETCH_CARDS,\r\n        payload: data\r\n    };\r\n};\r\nexport const fetchCardsDataToggle = (value: boolean): cardActionTypes => {\r\n    return {\r\n        type: ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n        payload: {\r\n            value\r\n        }\r\n    };\r\n};\r\nexport const setFetchCardsDataErrorStatus = (\r\n    value: boolean\r\n): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n        payload: {\r\n            value\r\n        }\r\n    };\r\n};\r\nexport const setFetchCardsDataErrorMessage = (\r\n    value: string\r\n): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n        payload: {\r\n            value\r\n        }\r\n    };\r\n};\r\n\r\nexport const setGifData = (data: IgifData[]): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_GIF_DATA,\r\n        payload: data\r\n    };\r\n};\r\nexport const fetchGifDataToggle = (value: boolean): cardActionTypes => {\r\n    return {\r\n        type: ACTION_FETCH_GIF_DATA_TOGGLE,\r\n        payload: {\r\n            value\r\n        }\r\n    };\r\n};\r\nexport const setGifDataErrorStatus = (value: boolean): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n        payload: {\r\n            value\r\n        }\r\n    };\r\n};\r\nexport const setFetchGifDataErrorMessage = (value: string): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n        payload: {\r\n            value\r\n        }\r\n    };\r\n};\r\n\r\nexport const setNotificationVisibleStatus = (\r\n    status: boolean\r\n): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n        payload: {\r\n            status\r\n        }\r\n    };\r\n};\r\n\r\nexport const setLikedCardsData = (): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_LIKED_CARDS_DATA\r\n    };\r\n};\r\n\r\nexport const setFavouriteStatus = (\r\n    id: string,\r\n    status: boolean\r\n): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FAVOURITE_STATUS,\r\n        payload: { id, status }\r\n    };\r\n};\r\n\r\nexport const sortCardsByPrice = (\r\n    id: string,\r\n    status: boolean\r\n): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SORT_CARDS_BY_PRICE,\r\n        payload: { id, status }\r\n    };\r\n};\r\n\r\nexport const sortCardsByAge = (\r\n    id: string,\r\n    status: boolean\r\n): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SORT_CARDS_BY_AGE,\r\n        payload: { id, status }\r\n    };\r\n};\r\n\r\nexport const setFilteredCardsDataLength = (value: number): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FILTERED_CARDS_DATA_LENGTH,\r\n        payload: value\r\n    };\r\n};\r\n\r\nexport const setButtonSortedStatus = (\r\n    id: string,\r\n    status: boolean\r\n): cardActionTypes => {\r\n    return {\r\n        type: ACTION_SET_BUTTON_SORTED_STATUS,\r\n        payload: { id, status }\r\n    };\r\n};\r\n","import {\r\n    ACTION_FETCH_CARDS,\r\n    ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n    ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n    ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n    ACTION_SET_GIF_DATA,\r\n    ACTION_FETCH_GIF_DATA_TOGGLE,\r\n    ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n    ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n    ACTION_SET_FAVOURITE_STATUS,\r\n    ACTION_SET_LIKED_CARDS_DATA,\r\n    ACTION_SET_FILTERED_CARDS_DATA_LENGTH,\r\n    ACTION_SORT_CARDS_BY_PRICE,\r\n    ACTION_SORT_CARDS_BY_AGE,\r\n    ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n    ACTION_SET_BUTTON_SORTED_STATUS\r\n} from 'store/actions/cardActions';\r\nimport { IcardState, cardActionTypes } from 'types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst initialState: IcardState = {\r\n    cards: [],\r\n    gifData: [],\r\n    likedCardsData: [],\r\n    filteredCardsData: [],\r\n    filteredCardsDataLength: 0,\r\n    sortButtons: [\r\n        {\r\n            id: 'price',\r\n            text: 'Price',\r\n            isSorted: false\r\n        },\r\n        {\r\n            id: 'age',\r\n            text: 'Age',\r\n            isSorted: false\r\n        }\r\n    ],\r\n    isCardsDataFetching: true,\r\n    isCardsDataFetchError: false,\r\n    cardsDataFetchErrorMessage: 'error from fetchCardsData thunk',\r\n    isGifDataFetching: true,\r\n    isGifDataFetchError: false,\r\n    gifDataFetchErrorMessage: 'error from fetchGifData thunk',\r\n    isNotificationVisible: false\r\n};\r\n\r\n// /. initialState\r\n\r\nconst cardReducer = (\r\n    state = initialState,\r\n    action: cardActionTypes\r\n): IcardState => {\r\n    switch (action.type) {\r\n        case ACTION_FETCH_CARDS:\r\n            return {\r\n                ...state,\r\n                cards: [...state.cards, ...action.payload]\r\n            };\r\n\r\n        case ACTION_FETCH_CARDS_DATA_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isCardsDataFetching: action.payload.value\r\n            };\r\n        case ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS:\r\n            return {\r\n                ...state,\r\n                isCardsDataFetchError: action.payload.value\r\n            };\r\n        case ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                cardsDataFetchErrorMessage: action.payload.value\r\n            };\r\n        case ACTION_SET_GIF_DATA:\r\n            return {\r\n                ...state,\r\n                gifData: action.payload\r\n            };\r\n        case ACTION_FETCH_GIF_DATA_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isGifDataFetching: action.payload.value\r\n            };\r\n        case ACTION_SET_GIF_DATA_ERROR_STATUS:\r\n            return {\r\n                ...state,\r\n                isGifDataFetchError: action.payload.value\r\n            };\r\n        case ACTION_SET_GIF_DATA_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                gifDataFetchErrorMessage: action.payload.value\r\n            };\r\n\r\n        case ACTION_SET_FAVOURITE_STATUS:\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(item => {\r\n                    if (item.id === action.payload.id) {\r\n                        return {\r\n                            ...item,\r\n                            isFavourite: action.payload.status\r\n                        };\r\n                    }\r\n                    return item;\r\n                })\r\n            };\r\n\r\n        case ACTION_SET_LIKED_CARDS_DATA:\r\n            return {\r\n                ...state,\r\n                likedCardsData: state.cards.filter(\r\n                    item => item.isFavourite === true\r\n                )\r\n            };\r\n\r\n        case ACTION_SET_NOTIFICATION_VISIBLE_STATUS:\r\n            return {\r\n                ...state,\r\n                isNotificationVisible: action.payload.status\r\n            };\r\n        case ACTION_SORT_CARDS_BY_PRICE:\r\n            return {\r\n                ...state,\r\n                cards: [\r\n                    ...state.cards.sort((a, b) => {\r\n                        return action.payload.status\r\n                            ? b.price - a.price\r\n                            : a.price - b.price;\r\n                    })\r\n                ]\r\n            };\r\n        case ACTION_SORT_CARDS_BY_AGE:\r\n            return {\r\n                ...state,\r\n                cards: [\r\n                    ...state.cards.sort((a, b) => {\r\n                        return action.payload.status\r\n                            ? parseInt(b.age, 10) - parseInt(a.age, 10)\r\n                            : parseInt(a.age, 10) - parseInt(b.age, 10);\r\n                    })\r\n                ]\r\n            };\r\n\r\n        case ACTION_SET_FILTERED_CARDS_DATA_LENGTH:\r\n            return {\r\n                ...state,\r\n                filteredCardsDataLength: action.payload\r\n            };\r\n\r\n        case ACTION_SET_BUTTON_SORTED_STATUS:\r\n            return {\r\n                ...state,\r\n                sortButtons: state.sortButtons.map(item =>\r\n                    item.id === action.payload.id\r\n                        ? { ...item, isSorted: action.payload.status }\r\n                        : item\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { headerActionTypes } from 'types/headerTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_CHANGE_BURGER_VISIBLE_STATUS =\r\n    'ACTION_CHANGE_BURGER_VISIBLE_STATUS';\r\nexport const ACTION_CHANGE_BURGER_OPENED_STATUS =\r\n    'ACTION_CHANGE_BURGER_OPENED_STATUS';\r\nexport const ACTION_GET_INPUT_VALUE = 'ACTION_SET_INPUT_VALUE';\r\nexport const ACTION_CHANGE_MAIN_PAGE_STATUS = 'ACTION_CHANGE_MAIN_PAGE_STATUS';\r\nexport const ACTION_CHANGE_OVERVIEW_PAGE_STATUS =\r\n    'ACTION_CHANGE_OVERVIEW_PAGE_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const changeBurgerVisibleStatus = (\r\n    status: boolean\r\n): headerActionTypes => {\r\n    return {\r\n        type: ACTION_CHANGE_BURGER_VISIBLE_STATUS,\r\n        payload: status\r\n    };\r\n};\r\nexport const changeBurgerOpenedStatus = (\r\n    status: boolean\r\n): headerActionTypes => {\r\n    return {\r\n        type: ACTION_CHANGE_BURGER_OPENED_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\nexport const getInputValue = (value: string): headerActionTypes => {\r\n    return {\r\n        type: ACTION_GET_INPUT_VALUE,\r\n        payload: value\r\n    };\r\n};\r\n\r\nexport const changeMainPageStatus = (status: boolean): headerActionTypes => {\r\n    return {\r\n        type: ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\nexport const changeOverviewPageStatus = (\r\n    status: boolean\r\n): headerActionTypes => {\r\n    return {\r\n        type: ACTION_CHANGE_OVERVIEW_PAGE_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n","import { IheaderState, headerActionTypes } from 'types/headerTypes';\r\n\r\nimport {\r\n    ACTION_CHANGE_BURGER_VISIBLE_STATUS,\r\n    ACTION_CHANGE_BURGER_OPENED_STATUS,\r\n    ACTION_GET_INPUT_VALUE,\r\n    ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n    ACTION_CHANGE_OVERVIEW_PAGE_STATUS\r\n} from 'store/actions/headerActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: IheaderState = {\r\n    headerLinks: [\r\n        {\r\n            id: 1,\r\n            text: 'Main',\r\n            link: '/Cats-Store/'\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'Favourite',\r\n            link: 'Favourite'\r\n        },\r\n        {\r\n            id: 3,\r\n            text: 'Live',\r\n            link: 'Live'\r\n        },\r\n        {\r\n            id: 4,\r\n            text: 'Profile',\r\n            link: 'Profile'\r\n        }\r\n    ],\r\n    isBurgerHidden: true,\r\n    isBurgerOpen: false,\r\n    isBodyScrolling: true,\r\n    isHomePage: true,\r\n    isOverviewPage: false,\r\n    emailValue: ''\r\n};\r\n\r\n// /. initialState\r\n\r\nconst headerReducer = (\r\n    state = initialState,\r\n    action: headerActionTypes\r\n): IheaderState => {\r\n    switch (action.type) {\r\n        case ACTION_CHANGE_BURGER_VISIBLE_STATUS:\r\n            return {\r\n                ...state,\r\n                isBurgerHidden: action.payload\r\n            };\r\n        case ACTION_CHANGE_BURGER_OPENED_STATUS:\r\n            return {\r\n                ...state,\r\n                isBurgerOpen: action.payload\r\n            };\r\n        case ACTION_GET_INPUT_VALUE:\r\n            return {\r\n                ...state,\r\n                emailValue: action.payload\r\n            };\r\n        case ACTION_CHANGE_MAIN_PAGE_STATUS:\r\n            return {\r\n                ...state,\r\n                isHomePage: action.payload\r\n            };\r\n        case ACTION_CHANGE_OVERVIEW_PAGE_STATUS:\r\n            return {\r\n                ...state,\r\n                isOverviewPage: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default headerReducer;\r\n","import { formActionTypes } from 'types/formTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_SET_FORM_ALERT_VISIBLE_STATUS =\r\n    'ACTION_SET_FORM_ALERT_VISIBLE_STATUS';\r\nexport const ACTION_SET_FORM_SUBMIT_STATUS = 'ACTION_SET_FORM_SUBMIT_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const setFormAlertVisibleStatus = (status: boolean): formActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FORM_ALERT_VISIBLE_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\nexport const setFormSubmitStatus = (status: boolean): formActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FORM_SUBMIT_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n","import { IformState, formActionTypes } from 'types/formTypes';\r\n\r\nimport {\r\n    ACTION_SET_FORM_ALERT_VISIBLE_STATUS,\r\n    ACTION_SET_FORM_SUBMIT_STATUS\r\n} from 'store/actions/formActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: IformState = {\r\n    isFormAlertVisible: false,\r\n    isFormSubmitted: false\r\n};\r\n\r\n// /. initialState\r\n\r\nconst formReducer = (\r\n    state = initialState,\r\n    action: formActionTypes\r\n): IformState => {\r\n    switch (action.type) {\r\n        case ACTION_SET_FORM_ALERT_VISIBLE_STATUS:\r\n            return {\r\n                ...state,\r\n                isFormAlertVisible: action.payload\r\n            };\r\n        case ACTION_SET_FORM_SUBMIT_STATUS:\r\n            return {\r\n                ...state,\r\n                isFormSubmitted: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default formReducer;\r\n","import { filterActionTypes } from 'types/filterTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_SET_CURRENT_RANGE_VALUE = 'ACTION_SET_CURRENT_RANGE_VALUE';\r\nexport const ACTION_SET_TOTAL_RANGE_VALUE = 'ACTION_SET_TOTAL_RANGE_VALUE';\r\n\r\n// /. AC Names\r\n\r\nexport const setCurrentRangeValue = (value: number): filterActionTypes => {\r\n    return {\r\n        type: ACTION_SET_CURRENT_RANGE_VALUE,\r\n        payload: value\r\n    };\r\n};\r\n\r\nexport const setTotalRangeValue = (value: number): filterActionTypes => {\r\n    return {\r\n        type: ACTION_SET_TOTAL_RANGE_VALUE,\r\n        payload: value\r\n    };\r\n};\r\n","import {\r\n    ACTION_SET_CURRENT_RANGE_VALUE,\r\n    ACTION_SET_TOTAL_RANGE_VALUE\r\n} from 'store/actions/filterActions';\r\n\r\nimport { IfilterState, filterActionTypes } from 'types/filterTypes';\r\n\r\n// /. Imports\r\n\r\nconst initialState: IfilterState = {\r\n    inputRangeTotalValue: 0,\r\n    inputRangeMinValue: 0,\r\n    currentRangeValue: 0\r\n};\r\n\r\n// /. initialState\r\n\r\nconst filterReducer = (\r\n    state = initialState,\r\n    action: filterActionTypes\r\n): IfilterState => {\r\n    switch (action.type) {\r\n        case ACTION_SET_CURRENT_RANGE_VALUE:\r\n            return {\r\n                ...state,\r\n                currentRangeValue: action.payload\r\n            };\r\n        case ACTION_SET_TOTAL_RANGE_VALUE:\r\n            return {\r\n                ...state,\r\n                inputRangeTotalValue: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport cardReducer from 'store/reducers/cardReducer';\r\nimport headerReducer from 'store/reducers/headerReducer';\r\nimport formReducer from 'store/reducers/formReducer';\r\nimport filterReducer from 'store/reducers/filterReducer';\r\n\r\n// /. Imports\r\n\r\nconst reducers = combineReducers({\r\n    cardReducer: cardReducer,\r\n    headerReducer: headerReducer,\r\n    formReducer: formReducer,\r\n    filterReducer: filterReducer\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nexport default store;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport type { RootState, AppDispatch } from 'store/store';\r\n\r\n// /. imports\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","export default __webpack_public_path__ + \"static/media/no_photo.bb351cb8.png\";","import { Dispatch } from 'redux';\r\n\r\nimport image_placeholder from 'assets/images/no_photo.png';\r\n\r\nimport {\r\n    fetchCards,\r\n    fetchCardsDataToggle,\r\n    setFetchCardsDataErrorMessage,\r\n    setFetchCardsDataErrorStatus\r\n} from 'store/actions/cardActions';\r\nimport { Ipet, cardActionTypes } from 'types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst fetchCardsData = () => {\r\n    const pageCount = Math.floor(Math.random() * 10);\r\n\r\n    return async function (dispatch: Dispatch<cardActionTypes>) {\r\n        try {\r\n            const response = await fetch(\r\n                `https://api.thecatapi.com/v1/breeds?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=6&page=${pageCount}`\r\n            );\r\n\r\n            if (!response.ok) {\r\n                dispatch(\r\n                    setFetchCardsDataErrorMessage(\r\n                        'Error: There are some problems with response of breeds data'\r\n                    )\r\n                );\r\n                console.error('There are some problems with response');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            const actualData: Ipet[] = [];\r\n\r\n            data.forEach((item: any) => {\r\n                if (!item['image'] || !item.image) {\r\n                    item.image = { url: image_placeholder };\r\n                }\r\n                // /. response validation\r\n\r\n                actualData.push({\r\n                    id: `${Math.random() + item.id}`,\r\n                    image: item.image.url,\r\n                    name: item.name,\r\n                    location: item.origin,\r\n                    paw: '4',\r\n                    age: `${Math.floor(Math.random() * 12) + 1} mth.`,\r\n                    price: +Math.floor(Math.random() * 10000), // random integer from 0 to 10 000\r\n                    discount: `-${Math.floor(Math.random() * 60) + 10}%`, // random integer from 10 to 60\r\n                    discountStatus: Boolean(Math.round(Math.random())),\r\n                    cardStatus: Boolean(Math.round(Math.random())),\r\n                    isFavourite: false\r\n                });\r\n            });\r\n\r\n            dispatch(fetchCards(actualData));\r\n        } catch (error: any) {\r\n            dispatch(\r\n                setFetchCardsDataErrorMessage(\r\n                    `Error: ${error.message} breeds data.`\r\n                )\r\n            );\r\n            dispatch(setFetchCardsDataErrorStatus(true));\r\n            console.error(error.message);\r\n        } finally {\r\n            setTimeout(() => {\r\n                dispatch(fetchCardsDataToggle(false));\r\n            }, 500);\r\n        }\r\n    };\r\n};\r\n\r\nexport default fetchCardsData;\r\n","import { Dispatch } from 'redux';\r\n\r\nimport {\r\n    setGifData,\r\n    fetchGifDataToggle,\r\n    setGifDataErrorStatus,\r\n    setFetchGifDataErrorMessage\r\n} from 'store/actions/cardActions';\r\nimport { IgifData, cardActionTypes } from 'types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst fetchGifsData = () => {\r\n    return async function (dispatch: Dispatch<cardActionTypes>) {\r\n        try {\r\n            const response = await fetch(\r\n                'https://api.thecatapi.com/v1/images/search?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=8&size=full&mime_types=gif'\r\n            );\r\n\r\n            if (!response.ok) {\r\n                dispatch(\r\n                    setFetchGifDataErrorMessage(\r\n                        'Error: There are some problems with response of gifs data'\r\n                    )\r\n                );\r\n                console.error('There are some problems with response');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            const actualData: IgifData[] = [];\r\n\r\n            data.forEach((item: any) => {\r\n                actualData.push({\r\n                    id: `${Math.random() + item.id}`,\r\n                    image: item.url\r\n                });\r\n            });\r\n\r\n            dispatch(setGifData(actualData));\r\n        } catch (error: any) {\r\n            dispatch(\r\n                setFetchGifDataErrorMessage(\r\n                    `Error: ${error.message} gifs data.`\r\n                )\r\n            );\r\n            dispatch(setGifDataErrorStatus(true));\r\n            console.error(error.message);\r\n        } finally {\r\n            setTimeout(() => {\r\n                dispatch(fetchGifDataToggle(false));\r\n            }, 500);\r\n        }\r\n    };\r\n};\r\n\r\nexport default fetchGifsData;\r\n","export function declinateByNum<T>(quantity: number, array: T[]): T {\r\n    quantity = Math.abs(quantity);\r\n\r\n    const itemIDX = quantity <= 1 ? 0 : 1;\r\n\r\n    return array[itemIDX];\r\n}\r\n","import React from 'react';\r\n\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport { changeBurgerOpenedStatus } from 'store/actions/headerActions';\r\n\r\nimport './menu.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    isBurgerOpen: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst BurgerMenu: React.FC<propTypes> = ({ isBurgerOpen }) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const defineScrollStatus = (): void => {\r\n        isBurgerOpen\r\n            ? (document.body.style.overflowY = 'auto')\r\n            : (document.body.style.overflowY = 'hidden');\r\n    };\r\n\r\n    const openBurger = (): void => {\r\n        dispatch(changeBurgerOpenedStatus(!isBurgerOpen));\r\n        defineScrollStatus();\r\n    };\r\n\r\n    // /. functions\r\n\r\n    return (\r\n        <button\r\n            className=\"menu\"\r\n            aria-label={isBurgerOpen ? 'close burger menu' : 'open burger menu'}\r\n            onClick={openBurger}\r\n        >\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-top opened'\r\n                        : 'menu__line menu__line-top'\r\n                }\r\n            ></span>\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-middle opened'\r\n                        : 'menu__line menu__line-middle'\r\n                }\r\n            ></span>\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-bottom opened'\r\n                        : 'menu__line menu__line-bottom'\r\n                }\r\n            ></span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default BurgerMenu;\r\n","import React from 'react';\r\n\r\nimport './TextPreloader.scss';\r\n\r\n// /. Imports\r\n\r\nconst TextPreloader: React.FC = () => {\r\n    return (\r\n        <h1 className=\"loader\">\r\n            Loading\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default TextPreloader;\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport {\r\n    changeMainPageStatus,\r\n    changeBurgerOpenedStatus\r\n} from 'store/actions/headerActions';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    link: string;\r\n    text: string;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst NavLinkTemplate: React.FC<propTypes> = ({ link, text }) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const linkHandler = (): void => {\r\n        dispatch(changeBurgerOpenedStatus(false));\r\n        document.body.style.overflowY = 'auto';\r\n    };\r\n\r\n    // /. functions\r\n\r\n    return (\r\n        <li className=\"nav__menu_item\">\r\n            <NavLink\r\n                className=\"nav__menu_link\"\r\n                to={link}\r\n                state={text.toLocaleLowerCase()}\r\n                onClick={() => linkHandler()}\r\n            >\r\n                {text}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default NavLinkTemplate;\r\n","import React from 'react';\r\n\r\nimport { IheaderLink } from 'types/headerTypes';\r\n\r\nimport NavLinkTemplate from './NavLinkTemplate';\r\n\r\nimport './Nav.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    headerLinks: IheaderLink[];\r\n    role?: string;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst NavList: React.FC<propTypes> = ({ headerLinks, role }) => {\r\n    return (\r\n        <nav className={role ? `nav ${role}` : 'nav'}>\r\n            <ul className=\"nav__menu\">\r\n                {headerLinks.map((item: IheaderLink) => {\r\n                    return (\r\n                        <NavLinkTemplate\r\n                            key={item.id}\r\n                            {...item}\r\n                        />\r\n                    );\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavList;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport { changeBurgerOpenedStatus } from 'store/actions/headerActions';\r\n\r\nimport NavList from 'components/NavLayout/NavList';\r\n\r\nimport './burger.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    headerLinks: any[];\r\n    isBurgerOpen: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst Burger: React.FC<propTypes> = ({ headerLinks, isBurgerOpen }) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    useEffect(() => {\r\n        const keyHandler = (e: KeyboardEvent): void => {\r\n            if (isBurgerOpen && e.code === 'Escape') {\r\n                dispatch(changeBurgerOpenedStatus(false));\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', keyHandler);\r\n        return () => {\r\n            document.removeEventListener('keydown', keyHandler);\r\n        };\r\n    }, [isBurgerOpen]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <div className={isBurgerOpen ? 'burger active' : 'burger'}>\r\n            <NavList\r\n                headerLinks={headerLinks}\r\n                role={'burger__nav'}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Burger;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\n\r\nimport { changeBurgerVisibleStatus } from 'store/actions/headerActions';\r\n\r\nimport Burger from 'components/Burger/Burger';\r\n\r\nimport NavList from './NavList';\r\n\r\n// /. Imports\r\n\r\nconst NavLayout: React.FC = () => {\r\n    const { headerLinks, isBurgerOpen } = useAppSelector(\r\n        state => state.headerReducer\r\n    );\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    const [breakpoint] = useState<number>(800);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    useEffect(() => {\r\n        const windowReizeHandler = (): void => {\r\n            setWidth(window.innerWidth);\r\n        };\r\n\r\n        window.addEventListener('resize', windowReizeHandler);\r\n        return () => {\r\n            window.removeEventListener('resize', windowReizeHandler);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        width <= breakpoint\r\n            ? dispatch(changeBurgerVisibleStatus(false))\r\n            : dispatch(changeBurgerVisibleStatus(true));\r\n    }, [width, breakpoint]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <>\r\n            {width <= breakpoint ? (\r\n                <Burger\r\n                    headerLinks={headerLinks}\r\n                    isBurgerOpen={isBurgerOpen}\r\n                />\r\n            ) : (\r\n                <NavList\r\n                    headerLinks={headerLinks}\r\n                    role={'header__nav'}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavLayout;\r\n","export default __webpack_public_path__ + \"static/media/logo.c8358bcd.svg\";","import React from 'react';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    children: string;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst HeaderTitle: React.FC<propTypes> = ({ children }) => {\r\n    return <h1 className=\"header__title\">{children}</h1>;\r\n};\r\n\r\nexport default HeaderTitle;\r\n","import React from 'react';\r\n\r\nimport { useLocation } from 'react-router';\r\n\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\nimport { declinateByNum } from 'helpers/declinateByNumber';\r\n\r\nimport BurgerMenu from 'components/BurgerMenu/BurgerMenu';\r\nimport TextPreloader from 'components/Common/Preloaders/TextPreloader/TextPreloader';\r\nimport NavLayout from 'components/NavLayout/NavLayout';\r\n\r\nimport logo from 'assets/images/logo.svg';\r\n\r\nimport HeaderTitle from './HeaderTitle';\r\n\r\nimport './Header.scss';\r\n\r\n// /. Imports\r\n\r\nconst Header: React.FC = () => {\r\n    const { isBurgerHidden, isBurgerOpen } = useAppSelector(\r\n        state => state.headerReducer\r\n    );\r\n\r\n    const { cards, filteredCardsDataLength, isCardsDataFetching } =\r\n        useAppSelector(state => state.cardReducer);\r\n\r\n    const location = useLocation();\r\n\r\n    // /. hooks\r\n\r\n    const mainTextValue = declinateByNum(cards.length, ['cat', 'cats']);\r\n    const filteredTextValue = declinateByNum(filteredCardsDataLength, [\r\n        'cat',\r\n        'cats'\r\n    ]);\r\n\r\n    // /. variables\r\n\r\n    const defineTextContent = (value: string): string => {\r\n        switch (value) {\r\n            case null: // for display correct header__title content by first render\r\n            case 'main':\r\n                return `Found ${cards.length} ${mainTextValue}`;\r\n            case 'favourite':\r\n                return `Selected ${filteredCardsDataLength} ${filteredTextValue}`;\r\n            default:\r\n                return 'Have a good day ;)';\r\n        }\r\n    };\r\n\r\n    // /. functions\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <section className=\"header__section\">\r\n                    <a\r\n                        className=\"header__logo logo\"\r\n                        href=\"#\"\r\n                        onClick={e => e.preventDefault()}\r\n                    >\r\n                        <img\r\n                            className=\"logo__image\"\r\n                            src={logo}\r\n                            alt=\"logo\"\r\n                        />\r\n                    </a>\r\n\r\n                    <NavLayout />\r\n\r\n                    <>\r\n                        {!isBurgerHidden && (\r\n                            <BurgerMenu isBurgerOpen={isBurgerOpen} />\r\n                        )}\r\n                    </>\r\n\r\n                    <div className=\"header__telephone telephone\">\r\n                        <a\r\n                            className=\"telephone__number\"\r\n                            href=\"tel:+544 3490 00000\"\r\n                        >\r\n                            +544 3490 00000\r\n                        </a>\r\n                        <span className=\"telephone__description\">\r\n                            Call soon!\r\n                        </span>\r\n                    </div>\r\n                </section>\r\n\r\n                <>\r\n                    {isCardsDataFetching ? (\r\n                        <TextPreloader />\r\n                    ) : (\r\n                        <HeaderTitle>\r\n                            {defineTextContent(location.state)}\r\n                        </HeaderTitle>\r\n                    )}\r\n                </>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\n\r\nimport { getInputValue } from 'store/actions/headerActions';\r\nimport {\r\n    setFormAlertVisibleStatus,\r\n    setFormSubmitStatus\r\n} from 'store/actions/formActions';\r\n\r\nimport './Footer.scss';\r\n\r\n// /. Imports\r\n\r\nconst Footer: React.FC = () => {\r\n    const { emailValue } = useAppSelector(state => state.headerReducer);\r\n    const { isFormAlertVisible, isFormSubmitted } = useAppSelector(\r\n        state => state.formReducer\r\n    );\r\n\r\n    const [unavailable, setUnavailableStatus] = useState<boolean>(false);\r\n\r\n    const formRef = useRef<HTMLFormElement>(null!);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const onFormSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n        e.preventDefault();\r\n\r\n        dispatch(setFormAlertVisibleStatus(true));\r\n        dispatch(setFormSubmitStatus(true));\r\n    };\r\n\r\n    // /. functions\r\n\r\n    useEffect(() => {\r\n        if (isFormSubmitted && !isFormAlertVisible) {\r\n            formRef.current.reset();\r\n            dispatch(getInputValue(''));\r\n            setUnavailableStatus(true);\r\n            setTimeout(() => {\r\n                setUnavailableStatus(false);\r\n            }, 10000);\r\n        }\r\n    }, [isFormAlertVisible, isFormSubmitted]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <section className=\"footer__wrapper\">\r\n                    <article className=\"footer__description\">\r\n                        <h2 className=\"footer__title\">Hurry up to buy!</h2>\r\n                        <p className=\"footer__subtitle\">\r\n                            Subscribe and catch all the promotions\r\n                        </p>\r\n                    </article>\r\n                    <form\r\n                        ref={formRef}\r\n                        className=\"form\"\r\n                        onSubmit={e => onFormSubmit(e)}\r\n                    >\r\n                        <div className=\"form__controls\">\r\n                            <input\r\n                                className=\"form__input\"\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                disabled={unavailable}\r\n                                required\r\n                                value={emailValue}\r\n                                onChange={e =>\r\n                                    dispatch(getInputValue(e.target.value))\r\n                                }\r\n                            />\r\n                            <button\r\n                                className=\"form__button button\"\r\n                                type=\"submit\"\r\n                                disabled={unavailable}\r\n                            >\r\n                                Subscribe\r\n                            </button>\r\n                        </div>\r\n                        <label className=\"form__cheakbox-label\">\r\n                            Subscribe to news\r\n                            <input\r\n                                className=\"form__cheakbox-input\"\r\n                                type=\"checkbox\"\r\n                                disabled={unavailable}\r\n                                required\r\n                            />\r\n                            <span className=\"form__cheakbox-fake\"></span>\r\n                        </label>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\n\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport { setFormAlertVisibleStatus } from 'store/actions/formActions';\r\n\r\nimport './FormAlert.scss';\r\n\r\n// /. Imports\r\n\r\nconst FormAlert: React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const submitAlert = (): void => {\r\n        dispatch(setFormAlertVisibleStatus(false));\r\n    };\r\n\r\n    // /. functions\r\n\r\n    useEffect(() => {\r\n        const keyHandler = (e: KeyboardEvent): void => {\r\n            if (e.code === 'Escape') {\r\n                dispatch(setFormAlertVisibleStatus(false));\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', keyHandler);\r\n        return () => {\r\n            document.removeEventListener('keydown', keyHandler);\r\n        };\r\n    }, []);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <div\r\n            className=\"form-alert\"\r\n            role=\"alert\"\r\n        >\r\n            <div className=\"form-alert__wrapper\">\r\n                <div className=\"form-alert__description\">\r\n                    <RiErrorWarningLine\r\n                        color={'#e52d2d'}\r\n                        size={'24px'}\r\n                    />\r\n                    <p className=\"form-alert__text\">\r\n                        Sorry! Function temporarily unavailable\r\n                    </p>\r\n                </div>\r\n                <div className=\"form-alert__controls\">\r\n                    <button\r\n                        className=\"form-alert__button\"\r\n                        autoFocus\r\n                        onClick={submitAlert}\r\n                    >\r\n                        Ok\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormAlert;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { Outlet } from 'react-router';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\nimport fetchCardsData from 'store/async-actions/fetchCardsData';\r\nimport fetchGifsData from 'store/async-actions/fetchGifsData';\r\n\r\nimport Header from 'components/Header/Header';\r\nimport Footer from 'components/Footer/Footer';\r\n\r\nimport FormAlert from './Alert/FormAlert/FormAlert';\r\n\r\n// /. Imports\r\n\r\nconst Layout: React.FC = () => {\r\n    const { isFormAlertVisible } = useAppSelector(state => state.formReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // /. hooks\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCardsData());\r\n        dispatch(fetchGifsData());\r\n    }, []);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <>{isFormAlertVisible && <FormAlert />}</>\r\n            <Header />\r\n            <main className=\"main\">\r\n                <Outlet />\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { BsHeartFill } from 'react-icons/bs';\r\n\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport {\r\n    setFavouriteStatus,\r\n    setLikedCardsData\r\n} from 'store/actions/cardActions';\r\n\r\nimport image_placeholder from 'assets/images/no_photo.png';\r\n\r\nimport './Card.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    id: string;\r\n    image: string;\r\n    name: string;\r\n    location: string;\r\n    age: string;\r\n    paw: string;\r\n    price: number;\r\n    discount: string;\r\n    isFavourite: boolean;\r\n    cardStatus: boolean;\r\n    discountStatus: boolean;\r\n    currentRangeValue: number;\r\n    role?: string;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst Card: React.FC<propTypes> = props => {\r\n    const {\r\n        id,\r\n        image,\r\n        name,\r\n        location,\r\n        age,\r\n        paw,\r\n        price,\r\n        discount,\r\n        isFavourite,\r\n        cardStatus,\r\n        discountStatus,\r\n        role\r\n    } = props;\r\n\r\n    const buttonLikeRef = useRef<HTMLButtonElement>(null!);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const addToFavourite = (): void => {\r\n        isFavourite\r\n            ? dispatch(setFavouriteStatus(id, false))\r\n            : dispatch(setFavouriteStatus(id, true));\r\n\r\n        dispatch(setLikedCardsData()); // update likedCardsData[]\r\n    };\r\n\r\n    // /. functions\r\n\r\n    useEffect(() => {\r\n        buttonLikeRef.current.classList.remove('unlike');\r\n    }, []);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <article className={role ? `${role} card` : 'card'}>\r\n            <div className=\"card__preview\">\r\n                <div className=\"card__icons\">\r\n                    {discountStatus && (\r\n                        <span className=\"card__icons_discount\">{discount}</span>\r\n                    )}\r\n                    <button\r\n                        className={\r\n                            isFavourite\r\n                                ? 'card__icons_button like'\r\n                                : 'card__icons_button unlike'\r\n                        }\r\n                        ref={buttonLikeRef}\r\n                        disabled={!cardStatus}\r\n                        onClick={addToFavourite}\r\n                        aria-label=\"add to favourite\"\r\n                    >\r\n                        <BsHeartFill\r\n                            color={'#fff'}\r\n                            size={'42px'}\r\n                        />\r\n                    </button>\r\n                </div>\r\n                <img\r\n                    className=\"card__image\"\r\n                    src={image}\r\n                    alt=\"cat\"\r\n                    onError={e => {\r\n                        (e.target as HTMLImageElement).src = image_placeholder;\r\n                        (e.target as HTMLImageElement).onerror = null;\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"card__information\">\r\n                <h3 className=\"card__name\">{name}</h3>\r\n                <ul className=\"card__description description\">\r\n                    <li className=\"description__item description__item_location\">\r\n                        Location: <br />\r\n                        <strong>{location}</strong>\r\n                    </li>\r\n                    <li className=\"description__item description__item_age\">\r\n                        <span className=\"bold\">{age}</span> <br /> Age\r\n                    </li>\r\n                    <li className=\"description__item description__item_paw\">\r\n                        <span className=\"bold\">{paw}</span> <br /> Paws count\r\n                    </li>\r\n                </ul>\r\n                <span className=\"card__price\">{`${price} USD`}</span>\r\n            </div>\r\n            <button\r\n                className={\r\n                    cardStatus\r\n                        ? 'card__button button'\r\n                        : 'card__button-sold button'\r\n                }\r\n            >\r\n                {cardStatus ? 'Buy' : 'Sold'}\r\n            </button>\r\n        </article>\r\n    );\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\nimport { Ipet } from 'types/cardTypes';\r\n\r\nimport Card from './Card';\r\n\r\n// /. Imports\r\n\r\nconst CardList: React.FC = () => {\r\n    const { cards } = useAppSelector(state => state.cardReducer);\r\n    const { currentRangeValue } = useAppSelector(state => state.filterReducer);\r\n\r\n    // /. hooks\r\n\r\n    return (\r\n        <div className=\"gallery__cards\">\r\n            {cards.map((item: Ipet) => {\r\n                return (\r\n                    <Card\r\n                        key={item.id}\r\n                        {...item}\r\n                        currentRangeValue={currentRangeValue}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState } from 'react';\r\n\r\nimport { MdKeyboardArrowUp, MdKeyboardArrowDown } from 'react-icons/md';\r\n\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport {\r\n    sortCardsByPrice,\r\n    sortCardsByAge,\r\n    setButtonSortedStatus\r\n} from 'store/actions/cardActions';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    id: string;\r\n    text: string;\r\n    isCardsDataFetching: boolean;\r\n    isCardsDataFetchError: boolean;\r\n    isSorted: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst SortButtonTemplate: React.FC<propTypes> = props => {\r\n    const { id, text, isCardsDataFetching, isCardsDataFetchError } = props;\r\n\r\n    const [isSwitched, setSwitchStatus] = useState<boolean>(false);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const makeDataSort = (e: React.SyntheticEvent): void => {\r\n        setSwitchStatus(!isSwitched);\r\n\r\n        dispatch(setButtonSortedStatus(id, isSwitched));\r\n\r\n        id === 'price'\r\n            ? dispatch(sortCardsByPrice(id, isSwitched))\r\n            : dispatch(sortCardsByAge(id, isSwitched));\r\n    };\r\n\r\n    // /. functions\r\n\r\n    return (\r\n        <button\r\n            className=\"controls__menu\"\r\n            type=\"button\"\r\n            disabled={isCardsDataFetching || isCardsDataFetchError}\r\n            aria-label={`sort by ${id}`}\r\n            onClick={e => makeDataSort(e)}\r\n        >\r\n            <span className=\"controls__menu_text\">{text}</span>\r\n            <span>\r\n                {isSwitched ? (\r\n                    <MdKeyboardArrowUp\r\n                        color={'#000'}\r\n                        size={'26px'}\r\n                    />\r\n                ) : (\r\n                    <MdKeyboardArrowDown\r\n                        color={'#000'}\r\n                        size={'26px'}\r\n                    />\r\n                )}\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SortButtonTemplate;\r\n","import React from 'react';\r\n\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\nimport SortButtonTemplate from './SortButtonTemplate';\r\n\r\nimport './Sort.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    role?: string;\r\n}\r\n\r\n// /. Interfaces\r\n\r\nconst SortButtonList: React.FC<propTypes> = ({ role }) => {\r\n    const { isCardsDataFetching, isCardsDataFetchError, sortButtons } =\r\n        useAppSelector(state => state.cardReducer);\r\n\r\n    // /. hooks\r\n\r\n    return (\r\n        <div className={role ? `${role} controls` : 'controls'}>\r\n            <div className=\"controls__wrapper\">\r\n                <span className=\"controls__title\">Sorted by:</span>\r\n                {sortButtons.map(button => {\r\n                    return (\r\n                        <SortButtonTemplate\r\n                            key={button.id}\r\n                            {...button}\r\n                            isCardsDataFetching={isCardsDataFetching}\r\n                            isCardsDataFetchError={isCardsDataFetchError}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortButtonList;\r\n","import React from 'react';\r\n\r\nimport './PagePreloader.scss';\r\n\r\n// /. Imports\r\n\r\nconst PagePreloader: React.FC = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"lds-roller\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PagePreloader;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\nimport { IoCloseOutline } from 'react-icons/io5';\r\n\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\n\r\nimport { setNotificationVisibleStatus } from 'store/actions/cardActions';\r\nimport { changeMainPageStatus } from 'store/actions/headerActions';\r\n\r\nimport './BasketAlert.scss';\r\n\r\n// /. Imports\r\n\r\nconst BasketAlert: React.FC = () => {\r\n    const { likedCardsData } = useAppSelector(state => state.cardReducer);\r\n\r\n    const alert = useRef<HTMLDivElement>(null);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const closeAlert = (): void => {\r\n        dispatch(setNotificationVisibleStatus(false));\r\n        alert.current?.classList.remove('visible');\r\n        alert.current?.classList.add('hide');\r\n    };\r\n\r\n    const relocateToFavouritePage = (): void => {\r\n        dispatch(changeMainPageStatus(false));\r\n    };\r\n\r\n    // /. functions\r\n\r\n    useEffect(() => {\r\n        if (likedCardsData.length > 1 && likedCardsData.length % 2 === 0) {\r\n            // logic of show/hide BasketAlert\r\n            dispatch(setNotificationVisibleStatus(true));\r\n            alert.current?.classList.add('visible');\r\n            alert.current?.classList.add('opacity');\r\n            alert.current?.classList.remove('hide');\r\n            setTimeout(() => {\r\n                dispatch(setNotificationVisibleStatus(false));\r\n                alert.current?.classList.remove('visible');\r\n                alert.current?.classList.add('hide');\r\n            }, 3500);\r\n        }\r\n        if (likedCardsData.length === 0) {\r\n            dispatch(setNotificationVisibleStatus(false));\r\n        }\r\n    }, [likedCardsData]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <div\r\n            ref={alert}\r\n            className=\"alert\"\r\n            role=\"alert\"\r\n        >\r\n            <div className=\"alert__wrapper\">\r\n                <div className=\"alert__notification\">\r\n                    <Link\r\n                        to=\"Favourite\"\r\n                        onClick={relocateToFavouritePage}\r\n                        aria-label=\"redirect to basket\"\r\n                    >\r\n                        <RiErrorWarningLine\r\n                            color={'#000'}\r\n                            size={'22px'}\r\n                        />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"alert__information\">\r\n                    <span className=\"alert__message\">\r\n                        Visit to Favourite page!\r\n                    </span>\r\n                    <span className=\"alert__count\">{`${likedCardsData.length} in basket!`}</span>\r\n                </div>\r\n                <button\r\n                    className=\"alert__button\"\r\n                    onClick={closeAlert}\r\n                    aria-label=\"close this modal\"\r\n                >\r\n                    <IoCloseOutline\r\n                        color={'#000'}\r\n                        size={'18px'}\r\n                    />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BasketAlert;\r\n","import React, { useRef } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { MdKeyboardArrowUp } from 'react-icons/md';\r\n\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\nimport fetchCardsData from 'store/async-actions/fetchCardsData';\r\n\r\nimport CardList from 'components/Card/CardLits';\r\nimport SortButtonList from 'components/SortButton/SortButtonList';\r\nimport PagePreloader from 'components/Common/Preloaders/PagePreloader/PagePreloader';\r\nimport BasketAlert from 'components/Common/Alert/BasketAlert/BasketAlert';\r\n\r\n// /. Imports\r\n\r\nconst MainPage: React.FC = () => {\r\n    const {\r\n        isCardsDataFetching,\r\n        isCardsDataFetchError,\r\n        cardsDataFetchErrorMessage\r\n    } = useAppSelector(state => state.cardReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const scrollPoint = useRef<HTMLDivElement>(null!);\r\n\r\n    // /. hooks\r\n\r\n    const scrollTop = (): void => {\r\n        scrollPoint.current.scrollIntoView({\r\n            block: 'start',\r\n            behavior: 'smooth'\r\n        });\r\n    };\r\n\r\n    const makeFetchRequest = (): void => {\r\n        dispatch(fetchCardsData());\r\n    };\r\n\r\n    // /. functions\r\n\r\n    return (\r\n        <div\r\n            ref={scrollPoint}\r\n            className=\"section\"\r\n        >\r\n            <div className=\"container\">\r\n                <section className=\"gallery\">\r\n                    <SortButtonList role={'gallery__controls'} />\r\n                    <div className=\"gallery__wrapper\">\r\n                        <>\r\n                            {isCardsDataFetching ? (\r\n                                <PagePreloader />\r\n                            ) : isCardsDataFetchError ? (\r\n                                <p className=\"error\">\r\n                                    {cardsDataFetchErrorMessage}\r\n                                </p>\r\n                            ) : (\r\n                                <CardList />\r\n                            )}\r\n                        </>\r\n                        <button\r\n                            className=\"gallery__button button\"\r\n                            disabled={\r\n                                isCardsDataFetching || isCardsDataFetchError\r\n                            }\r\n                            onClick={makeFetchRequest}\r\n                        >\r\n                            Watch more\r\n                        </button>\r\n                        <button\r\n                            className=\"pagination\"\r\n                            disabled={\r\n                                isCardsDataFetching || isCardsDataFetchError\r\n                            }\r\n                            onClick={scrollTop}\r\n                            aria-label=\"scroll top\"\r\n                        >\r\n                            <MdKeyboardArrowUp\r\n                                color={'#fff'}\r\n                                size={'36px'}\r\n                                aria-label=\"scroll top\"\r\n                            />\r\n                        </button>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <BasketAlert />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\n\r\nimport { setCurrentRangeValue } from 'store/actions/filterActions';\r\n\r\nimport './Filter.scss';\r\n\r\n// /. Imports\r\n\r\nconst Filter: React.FC = () => {\r\n    const { inputRangeTotalValue, inputRangeMinValue, currentRangeValue } =\r\n        useAppSelector(state => state.filterReducer);\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null!);\r\n    const counterRef = useRef<HTMLDivElement>(null!);\r\n    const fillRef = useRef<HTMLDivElement>(null!);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const inputRangeHandler = (\r\n        e: React.ChangeEvent<HTMLInputElement>\r\n    ): void => {\r\n        const currentValue = +e.target.value;\r\n\r\n        dispatch(setCurrentRangeValue(currentValue));\r\n\r\n        fillRef.current.style.width = `${\r\n            (100 * (currentValue - inputRangeMinValue)) /\r\n            (inputRangeTotalValue - inputRangeMinValue)\r\n        }%`;\r\n        counterRef.current.style.left = `${\r\n            (100 * (currentValue - inputRangeMinValue)) /\r\n            (inputRangeTotalValue - inputRangeMinValue)\r\n        }%`;\r\n    };\r\n\r\n    // /. functions\r\n\r\n    useEffect(() => {\r\n        dispatch(setCurrentRangeValue(inputRangeTotalValue));\r\n        fillRef.current.style.width = `${100}%`;\r\n        counterRef.current.style.left = `${100}%`;\r\n    }, []);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <form className=\"filter\">\r\n            <input\r\n                ref={inputRef}\r\n                className=\"filter__input\"\r\n                type=\"range\"\r\n                step=\"1\"\r\n                value={currentRangeValue}\r\n                min={inputRangeMinValue}\r\n                max={inputRangeTotalValue}\r\n                onChange={e => inputRangeHandler(e)}\r\n            />\r\n            <span className=\"filter__progress\">\r\n                <span\r\n                    ref={fillRef}\r\n                    className=\"filter__progress-fill\"\r\n                ></span>\r\n            </span>\r\n            <span\r\n                ref={counterRef}\r\n                className=\"filter__current\"\r\n            >\r\n                {currentRangeValue}\r\n            </span>\r\n            <div className=\"filter__indicators\">\r\n                <span className=\"filter__counter filter__counter--min\">{`${inputRangeMinValue} $`}</span>\r\n                <span className=\"filter__counter filter__counter--max\">{`${inputRangeTotalValue} $`}</span>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","export default __webpack_public_path__ + \"static/media/empty.cd1884f0.png\";","import React, { useState, useEffect } from 'react';\r\n\r\nimport SwiperCore, { Pagination } from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\n\r\nimport { setFilteredCardsDataLength } from 'store/actions/cardActions';\r\nimport { setTotalRangeValue } from 'store/actions/filterActions';\r\n\r\nimport { filterByPrice } from 'helpers/filterByPrice';\r\n\r\nimport Card from 'components/Card/Card';\r\nimport Filter from 'components/Filter/Filter';\r\n\r\nimport empty_image from 'assets/images/empty.png';\r\n\r\nimport './FavouritePage.scss';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss'; // core Swiper\r\nimport 'swiper/modules/pagination/pagination.scss'; // Pagination module\r\nimport { Ipet } from 'types/cardTypes';\r\n// import required modules\r\nSwiperCore.use([Pagination]);\r\n\r\n// /. Imports\r\n\r\nconst FavouritePage: React.FC = () => {\r\n    const { currentRangeValue } = useAppSelector(state => state.filterReducer);\r\n    const { likedCardsData } = useAppSelector(state => state.cardReducer);\r\n\r\n    const [filteredData, setFilteredData] = useState<Ipet[]>(likedCardsData);\r\n    const [isLikedDataEmpty, setLikedDataEmptyStatus] = useState<boolean>(true);\r\n    const [isFilteredDataEmpty, setFilteredDataEmptyStatus] =\r\n        useState<boolean>(true);\r\n    const [totalPrice, setTotalPrice] = useState<number>(0); // current total price of likedCardsData\r\n    const [sliderBreakpointsConfig] = useState<{\r\n        [key: number]: { [key: string]: number };\r\n    }>({\r\n        320: {\r\n            slidesPerView: 1,\r\n            spaceBetween: 30\r\n        },\r\n        360: {\r\n            slidesPerView: 1,\r\n            spaceBetween: 30\r\n        },\r\n        768: {\r\n            slidesPerView: 2,\r\n            spaceBetween: 30\r\n        },\r\n        1024: {\r\n            slidesPerView: 2.5,\r\n            spaceBetween: 30\r\n        }\r\n    });\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    useEffect(() => {\r\n        // run filter likedCardsData[]\r\n        setFilteredData(filterByPrice(likedCardsData, currentRangeValue));\r\n\r\n        // handle likedCardsData[] empty status\r\n        likedCardsData.length === 0\r\n            ? setLikedDataEmptyStatus(true)\r\n            : setLikedDataEmptyStatus(false);\r\n\r\n        // calc max price of basket item\r\n        const pricesArr = likedCardsData.map(({ price }) => price); // [1000, 2000, 3000]\r\n        const maxPriceValue = Math.max(...pricesArr); // 3000\r\n        dispatch(setTotalRangeValue(maxPriceValue));\r\n    }, [likedCardsData, currentRangeValue]);\r\n\r\n    useEffect(() => {\r\n        // handle filteredData[] empty status\r\n        filteredData.length === 0\r\n            ? setFilteredDataEmptyStatus(true)\r\n            : setFilteredDataEmptyStatus(false);\r\n        // set current filteredData[] length\r\n        dispatch(setFilteredCardsDataLength(filteredData.length));\r\n    }, [filteredData]);\r\n\r\n    useEffect(() => {\r\n        // calc current basket price\r\n        const totalSum = filteredData.reduce(\r\n            (acc, { price }) => acc + price,\r\n            0\r\n        );\r\n        setTotalPrice(totalSum);\r\n    }, [filteredData]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <section className=\"basket\">\r\n                <div className=\"basket__wrapper\">\r\n                    {!isLikedDataEmpty && (\r\n                        <div className=\"basket__section\">\r\n                            <div className=\"basket__price\">\r\n                                <div className=\"price\">\r\n                                    <h3 className=\"price__text\">\r\n                                        Total price:\r\n                                    </h3>\r\n                                    <div className=\"price__section\">\r\n                                        <span className=\"price__count\">\r\n                                            {totalPrice}\r\n                                        </span>\r\n                                        <span className=\"price__currency\">\r\n                                            $\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"basket__filter\">\r\n                                <Filter />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"basket__slider\">\r\n                        {isFilteredDataEmpty ? (\r\n                            <div className=\"empty\">\r\n                                <img\r\n                                    className=\"empty__preview\"\r\n                                    src={empty_image}\r\n                                    alt=\"empty\"\r\n                                />\r\n                                <h4 className=\"empty__text\">No matches</h4>\r\n                            </div>\r\n                        ) : (\r\n                            <Swiper\r\n                                className=\"mySwiper\"\r\n                                slidesPerView={3}\r\n                                spaceBetween={5}\r\n                                breakpoints={sliderBreakpointsConfig}\r\n                            >\r\n                                {filteredData.map((item: Ipet) => {\r\n                                    return (\r\n                                        <SwiperSlide key={item.id}>\r\n                                            <Card\r\n                                                key={item.id}\r\n                                                {...item}\r\n                                                role={'basket__card'}\r\n                                                currentRangeValue={\r\n                                                    currentRangeValue\r\n                                                }\r\n                                            />\r\n                                        </SwiperSlide>\r\n                                    );\r\n                                })}\r\n                            </Swiper>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FavouritePage;\r\n","// /. imports\r\n\r\nimport { Ipet } from 'types/cardTypes';\r\n\r\nexport function filterByPrice(array: Ipet[], valueToCompare: number): Ipet[] {\r\n    return array.filter(({ price }) => price <= valueToCompare);\r\n}\r\n","import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useAppSelector } from 'store/hooks';\r\n\r\nimport { fetchGifDataToggle } from 'store/actions/cardActions';\r\n\r\nimport fetchGifData from 'store/async-actions/fetchGifsData';\r\n\r\nimport PagePreloader from 'components/Common/Preloaders/PagePreloader/PagePreloader';\r\n\r\nimport './OverviewPage.scss';\r\nimport { IgifData } from 'types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst OverviewPage: React.FC = () => {\r\n    const {\r\n        gifData,\r\n        isGifDataFetching,\r\n        isGifDataFetchError,\r\n        gifDataFetchErrorMessage\r\n    } = useAppSelector(state => state.cardReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const fetchNewGifData = (): void => {\r\n        dispatch(fetchGifData());\r\n        dispatch(fetchGifDataToggle(true));\r\n    };\r\n\r\n    // /. functions\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"container container--middle\">\r\n                <section className=\"overview\">\r\n                    <div className=\"overview__wrapper\">\r\n                        {isGifDataFetching ? (\r\n                            <PagePreloader />\r\n                        ) : isGifDataFetchError ? (\r\n                            <p className=\"error\">{gifDataFetchErrorMessage}</p>\r\n                        ) : (\r\n                            <div className=\"overview__gallery\">\r\n                                {gifData.map((gifItem: IgifData) => {\r\n                                    return (\r\n                                        <div\r\n                                            className=\"overview__card\"\r\n                                            key={gifItem.id}\r\n                                        >\r\n                                            <img\r\n                                                className=\"overview__image\"\r\n                                                src={gifItem.image}\r\n                                                alt=\"funny gifts\"\r\n                                            />\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        )}\r\n                        <button\r\n                            className=\"overview__button\"\r\n                            onClick={fetchNewGifData}\r\n                            disabled={isGifDataFetching || isGifDataFetchError}\r\n                        >\r\n                            Watch others\r\n                        </button>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OverviewPage;\r\n","export default __webpack_public_path__ + \"static/media/in_process.448aa860.png\";","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport { changeMainPageStatus } from 'store/actions/headerActions';\r\n\r\nimport inProcessImage from 'assets/images/in_process.png';\r\n\r\n// /. Imports\r\n\r\nconst ProfilePage: React.FC = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const goHomePage = (): void => {\r\n        dispatch(changeMainPageStatus(true));\r\n        navigate('/Cats-Store', { replace: true });\r\n    };\r\n\r\n    // /. functions\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <article className=\"section__wrapper\">\r\n                <img\r\n                    className=\"section__image\"\r\n                    src={inProcessImage}\r\n                    alt=\"cat\"\r\n                />\r\n                <h1 className=\"section__title\">PROFILE PAGE IN PROCESS</h1>\r\n                <p className=\"section__link\">\r\n                    return to home{' '}\r\n                    <span>\r\n                        <Link\r\n                            to=\"/Cats-Store\"\r\n                            onClick={goHomePage}\r\n                        >\r\n                            page\r\n                        </Link>\r\n                    </span>\r\n                </p>\r\n            </article>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n","export default __webpack_public_path__ + \"static/media/no_found.bee11de8.png\";","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { useAppDispatch } from 'store/hooks';\r\n\r\nimport { changeMainPageStatus } from 'store/actions/headerActions';\r\n\r\nimport noFoundPage from 'assets/images/no_found.png';\r\n\r\n// /. Imports\r\n\r\nconst NoFoundPage: React.FC = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const goHomePage = (): void => {\r\n        dispatch(changeMainPageStatus(true));\r\n        navigate('/Cats-Store', { replace: true });\r\n    };\r\n\r\n    // /. functions\r\n\r\n    return (\r\n        <div className=\"section\">\r\n            <article className=\"section__wrapper\">\r\n                <img\r\n                    className=\"section__image\"\r\n                    src={noFoundPage}\r\n                    alt=\"404 error\"\r\n                />\r\n                <h1 className=\"section__title section__title-error\">404</h1>\r\n                <p className=\"section__link\">\r\n                    Sorry, this page doesn &apos t exist, return to home{' '}\r\n                    <span>\r\n                        <Link\r\n                            to=\"/Cats-Store\"\r\n                            onClick={goHomePage}\r\n                        >\r\n                            page\r\n                        </Link>\r\n                    </span>\r\n                </p>\r\n            </article>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoFoundPage;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Layout from 'components/Common/Layout';\r\nimport MainPage from 'components/Pages/MainPage/MainPage';\r\nimport FavouritePage from 'components/Pages/FavouritePage/FavouritePage';\r\nimport OverviewPage from 'components/Pages/OverviewPage/OverviewPage';\r\nimport ProfilePage from 'components/Pages/ProfilePage/ProfilePage';\r\nimport NoFoundPage from 'components/Pages/NoFoundPage/NoFoundPage';\r\n\r\nimport './App.css';\r\nimport 'assets/styles/_style.scss';\r\nimport 'assets/styles/_media.scss';\r\n\r\n// /. Imports\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Routes>\r\n                <Route\r\n                    path=\"/Cats-Store\"\r\n                    element={<Layout />}\r\n                >\r\n                    <Route\r\n                        index\r\n                        element={<MainPage />}\r\n                    />\r\n                    <Route\r\n                        path=\"Favourite\"\r\n                        element={<FavouritePage />}\r\n                    />\r\n                    <Route\r\n                        path=\"Live\"\r\n                        element={<OverviewPage />}\r\n                    />\r\n                    <Route\r\n                        path=\"Profile\"\r\n                        element={<ProfilePage />}\r\n                    />\r\n                    <Route\r\n                        path=\"*\"\r\n                        element={<NoFoundPage />}\r\n                    />\r\n                </Route>\r\n            </Routes>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry);\r\n                getFID(onPerfEntry);\r\n                getFCP(onPerfEntry);\r\n                getLCP(onPerfEntry);\r\n                getTTFB(onPerfEntry);\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport store from 'store/store';\r\n\r\nimport App from 'components/App/App';\r\n\r\nimport reportWebVitals from 'reportWebVitals';\r\n\r\n// /. Imports\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}