{"version":3,"sources":["reportWebVitals.js","store/actions/cardActions.ts","store/reducers/cardReducer.ts","store/actions/headerActions.ts","store/reducers/headerReducer.ts","store/actions/formActions.ts","store/reducers/formReducer.ts","store/actions/filterActions.ts","store/reducers/filterReducer.ts","store/store.ts","assets/images/logo.svg","components/Header/HeaderLink.tsx","hooks/usePageName.ts","components/Header/HeaderNav.tsx","components/BurgerMenu/BurgerMenu.tsx","components/Loader/Loader.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","assets/images/no_photo.png","store/async-actions/fetchCardsData.ts","store/async-actions/fetchGifData.ts","components/Common/Alert/FormAlert/FormAlert.tsx","components/Common/Layout.tsx","components/Card/Card.tsx","components/Card/CardLits.tsx","hooks/useSort.ts","components/SortButton/SortButtonTemplate.tsx","components/SortButton/SortButtonList.tsx","components/Common/Preloader/Preloader.tsx","components/Common/Alert/BasketAlert/BasketAlert.tsx","components/Pages/MainPage/MainPage.tsx","components/Filter/Filter.tsx","assets/images/empty.png","components/Pages/FavouritePage/FavouritePage.tsx","components/Pages/OverviewPage/OverviewPage.tsx","assets/images/in_process.png","components/Pages/ProfilePage/ProfilePage.tsx","assets/images/no_found.png","components/Pages/NoFoundPage/NoFoundPage.tsx","components/App/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ACTION_FETCH_CARDS","ACTION_FETCH_CARDS_DATA_TOGGLE","ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS","ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE","ACTION_SET_GIF_DATA","ACTION_FETCH_GIF_DATA_TOGGLE","ACTION_SET_GIF_DATA_ERROR_STATUS","ACTION_SET_GIF_DATA_ERROR_MESSAGE","ACTION_SET_LIKED_CARDS_DATA","ACTION_SET_FAVOURITE_STATUS","ACTION_SET_NOTIFICATION_VISIBLE_STATUS","ACTION_SORT_CARDS_PRICE_DECREASE","ACTION_SORT_CARDS_PRICE_INCREASE","ACTION_SORT_CARDS_AGE_DECREASE","ACTION_SORT_CARDS_AGE_INCREASE","ACTION_SET_FILTERED_CARDS_DATA","ACTION_SET_FILTERED_STATUS","fetchCards","data","type","payload","fetchCardsDataToggle","value","setFetchCardsDataErrorStatus","setGifData","fetchGifDataToggle","setGifDataErrorStatus","setNotificationVisibleStatus","status","setFavouriteStatus","id","setFilteredCardsData","setFilteredStatus","initialState","cards","gifData","likedCardsData","filteredCardsData","sortButtons","text","isSorted","isCardsDataFetching","isCardsDataFetchError","cardsDataFetchErrorMessage","isGifDataFetching","isGifDataFetchError","gifDataFetchErrorMessage","isNotificationVisible","isDataFiltered","cardReducer","state","action","map","item","isFavourite","filter","sort","a","b","price","parseInt","age","ACTION_CHANGE_NAV_DISPLAY","ACTION_GET_INPUT_VALUE","ACTION_CHANGE_MAIN_PAGE_STATUS","ACTION_CHANGE_OVERVIEW_PAGE_STATUS","ACTION_CHANGE_BURGER_STATUS","changeNavDisplay","getInputValue","changeMainPageStatus","changeOverviewPageStatus","changeBurgerStatus","headerLinks","link","isBurgerHidden","isBurgerOpen","isBodyScrolling","isHomePage","isOverviewPage","emailValue","headerReducer","ACTION_SET_FORM_ALERT_VISIBLE_STATUS","ACTION_SET_FORM_SUBMIT_STATUS","setFormAlertVisibleStatus","isFormAlertVisible","isFormSubmitted","formReducer","ACTION_SET_CURRENT_RANGE_VALUE","setCurrentRangeValue","inputRangeTotalValue","inputRangeMinValue","currentRangeValue","filterReducer","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","HeaderLink","dispatch","useDispatch","handlePageName","props","pageName","usePageName","className","to","onClick","document","body","style","overflowY","removeBodyStatus","HeaderNav","BurgerMenu","calcPaddingValue","paddingRight","window","innerWidth","clientWidth","Loader","Header","useSelector","useRef","defineBurgerStatus","useLayoutEffect","addEventListener","removeEventListener","useEffect","length","current","src","logo","alt","href","Footer","useState","unavailable","setUnavailableStatus","form","reset","setTimeout","ref","onSubmit","e","preventDefault","placeholder","disabled","required","onChange","target","fetchCardsData","pageCount","Math","floor","random","fetch","response","json","actualData","forEach","image","url","Object","keys","constructor","push","name","location","origin","paw","discount","discountStatus","Boolean","round","cardStatus","message","fetchGifData","FormAlert","keyHandler","code","color","size","Layout","Card","buttonLike","classList","remove","CardList","list","setList","useSort","defineSortOption","toggleSortCardsPriceDecrease","toggleSortCardsAgeDecrease","toggleSortCardsPriceIncrease","toggleSortCardsAgeIncrease","SortButtonTemplate","isSwitched","setSwitchStatus","SortButtonList","Preloader","BasketAlert","alert","add","MainPage","scrollPoint","requestHandler","scrollIntoView","block","behavior","Filter","input","counter","fill","width","left","min","max","step","currentValue","SwiperCore","use","Pagination","FavouritePage","emptyLikedCardsDataStatus","setEmptyLikedCardsStatus","emptyFilteredCardsStatus","setEmptyFilteredCardsStatus","totalPrice","setTotalPrice","reduce","prev","empty_image","slidesPerView","spaceBetween","breakpoints","OverviewPage","ProfilePage","navigate","useNavigate","inProcessImage","replace","NoFoundPage","noFoundPage","App","path","element","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0568d4d2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { actualDataTypes, gifDataTypes, cardActionTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_FETCH_CARDS = 'ACTION_FETCH_CARDS';\r\nexport const ACTION_FETCH_CARDS_DATA_TOGGLE = 'ACTION_FETCH_CARDS_DATA_TOGGLE';\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS = 'ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS';\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE = 'ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE';\r\n\r\nexport const ACTION_SET_GIF_DATA = 'ACTION_SET_GIF_DATA';\r\nexport const ACTION_FETCH_GIF_DATA_TOGGLE = 'ACTION_FETCH_GIF_DATA_TOGGLE';\r\nexport const ACTION_SET_GIF_DATA_ERROR_STATUS = 'ACTION_SET_GIF_DATA_ERROR_STATUS';\r\nexport const ACTION_SET_GIF_DATA_ERROR_MESSAGE = 'ACTION_SET_GIF_DATA_ERROR_MESSAGE';\r\n\r\nexport const ACTION_SET_LIKED_CARDS_DATA = 'ACTION_SET_LIKED_CARDS_DATA';\r\nexport const ACTION_SET_FAVOURITE_STATUS = 'ACTION_SET_FAVOURITE_STATUS';\r\nexport const ACTION_SET_NOTIFICATION_VISIBLE_STATUS = 'ACTION_SET_NOTIFICATION_VISIBLE_STATUS';\r\n\r\nexport const ACTION_SORT_CARDS_PRICE_DECREASE =\r\n  'ACTION_SORT_CARDS_PRICE_DECREASE';\r\nexport const ACTION_SORT_CARDS_PRICE_INCREASE =\r\n  'ACTION_SORT_CARDS_PRICE_INCREASE';\r\nexport const ACTION_SORT_CARDS_AGE_DECREASE = 'ACTION_SORT_CARDS_AGE_DECREASE';\r\nexport const ACTION_SORT_CARDS_AGE_INCREASE = 'ACTION_SORT_CARDS_AGE_INCREASE';\r\n\r\nexport const ACTION_SET_FILTERED_CARDS_DATA = 'ACTION_SET_FILTERED_CARDS_DATA';\r\nexport const ACTION_SET_FILTERED_STATUS = 'ACTION_SET_FILTERED_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const fetchCards = (data: actualDataTypes[]): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_CARDS,\r\n    payload: data\r\n  };\r\n};\r\nexport const fetchCardsDataToggle = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchCardsDataErrorStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchCardsDataErrorMessage = (value: string): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const setGifData = (data: gifDataTypes[]): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA,\r\n    payload: data\r\n  };\r\n};\r\nexport const fetchGifDataToggle = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_GIF_DATA_TOGGLE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setGifDataErrorStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchGifDataErrorMessage = (value: string): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setNotificationVisibleStatus = (status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n    payload: {\r\n      status\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setLikedCardsData = (): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_LIKED_CARDS_DATA\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const setFavouriteStatus = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FAVOURITE_STATUS,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const toggleSortCardsPriceDecrease = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_PRICE_DECREASE,\r\n    payload: { id, status }\r\n  };\r\n};\r\nexport const toggleSortCardsPriceIncrease = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_PRICE_INCREASE,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const toggleSortCardsAgeDecrease = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_AGE_DECREASE,\r\n    payload: { id, status }\r\n  };\r\n};\r\nexport const toggleSortCardsAgeIncrease = (\r\n  id: string,\r\n  status: boolean\r\n): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_AGE_INCREASE,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const setFilteredCardsData = (value: number): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FILTERED_CARDS_DATA,\r\n    payload: value\r\n  };\r\n};\r\nexport const setFilteredStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FILTERED_STATUS,\r\n    payload: value\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","import {\r\n  ACTION_FETCH_CARDS,\r\n  ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n  ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n  ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n  ACTION_SET_GIF_DATA,\r\n  ACTION_FETCH_GIF_DATA_TOGGLE,\r\n  ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n  ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n  ACTION_SET_FAVOURITE_STATUS,\r\n  ACTION_SET_LIKED_CARDS_DATA,\r\n  ACTION_SORT_CARDS_PRICE_DECREASE,\r\n  ACTION_SORT_CARDS_PRICE_INCREASE,\r\n  ACTION_SORT_CARDS_AGE_DECREASE,\r\n  ACTION_SORT_CARDS_AGE_INCREASE,\r\n  ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n  ACTION_SET_FILTERED_CARDS_DATA,\r\n  ACTION_SET_FILTERED_STATUS\r\n} from '../actions/cardActions';\r\nimport { CardStateTypes, cardActionTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst initialState: CardStateTypes = {\r\n  cards: [],\r\n  gifData: [],\r\n  likedCardsData: [],\r\n  filteredCardsData: [],\r\n  sortButtons: [\r\n    {\r\n      id: 'price',\r\n      text: 'Price',\r\n      isSorted: false\r\n    },\r\n    {\r\n      id: 'age',\r\n      text: 'Age',\r\n      isSorted: false\r\n    }\r\n  ],\r\n  isCardsDataFetching: true,\r\n  isCardsDataFetchError: false,\r\n  cardsDataFetchErrorMessage: 'error from fetchCardsData thunk',\r\n  isGifDataFetching: true,\r\n  isGifDataFetchError: false,\r\n  gifDataFetchErrorMessage: 'error from fetchGifData thunk',\r\n  isNotificationVisible: false,\r\n  isDataFiltered: false\r\n};\r\n\r\n// /. initialState\r\n\r\nconst cardReducer = (\r\n  state = initialState,\r\n  action: cardActionTypes\r\n): CardStateTypes => {\r\n  switch (action.type) {\r\n    case ACTION_FETCH_CARDS:\r\n      return {\r\n        ...state,\r\n        cards: [...state.cards, ...action.payload]\r\n      };\r\n    case ACTION_FETCH_CARDS_DATA_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isCardsDataFetching: action.payload.value\r\n      };\r\n    case ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS:\r\n      return {\r\n        ...state,\r\n        isCardsDataFetchError: action.payload.value\r\n      };\r\n    case ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        cardsDataFetchErrorMessage: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA:\r\n      return {\r\n        ...state,\r\n        gifData: action.payload\r\n      };\r\n    case ACTION_FETCH_GIF_DATA_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isGifDataFetching: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA_ERROR_STATUS:\r\n      return {\r\n        ...state,\r\n        isGifDataFetchError: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        gifDataFetchErrorMessage: action.payload.value\r\n      };\r\n    case ACTION_SET_FAVOURITE_STATUS:\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map((item) => {\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              isFavourite: action.payload.status\r\n            };\r\n          }\r\n          return item;\r\n        })\r\n      };\r\n    case ACTION_SET_LIKED_CARDS_DATA:\r\n      return {\r\n        ...state,\r\n        likedCardsData: state.cards.filter(item => item.isFavourite === true)\r\n      };\r\n    case ACTION_SET_NOTIFICATION_VISIBLE_STATUS:\r\n      return {\r\n        ...state,\r\n        isNotificationVisible: action.payload.status\r\n      };\r\n    case ACTION_SORT_CARDS_PRICE_DECREASE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return b.price - a.price;\r\n          })\r\n        ],\r\n        sortButtons: state.sortButtons.map((item) => {\r\n          return {\r\n            ...item,\r\n            isSorted: action.payload.status\r\n          };\r\n        })\r\n      };\r\n    case ACTION_SORT_CARDS_PRICE_INCREASE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return a.price - b.price;\r\n          })\r\n        ],\r\n        sortButtons: state.sortButtons.map((item) => {\r\n          return {\r\n            ...item,\r\n            isSorted: action.payload.status\r\n          };\r\n        })\r\n      };\r\n    case ACTION_SORT_CARDS_AGE_DECREASE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return parseInt(b.age) - parseInt(a.age);\r\n          })\r\n        ],\r\n        sortButtons: state.sortButtons.map((item) => {\r\n          return {\r\n            ...item,\r\n            isSorted: action.payload.status\r\n          };\r\n        })\r\n      };\r\n    case ACTION_SORT_CARDS_AGE_INCREASE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return parseInt(a.age) - parseInt(b.age);\r\n          })\r\n        ],\r\n        sortButtons: state.sortButtons.map((item) => {\r\n          return {\r\n            ...item,\r\n            isSorted: action.payload.status\r\n          };\r\n        })\r\n      };\r\n    case ACTION_SET_FILTERED_CARDS_DATA:\r\n      return {\r\n        ...state,\r\n        filteredCardsData: state.likedCardsData.filter(item => item.price <= action.payload)\r\n      };\r\n    case ACTION_SET_FILTERED_STATUS:\r\n      return {\r\n        ...state,\r\n        isDataFiltered: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { headerActionTypes } from '../../Types/headerTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_CHANGE_NAV_DISPLAY = 'ACTION_CHANGE_NAV_DISPLAY';\r\nexport const ACTION_GET_INPUT_VALUE = 'ACTION_SET_INPUT_VALUE';\r\nexport const ACTION_CHANGE_MAIN_PAGE_STATUS = 'ACTION_CHANGE_MAIN_PAGE_STATUS';\r\nexport const ACTION_CHANGE_OVERVIEW_PAGE_STATUS = 'ACTION_CHANGE_OVERVIEW_PAGE_STATUS';\r\nexport const ACTION_CHANGE_BURGER_STATUS = 'ACTION_CHANGE_BURGER_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const changeNavDisplay = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_NAV_DISPLAY,\r\n    payload: status\r\n  };\r\n};\r\n\r\n\r\nexport const getInputValue = (value: string): headerActionTypes => {\r\n  return {\r\n    type: ACTION_GET_INPUT_VALUE,\r\n    payload: value\r\n  };\r\n};\r\n\r\n\r\nexport const changeMainPageStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\nexport const changeOverviewPageStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_OVERVIEW_PAGE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\n\r\nexport const changeBurgerStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_BURGER_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { headerStateTypes, headerActionTypes } from '../../Types/headerTypes';\r\n\r\nimport {\r\n  ACTION_CHANGE_NAV_DISPLAY,\r\n  ACTION_GET_INPUT_VALUE,\r\n  ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n  ACTION_CHANGE_OVERVIEW_PAGE_STATUS,\r\n  ACTION_CHANGE_BURGER_STATUS\r\n} from '../actions/headerActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: headerStateTypes = {\r\n  headerLinks: [\r\n    {\r\n      id: 1,\r\n      text: 'Main',\r\n      link: '/Cats-Store/'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Favourite',\r\n      link: 'Favourite'\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Live',\r\n      link: 'Live'\r\n    },\r\n    {\r\n      id: 4,\r\n      text: 'Profile',\r\n      link: 'Profile'\r\n    }\r\n  ],\r\n  isBurgerHidden: true,\r\n  isBurgerOpen: false,\r\n  isBodyScrolling: true,\r\n  isHomePage: true,\r\n  isOverviewPage: false,\r\n  emailValue: ''\r\n};\r\n\r\n// /. initialState\r\n\r\nconst headerReducer = (\r\n  state = initialState,\r\n  action: headerActionTypes\r\n): headerStateTypes => {\r\n  switch (action.type) {\r\n    case ACTION_CHANGE_NAV_DISPLAY:\r\n      return {\r\n        ...state,\r\n        isBurgerHidden: action.payload\r\n      };\r\n    case ACTION_GET_INPUT_VALUE:\r\n      return {\r\n        ...state,\r\n        emailValue: action.payload\r\n      };\r\n    case ACTION_CHANGE_MAIN_PAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        isHomePage: action.payload\r\n      };\r\n    case ACTION_CHANGE_OVERVIEW_PAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        isOverviewPage: action.payload\r\n      };\r\n    case ACTION_CHANGE_BURGER_STATUS:\r\n      return {\r\n        ...state,\r\n        isBurgerOpen: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default headerReducer;\r\n","import { formActionTypes } from '../../Types/formTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_SET_FORM_ALERT_VISIBLE_STATUS = 'ACTION_SET_FORM_ALERT_VISIBLE_STATUS';\r\nexport const ACTION_SET_FORM_SUBMIT_STATUS = 'ACTION_SET_FORM_SUBMIT_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const setFormAlertVisibleStatus = (status: boolean): formActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FORM_ALERT_VISIBLE_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\nexport const setFormSubmitStatus = (status: boolean): formActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FORM_SUBMIT_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { formStateTypes, formActionTypes } from '../../Types/formTypes';\r\n\r\nimport {\r\n    ACTION_SET_FORM_ALERT_VISIBLE_STATUS,\r\n    ACTION_SET_FORM_SUBMIT_STATUS\r\n} from '../actions/formActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: formStateTypes = {\r\n    isFormAlertVisible: false,\r\n    isFormSubmitted: false\r\n};\r\n\r\n// /. initialState\r\n\r\nconst formReducer = (\r\n    state = initialState,\r\n    action: formActionTypes\r\n): formStateTypes => {\r\n    switch (action.type) {\r\n        case ACTION_SET_FORM_ALERT_VISIBLE_STATUS:\r\n            return {\r\n                ...state,\r\n                isFormAlertVisible: action.payload\r\n            };\r\n        case ACTION_SET_FORM_SUBMIT_STATUS:\r\n            return {\r\n                ...state,\r\n                isFormSubmitted: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default formReducer;\r\n","import { filterActionTypes } from '../../Types/filterTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_SET_CURRENT_RANGE_VALUE = 'ACTION_SET_CURRENT_RANGE_VALUE';\r\n\r\n// /. AC Names\r\n\r\nexport const setCurrentRangeValue = (value: number): filterActionTypes => {\r\n    return {\r\n        type: ACTION_SET_CURRENT_RANGE_VALUE,\r\n        payload: value\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { filterStateTypes, filterActionTypes } from '../../Types/filterTypes';\r\n\r\nimport {\r\n    ACTION_SET_CURRENT_RANGE_VALUE\r\n} from '../actions/filterActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: filterStateTypes = {\r\n    inputRangeTotalValue: 10000,\r\n    inputRangeMinValue: 1500,\r\n    currentRangeValue: 0\r\n};\r\n\r\n// /. initialState\r\n\r\nconst filterReducer = (\r\n    state = initialState,\r\n    action: filterActionTypes\r\n): filterStateTypes => {\r\n    switch (action.type) {\r\n        case ACTION_SET_CURRENT_RANGE_VALUE:\r\n            return {\r\n                ...state,\r\n                currentRangeValue: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport cardReducer from './reducers/cardReducer';\r\nimport headerReducer from './reducers/headerReducer';\r\nimport formReducer from './reducers/formReducer';\r\nimport filterReducer from './reducers/filterReducer';\r\n\r\n// /. Imports\r\n\r\nconst reducers = combineReducers({\r\n  cardReducer: cardReducer,\r\n  headerReducer: headerReducer,\r\n  formReducer: formReducer,\r\n  filterReducer: filterReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","export default __webpack_public_path__ + \"static/media/logo.c8358bcd.svg\";","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport {\r\n  changeMainPageStatus,\r\n  changeBurgerStatus\r\n} from '../../store/actions/headerActions';\r\nimport { usePageName } from '../../hooks/usePageName';\r\n\r\n// /. Imports\r\n\r\ninterface HeaderLinkProps {\r\n  isBurgerHidden?: boolean;\r\n  link: string;\r\n  text: string;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst HeaderLink: React.FC<HeaderLinkProps> = ({\r\n  isBurgerHidden,\r\n  link,\r\n  text\r\n}) => {\r\n  const { handlePageName } = usePageName();\r\n  const dispatch = useDispatch();\r\n  //\r\n  const removeBodyStatus = (text: string): void => {\r\n    dispatch(changeMainPageStatus(false));\r\n    dispatch(changeBurgerStatus(false));\r\n    handlePageName({ pageName: text });\r\n    document.body.style.overflowY = 'auto';\r\n  };\r\n  // \r\n  return (\r\n    <li className={isBurgerHidden ? 'nav__menu_item' : 'nav__menu_item-burger'}>\r\n      <NavLink\r\n        to={link}\r\n        className={isBurgerHidden ? 'nav__menu_link' : 'nav__menu_link-burger'}\r\n        onClick={() => removeBodyStatus(text)}\r\n      >\r\n        {text}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default HeaderLink;\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    changeMainPageStatus,\r\n    changeOverviewPageStatus\r\n} from '../store/actions/headerActions';\r\nimport { setNotificationVisibleStatus } from '../store/actions/cardActions';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    pageName: string\r\n}\r\n\r\n// /. interfaces\r\n\r\nexport function usePageName() {\r\n    const dispatch = useDispatch();\r\n\r\n    const handlePageName = (props: propTypes) => {\r\n\r\n        const { pageName } = props;\r\n\r\n        switch (pageName) {\r\n            case 'Main':\r\n                dispatch(changeMainPageStatus(true));\r\n                dispatch(setNotificationVisibleStatus(false));\r\n                dispatch(changeOverviewPageStatus(false));\r\n                break;\r\n            case 'Favourite':\r\n                dispatch(changeOverviewPageStatus(false));\r\n                break;\r\n            case 'Live':\r\n                dispatch(changeOverviewPageStatus(true));\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    return { handlePageName };\r\n}","import React from 'react';\r\n\r\nimport HeaderLink from './HeaderLink';\r\n\r\n// /. Imports\r\n\r\ninterface HeaderNavProps {\r\n  headerLinks: any[];\r\n  isBurgerHidden?: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst HeaderNav: React.FC<HeaderNavProps> = ({\r\n  headerLinks,\r\n  isBurgerHidden\r\n}) => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className={isBurgerHidden ? 'nav__menu' : 'nav__menu-burger'}>\r\n        {headerLinks.map(item => {\r\n          return (\r\n            <HeaderLink\r\n              key={item.id}\r\n              text={item.text}\r\n              link={item.link}\r\n              isBurgerHidden={isBurgerHidden}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { changeBurgerStatus } from '../../store/actions/headerActions';\r\nimport HeaderNav from '../Header/HeaderNav';\r\nimport './BurgerMenu.scss';\r\n\r\n// /. Imports\r\n\r\ninterface BurgerMenuProps {\r\n  headerLinks: any[];\r\n  isBurgerOpen: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst BurgerMenu: React.FC<BurgerMenuProps> = ({\r\n  headerLinks,\r\n  isBurgerOpen\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  //\r\n  const calcScrollBarWidth = () => {\r\n    return window.innerWidth - document.body.clientWidth;\r\n  };\r\n\r\n  const calcPaddingValue = (): string => {\r\n    return (document.body.style.paddingRight = `${calcScrollBarWidth()}`);\r\n  };\r\n\r\n  const defineScrollStatus = (): void => {\r\n    if (isBurgerOpen === true) {\r\n      document.body.style.overflowY = 'auto';\r\n    } else {\r\n      document.body.style.overflowY = 'hidden';\r\n    }\r\n  };\r\n\r\n  const openBurger = (): void => {\r\n    dispatch(changeBurgerStatus(!isBurgerOpen));\r\n    defineScrollStatus();\r\n    calcPaddingValue();\r\n  };\r\n  // \r\n  return (\r\n    <>\r\n      <div className=\"menu\" onClick={openBurger}>\r\n        <div\r\n          className={\r\n            isBurgerOpen\r\n              ? 'menu__line menu__line-top opened'\r\n              : 'menu__line menu__line-top'\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            isBurgerOpen\r\n              ? 'menu__line menu__line-middle opened'\r\n              : 'menu__line menu__line-middle'\r\n          }\r\n        ></div>\r\n        <div\r\n          className={\r\n            isBurgerOpen\r\n              ? 'menu__line menu__line-bottom opened'\r\n              : 'menu__line menu__line-bottom'\r\n          }\r\n        ></div>\r\n      </div>\r\n      <div className={isBurgerOpen ? 'burger active' : 'burger'}>\r\n        <div className=\"burger__nav\">\r\n          <HeaderNav headerLinks={headerLinks} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\n// /. Imports\r\n\r\nconst Loader: React.FC = () => {\r\n    return (\r\n        <h1 className=\"loader\">\r\n            Loading\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, { useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { changeNavDisplay } from '../../store/actions/headerActions';\r\nimport { RootState } from '../../store/store';\r\n\r\nimport logo from '../../assets/images/logo.svg';\r\n\r\nimport BurgerMenu from '../BurgerMenu/BurgerMenu';\r\nimport Loader from '../Loader/Loader';\r\n\r\nimport HeaderNav from './HeaderNav';\r\n\r\nimport './Header.scss';\r\n\r\n// /. Imports\r\n\r\nconst Header: React.FC = () => {\r\n  const { headerLinks,\r\n    isBurgerHidden,\r\n    isBurgerOpen,\r\n    isHomePage,\r\n    isOverviewPage\r\n  } = useSelector((state: RootState) => state.headerReducer);\r\n\r\n  const {\r\n    isCardsDataFetching,\r\n    isCardsDataFetchError,\r\n    isDataFiltered,\r\n    cards,\r\n    likedCardsData,\r\n    filteredCardsData\r\n  } = useSelector((state: RootState) => state.cardReducer);\r\n\r\n  const text = useRef<string>('cat');\r\n\r\n  const dispatch = useDispatch();\r\n  //\r\n  const defineBurgerStatus = (): void => {\r\n    if (window.innerWidth < 800) {\r\n      dispatch(changeNavDisplay(false));\r\n    } else if (window.innerWidth > 800) {\r\n      dispatch(changeNavDisplay(true));\r\n    }\r\n  };\r\n  //\r\n  useLayoutEffect(() => {\r\n    window.addEventListener('resize', defineBurgerStatus);\r\n    window.addEventListener('load', defineBurgerStatus);\r\n    return () => {\r\n      window.removeEventListener('resize', defineBurgerStatus);\r\n      window.removeEventListener('load', defineBurgerStatus);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (likedCardsData.length === 1) {\r\n      text.current = 'cat';\r\n    }\r\n    if (likedCardsData.length >= 2) {\r\n      text.current = 'cats';\r\n    }\r\n    if (filteredCardsData.length === 0) {\r\n      text.current = 'cat';\r\n    }\r\n    if (filteredCardsData.length === 1) {\r\n      text.current = 'cat';\r\n    }\r\n    if (filteredCardsData.length >= 2) {\r\n      text.current = 'cats';\r\n    }\r\n  }, [likedCardsData, filteredCardsData, isDataFiltered]);\r\n  // \r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__section\">\r\n            <img src={logo} alt=\"logo\" />\r\n          <>\r\n            {isBurgerHidden ? (\r\n              <HeaderNav\r\n                headerLinks={headerLinks}\r\n                isBurgerHidden={isBurgerHidden}\r\n              />\r\n            ) : (\r\n              <BurgerMenu\r\n                headerLinks={headerLinks}\r\n                isBurgerOpen={isBurgerOpen}\r\n              />\r\n            )}\r\n          </>\r\n          <div className=\"header__telephone telephone\">\r\n            <a className=\"telephone__number\" href=\"tel:+544 3490 00000\">\r\n              +544 3490 00000\r\n            </a>\r\n            <span className=\"telephone__description\">Call soon!</span>\r\n          </div>\r\n        </div>\r\n        <>\r\n          <>\r\n            {isCardsDataFetching ? (\r\n              <Loader />\r\n            ) : (\r\n              <>\r\n                {isHomePage\r\n                  ? <h1 className=\"header__text\">{`Found ${isCardsDataFetchError ? '0' : cards.length} cats`}</h1>\r\n                  : isOverviewPage\r\n                    ? <h1 className=\"header__text\">{'Have a good day ;)'}</h1>\r\n                    : <h1 className=\"header__text\">\r\n                      {`Selected ${isCardsDataFetchError ? '0' : isDataFiltered ? filteredCardsData.length : likedCardsData.length} ${text.current}`}\r\n                    </h1>\r\n                }\r\n              </>\r\n            )}\r\n          </>\r\n        </>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getInputValue } from '../../store/actions/headerActions';\r\nimport { setFormAlertVisibleStatus, setFormSubmitStatus } from '../../store/actions/formActions';\r\nimport { RootState } from '../../store/store';\r\nimport './Footer.scss';\r\n\r\n// /. Imports\r\n\r\nconst Footer: React.FC = () => {\r\n  const { emailValue } = useSelector(\r\n    (state: RootState) => state.headerReducer\r\n  );\r\n  const { isFormAlertVisible, isFormSubmitted } = useSelector(\r\n    (state: RootState) => state.formReducer\r\n  );\r\n  const [unavailable, setUnavailableStatus] = useState<boolean>(false);\r\n  const form = useRef<HTMLFormElement>(null);\r\n  const dispatch = useDispatch();\r\n  // \r\n  const inputHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    dispatch(getInputValue(e.target.value));\r\n  };\r\n\r\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    dispatch(setFormAlertVisibleStatus(true));\r\n    dispatch(setFormSubmitStatus(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFormSubmitted && !isFormAlertVisible) {\r\n      form.current?.reset();\r\n      dispatch(getInputValue(''));\r\n      setUnavailableStatus(true);\r\n      setTimeout(() => {\r\n        setUnavailableStatus(false);\r\n      }, 10000);\r\n    }\r\n  }, [isFormAlertVisible, isFormSubmitted]);\r\n  // \r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"footer__wrapper\">\r\n          <div className=\"footer__description\">\r\n            <h2 className=\"footer__title\">Hurry up to buy!</h2>\r\n            <p className=\"footer__subtitle\">\r\n              Subscribe and catch all the promotions\r\n            </p>\r\n          </div>\r\n          <form ref={form} className=\"form\" onSubmit={onFormSubmit}>\r\n            <div className=\"form__controls\">\r\n              <input\r\n                className=\"form__input\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                disabled={unavailable}\r\n                required\r\n                value={emailValue}\r\n                onChange={inputHandler}\r\n              />\r\n              <button className=\"form__button button\" disabled={unavailable}>Subscribe</button>\r\n            </div>\r\n            <label className=\"form__cheakbox-label\">\r\n              Subscribe to news\r\n              <input\r\n                className=\"form__cheakbox-input\"\r\n                type=\"checkbox\"\r\n                disabled={unavailable}\r\n                required\r\n              />\r\n            </label>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/no_photo.bb351cb8.png\";","import { fetchCards, fetchCardsDataToggle, setFetchCardsDataErrorMessage, setFetchCardsDataErrorStatus } from '../actions/cardActions';\r\nimport url from '../../assets/images/no_photo.png';\r\nimport { cardActionTypes, actualDataTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst fetchCardsData = () => {\r\n    const pageCount = Math.floor(Math.random() * 10);\r\n    return async function (dispatch: (arg0: cardActionTypes) => void) {\r\n        try {\r\n            const response = await fetch(`https://api.thecatapi.com/v1/breeds?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=6&page=${pageCount}`);\r\n            const data = await response.json();\r\n\r\n            if (response) {\r\n                setTimeout(() => {\r\n                    dispatch(fetchCardsDataToggle(false));\r\n                }, 600);\r\n            }\r\n\r\n            const responseData: any[] = data;\r\n            const actualData: actualDataTypes[] = [];\r\n\r\n            responseData.forEach(item => {\r\n                if (!item['image']) {\r\n                    const wrongItem = item;\r\n                    wrongItem.image = { url };\r\n                }\r\n                if (Object.keys(item.image).length === 0 && item.image.constructor === Object) {\r\n                    const wrongItem = item;\r\n                    wrongItem.image = { url };\r\n                }\r\n                // /. response validation\r\n                actualData.push(\r\n                    {\r\n                        id: `${Math.random() + item.id}`,\r\n                        image: item.image.url,\r\n                        name: item.name,\r\n                        location: item.origin,\r\n                        paw: '4',\r\n                        age: `${Math.floor(Math.random() * 12) + 1} mth.`,\r\n                        price: +Math.floor(Math.random() * 10000), // max 10000\r\n                        discount: `-${Math.floor(Math.random() * 60) + 10}%`,\r\n                        discountStatus: Boolean(Math.round(Math.random())),\r\n                        cardStatus: Boolean(Math.round(Math.random())),\r\n                        isFavourite: false\r\n                    }\r\n                );\r\n            });\r\n            dispatch(fetchCards(actualData));\r\n        } catch (error: any) {\r\n            dispatch(setFetchCardsDataErrorMessage(`There are some problems with response: ${error.message}.`));\r\n            setTimeout(() => {\r\n                dispatch(fetchCardsDataToggle(false));\r\n                dispatch(setFetchCardsDataErrorStatus(true));\r\n            }, 600);\r\n        }\r\n    };\r\n};\r\n\r\nexport default fetchCardsData;\r\n\r\n","import { setGifData, fetchGifDataToggle, setGifDataErrorStatus, setFetchGifDataErrorMessage } from '../actions/cardActions';\r\nimport { cardActionTypes, gifDataTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst fetchGifData = () => {\r\n    return async function (dispatch: (arg0: cardActionTypes) => void) {\r\n        try {\r\n            const response = await fetch('https://api.thecatapi.com/v1/images/search?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=8&size=full&mime_types=gif');\r\n            const data = await response.json();\r\n\r\n            if (response) {\r\n                setTimeout(() => {\r\n                    dispatch(fetchGifDataToggle(false));\r\n                }, 500);\r\n            }\r\n\r\n            const responseData: any[] = data;\r\n            const actualData: gifDataTypes[] = [];\r\n\r\n            responseData.forEach(item => {\r\n                actualData.push(\r\n                    {\r\n                        id: `${Math.random() + item.id}`,\r\n                        image: item.url\r\n                    }\r\n                );\r\n            });\r\n            dispatch(setGifData(actualData));\r\n        } catch (error: any) {\r\n            dispatch(setFetchGifDataErrorMessage(`There are some problems with response: ${error.message}.`));\r\n            setTimeout(() => {\r\n                dispatch(fetchGifDataToggle(false));\r\n                dispatch(setGifDataErrorStatus(true));\r\n            }, 600);\r\n        }\r\n    };\r\n};\r\n\r\nexport default fetchGifData;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\n\r\nimport { setFormAlertVisibleStatus } from '../../../../store/actions/formActions';\r\n\r\nimport './FormAlert.scss';\r\n\r\n// /. Imports\r\n\r\nconst FormAlert: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    // \r\n    const submitAlert = (): void => {\r\n        dispatch(setFormAlertVisibleStatus(false));\r\n    };\r\n\r\n    const keyHandler = (e: KeyboardEvent): void => {\r\n        if (e.code === 'Escape') {\r\n            dispatch(setFormAlertVisibleStatus(false));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', keyHandler);\r\n        return () => {\r\n            window.removeEventListener('keydown', keyHandler);\r\n        };\r\n    }, []);\r\n    //\r\n    return (\r\n        <div className=\"form-alert\">\r\n            <div className=\"form-alert__wrapper\">\r\n                <div className=\"form-alert__description\">\r\n                    <RiErrorWarningLine color={'#e52d2d'} size={'24px'} />\r\n                    <p className=\"form-alert__text\">Sorry! Function temporarily unavailable</p>\r\n                </div>\r\n                <div className=\"form-alert__controls\">\r\n                    <button className=\"form-alert__button\" onClick={submitAlert}>Ok</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormAlert;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Outlet } from 'react-router';\r\n\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport fetchCardsData from '../../store/async-actions/fetchCardsData';\r\nimport fetchGifData from '../../store/async-actions/fetchGifData';\r\nimport { RootState } from '../../store/store';\r\n\r\nimport FormAlert from './Alert/FormAlert/FormAlert';\r\n\r\n// /. Imports\r\n\r\nconst Layout: React.FC = () => {\r\n  const { isFormAlertVisible } = useSelector((state: RootState) => state.formReducer);\r\n  const dispatch = useDispatch();\r\n  // \r\n  useEffect(() => {\r\n    dispatch(fetchCardsData());\r\n    dispatch(fetchGifData());\r\n  }, []);\r\n  // \r\n  return (\r\n    <div className=\"page\">\r\n      <>\r\n        {isFormAlertVisible ?\r\n          <FormAlert />\r\n          :\r\n          <></>\r\n        }\r\n      </>\r\n      <Header />\r\n      <main className=\"main\">\r\n        <Outlet />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { BsHeartFill } from 'react-icons/bs';\r\n\r\nimport { setFavouriteStatus, setLikedCardsData, setFilteredCardsData } from '../../store/actions/cardActions';\r\n\r\nimport './Card.scss';\r\n\r\n// /. Imports\r\n\r\ninterface CardProps {\r\n  id: string;\r\n  image: string;\r\n  name: string;\r\n  location: string;\r\n  age: string;\r\n  paw: string;\r\n  price: number;\r\n  discount: string;\r\n  isFavourite: boolean;\r\n  cardStatus: boolean;\r\n  discountStatus: boolean;\r\n  currentRangeValue: number;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  id,\r\n  image,\r\n  name,\r\n  location,\r\n  age,\r\n  paw,\r\n  price,\r\n  discount,\r\n  isFavourite,\r\n  cardStatus,\r\n  discountStatus,\r\n  currentRangeValue\r\n}) => {\r\n  const buttonLike = useRef<HTMLButtonElement>(null!);\r\n  const dispatch = useDispatch();\r\n  // \r\n  const setFavourite = (): void => {\r\n    isFavourite ? dispatch(setFavouriteStatus(id, false)) : dispatch(setFavouriteStatus(id, true));\r\n    dispatch(setLikedCardsData()); // filter cards for likedCardsData\r\n    dispatch(setFilteredCardsData(currentRangeValue)); // update filteredCardsData\r\n  };\r\n  // \r\n\r\n  useEffect(() => {\r\n    buttonLike.current.classList.remove('unlike');\r\n  }, []);\r\n  // \r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__preview\">\r\n        <div className=\"card__icons\">\r\n          <span\r\n            className={\r\n              discountStatus\r\n                ? 'card__icons_discount'\r\n                : 'card__icons_discount-none'\r\n            }\r\n          >\r\n            {discount}\r\n          </span>\r\n          <button\r\n            ref={buttonLike}\r\n            className={isFavourite ? 'card__icons_button like' : 'card__icons_button unlike'}\r\n            disabled={cardStatus ? false : true}\r\n            onClick={setFavourite}\r\n          >\r\n            <BsHeartFill color={'#fff'} size={'42px'}/>\r\n          </button>\r\n        </div>\r\n        <img className=\"card__image\" src={image} alt=\"cat\" />\r\n      </div>\r\n      <div className=\"card__information\">\r\n        <p className=\"card__name\">{name}</p>\r\n        <ul className=\"card__description description\">\r\n          <li className=\"description__item description__item_color\">\r\n            Location: <br />\r\n            <strong>{location}</strong>\r\n          </li>\r\n          <li className=\"description__item description__item_age\">\r\n            <span className=\"bold\">{age}</span> <br /> Age\r\n          </li>\r\n          <li className=\"description__item description__item_paw\">\r\n            <span className=\"bold\">{paw}</span> <br /> Paws count\r\n          </li>\r\n        </ul>\r\n        <p className=\"card__price\">{`${price} USD`}</p>\r\n      </div>\r\n      <button\r\n        className={\r\n          cardStatus ? 'card__button button' : 'card__button-sold button'\r\n        }\r\n      >\r\n        {cardStatus ? 'Buy' : 'Sold'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store/store';\r\nimport { actualDataTypes } from '../../Types/cardTypes';\r\n\r\nimport Card from './Card';\r\n\r\n// /. Imports\r\n\r\nconst CardList: React.FC = () => {\r\n  const { cards, likedCardsData } = useSelector((state: RootState) => state.cardReducer);\r\n  const { isHomePage } = useSelector((state: RootState) => state.headerReducer);\r\n  const { currentRangeValue } = useSelector((state: RootState) => state.filterReducer);\r\n  const [list, setList] = useState<actualDataTypes[]>([]);\r\n  // \r\n  useEffect(() => {\r\n    isHomePage ? setList(cards) : setList(likedCardsData);\r\n  }, [cards, likedCardsData, isHomePage]);\r\n  // \r\n  return (\r\n    <div className=\"gallery__cards\">\r\n      {list.map(item => {\r\n        return (\r\n          <Card\r\n            key={item.id}\r\n            id={item.id}\r\n            image={item.image}\r\n            name={item.name}\r\n            location={item.location}\r\n            age={item.age}\r\n            paw={item.paw}\r\n            price={item.price}\r\n            discount={item.discount}\r\n            isFavourite={item.isFavourite}\r\n            cardStatus={item.cardStatus}\r\n            discountStatus={item.discountStatus}\r\n            currentRangeValue={currentRangeValue}\r\n          />\r\n        );\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    toggleSortCardsPriceDecrease,\r\n    toggleSortCardsAgeDecrease,\r\n    toggleSortCardsPriceIncrease,\r\n    toggleSortCardsAgeIncrease\r\n} from '../store/actions/cardActions';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    name: string,\r\n    status: boolean\r\n}\r\n\r\n// /. interfaces\r\n\r\nexport function useSort() {\r\n    const dispatch = useDispatch();\r\n\r\n    const defineSortOption = (props: propTypes) => {\r\n        const { name, status } = props;\r\n\r\n        switch (status) {\r\n            case (name === 'price'):\r\n                dispatch(toggleSortCardsPriceDecrease(name, status));\r\n                break;\r\n            case (name === 'age'):\r\n                dispatch(toggleSortCardsAgeDecrease(name, status));\r\n                break;\r\n            case (name === 'price' && status === false):\r\n                dispatch(toggleSortCardsPriceIncrease(name, status));\r\n                break;\r\n            case (name === 'age' && status === false):\r\n                dispatch(toggleSortCardsAgeIncrease(name, status));\r\n                break;\r\n        }\r\n    };\r\n\r\n    return { defineSortOption };\r\n}","import React, { useState } from 'react';\r\n\r\nimport { MdKeyboardArrowUp, MdKeyboardArrowDown } from 'react-icons/md';\r\n\r\nimport { useSort } from '../../hooks/useSort';\r\n\r\n// /. Imports\r\n\r\ninterface SortButtonTemplateProps {\r\n  id: string;\r\n  text: string;\r\n  isCardsDataFetching: boolean;\r\n  isCardsDataFetchError: boolean;\r\n  isSorted: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst SortButtonTemplate: React.FC<SortButtonTemplateProps> = ({\r\n  id,\r\n  text,\r\n  isCardsDataFetching,\r\n  isCardsDataFetchError\r\n}) => {\r\n  const [isSwitched, setSwitchStatus] = useState<boolean>(false);\r\n  const { defineSortOption } = useSort();\r\n  //\r\n  const runSort = (): void => {\r\n    setSwitchStatus(!isSwitched);\r\n    defineSortOption({ name: id, status: isSwitched });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"controls__menu\"\r\n      disabled={isCardsDataFetching ? true : isCardsDataFetchError ? true : false}\r\n      onClick={runSort}\r\n    >\r\n      <span className=\"controls__menu_text\">{text}</span>\r\n      <span>\r\n        {isSwitched ? <MdKeyboardArrowUp color={'#000'} size={'26px'} /> : <MdKeyboardArrowDown color={'#000'} size={'26px'} />}\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SortButtonTemplate;\r\n","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store/store';\r\n\r\nimport SortButtonTemplate from './SortButtonTemplate';\r\nimport './Sort.scss';\r\n\r\n// /. Imports\r\n\r\nconst SortButtonList: React.FC = () => {\r\n\r\n  const {\r\n    isCardsDataFetching,\r\n    isCardsDataFetchError,\r\n    sortButtons\r\n  } = useSelector(\r\n    (state: RootState) => state.cardReducer\r\n  );\r\n  //\r\n  return (\r\n    <div className=\"controls__wrapper\">\r\n      {sortButtons.map(item => {\r\n        return (\r\n          <SortButtonTemplate\r\n            key={item.id}\r\n            id={item.id}\r\n            text={item.text}\r\n            isSorted={item.isSorted}\r\n            isCardsDataFetching={isCardsDataFetching}\r\n            isCardsDataFetchError={isCardsDataFetchError}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortButtonList;\r\n","import React from 'react';\r\nimport './Preloader.scss';\r\n\r\n// /. Imports\r\n\r\nconst Preloader: React.FC = () => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\nimport { IoCloseOutline } from 'react-icons/io5';\r\n\r\nimport { setNotificationVisibleStatus } from '../../../../store/actions/cardActions';\r\nimport { changeMainPageStatus } from '../../../../store/actions/headerActions';\r\nimport { RootState } from '../../../../store/store';\r\nimport './BasketAlert.scss';\r\n\r\n// /. Imports\r\n\r\nconst BasketAlert: React.FC = () => {\r\n    const { likedCardsData } = useSelector((state: RootState) => state.cardReducer);\r\n    const dispatch = useDispatch();\r\n    const alert = useRef<HTMLDivElement>(null);\r\n    // \r\n    const closeAlert = (): void => {\r\n        dispatch(setNotificationVisibleStatus(false));\r\n        alert.current?.classList.remove('visible');\r\n        alert.current?.classList.add('hide');\r\n    };\r\n\r\n    const relocateToFavouritePage = (): void => {\r\n        dispatch(changeMainPageStatus(false));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (likedCardsData.length > 1 && likedCardsData.length % 2 === 0) { // logic of show/hide BasketAlert\r\n            dispatch(setNotificationVisibleStatus(true));\r\n            alert.current?.classList.add('visible');\r\n            alert.current?.classList.add('opacity');\r\n            alert.current?.classList.remove('hide');\r\n            setTimeout(() => {\r\n                dispatch(setNotificationVisibleStatus(false));\r\n                alert.current?.classList.remove('visible');\r\n                alert.current?.classList.add('hide');\r\n            }, 3500);\r\n        }\r\n        if (likedCardsData.length === 0) {\r\n            dispatch(setNotificationVisibleStatus(false));\r\n        }\r\n    }, [likedCardsData]);\r\n    // \r\n    return (\r\n        <div ref={alert} className=\"alert\">\r\n            <div className=\"alert__wrapper\">\r\n                <div className=\"alert__notification\">\r\n                    <Link to=\"Favourite\" onClick={relocateToFavouritePage}>\r\n                        <RiErrorWarningLine color={'#000'} size={'22px'} />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"alert__information\">\r\n                    <span className=\"alert__message\">Visit to Favourite page!</span>\r\n                    <span className=\"alert__count\">{`${likedCardsData.length} in basket!`}</span>\r\n                </div>\r\n                <button className=\"alert__button\" onClick={closeAlert}>\r\n                    <IoCloseOutline color={'#000'} size={'18px'} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BasketAlert;","import React, { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { MdKeyboardArrowUp } from 'react-icons/md';\r\n\r\nimport CardList from '../../Card/CardLits';\r\nimport SortButtonList from '../../SortButton/SortButtonList';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport BasketAlert from '../../Common/Alert/BasketAlert/BasketAlert';\r\n\r\nimport requestHandler from '../../../store/async-actions/fetchCardsData';\r\n\r\nimport { RootState } from '../../../store/store';\r\n\r\n// /. Imports\r\n\r\nconst MainPage: React.FC = () => {\r\n  const { isCardsDataFetching, isCardsDataFetchError, cardsDataFetchErrorMessage } = useSelector(\r\n    (state: RootState) => state.cardReducer\r\n  );\r\n  const dispatch = useDispatch();\r\n  const scrollPoint = useRef<HTMLDivElement>(null!);\r\n  //\r\n  const scrollTop = (): void => {\r\n    scrollPoint.current.scrollIntoView({ block: 'start', behavior: 'smooth' });\r\n  };\r\n\r\n  const fetchRequest = (): void => {\r\n    dispatch(requestHandler());\r\n  };\r\n  //\r\n  return (\r\n    <div ref={scrollPoint} className=\"section\">\r\n      <div className=\"container\">\r\n        <div className=\"gallery\">\r\n          <div className=\"controls\">\r\n            <span className=\"controls__title\">Sorted by:</span>\r\n            <>\r\n              <SortButtonList />\r\n            </>\r\n          </div>\r\n          <div className=\"gallery__wrapper\">\r\n            <>\r\n              {isCardsDataFetching ? (\r\n                <Preloader />\r\n              ) : isCardsDataFetchError ? (\r\n                <div className=\"error\">{cardsDataFetchErrorMessage}</div>\r\n              ) : (\r\n                <CardList />\r\n              )}</>\r\n            <button\r\n              className=\"gallery__button button\"\r\n              disabled={isCardsDataFetching ? true : isCardsDataFetchError ? true : false}\r\n              onClick={fetchRequest}\r\n            >\r\n              Watch more\r\n            </button>\r\n            <button\r\n              className=\"pagination\"\r\n              disabled={isCardsDataFetching ? true : isCardsDataFetchError ? true : false}\r\n              onClick={scrollTop}\r\n            >\r\n              <MdKeyboardArrowUp color={'#fff'} size={'36px'} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <BasketAlert />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setCurrentRangeValue } from '../../store/actions/filterActions';\r\nimport { setFilteredCardsData, setFilteredStatus } from '../../store/actions/cardActions';\r\nimport { RootState } from '../../store/store';\r\nimport './Filter.scss';\r\n\r\n// /. Imports\r\n\r\nconst Filter: React.FC = () => {\r\n    const { inputRangeTotalValue, inputRangeMinValue, currentRangeValue } = useSelector((state: RootState) => state.filterReducer);\r\n    const input = useRef<HTMLInputElement>(null!);\r\n    const counter = useRef<HTMLDivElement>(null!);\r\n    const fill = useRef<HTMLDivElement>(null!);\r\n    const dispatch = useDispatch();\r\n    // \r\n    const inputRangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const currentValue = +e.target.value;\r\n        dispatch(setCurrentRangeValue(currentValue));\r\n        dispatch(setFilteredCardsData(currentValue));\r\n        dispatch(setFilteredStatus(true)); // many calls => return all true \r\n        fill.current.style.width = 100 * (currentValue - inputRangeMinValue) / (inputRangeTotalValue - inputRangeMinValue) + '%';\r\n        counter.current.style.left = 100 * (currentValue - inputRangeMinValue) / (inputRangeTotalValue - inputRangeMinValue) + '%';\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setCurrentRangeValue(inputRangeTotalValue));\r\n        dispatch(setFilteredCardsData(inputRangeTotalValue));\r\n        fill.current.style.width = 100 + '%';\r\n        counter.current.style.left = 100 + '%';\r\n    }, []);\r\n    // \r\n    return (\r\n        <div className=\"filter\">\r\n            <input\r\n                ref={input}\r\n                className=\"filter__input\"\r\n                type=\"range\"\r\n                value={currentRangeValue}\r\n                min={inputRangeMinValue}\r\n                max={inputRangeTotalValue}\r\n                step=\"100\"\r\n                onChange={inputRangeHandler}\r\n            />\r\n            <span className=\"filter__progress\"><span ref={fill} className=\"filter__progress-fill\"></span></span>\r\n            <span ref={counter} className=\"filter__current\">{currentRangeValue}</span>\r\n            <div className=\"filter__indicators\">\r\n                <span className=\"filter__counter filter__counter--min\">{`${inputRangeMinValue} $`}</span>\r\n                <span className=\"filter__counter filter__counter--max\">{`${inputRangeTotalValue} $`}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n\r\n","export default __webpack_public_path__ + \"static/media/empty.cd1884f0.png\";","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport SwiperCore from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n\r\nimport { Pagination } from 'swiper';\r\n\r\nimport Card from '../../Card/Card';\r\nimport Filter from '../../Filter/Filter';\r\nimport { actualDataTypes } from '../../../Types/cardTypes';\r\nimport { setFilteredStatus } from '../../../store/actions/cardActions';\r\nimport { RootState } from '../../../store/store';\r\nimport empty_image from '../../../assets/images/empty.png';\r\nimport './FavouritePage.scss';\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss'; // core Swiper\r\nimport 'swiper/modules/pagination/pagination.scss'; // Pagination module\r\n// import required modules\r\nSwiperCore.use([Pagination]);\r\n\r\n// /. Imports\r\n\r\nconst FavouritePage: React.FC = () => {\r\n  const { currentRangeValue } = useSelector((state: RootState) => state.filterReducer);\r\n  const { likedCardsData, filteredCardsData, isDataFiltered } = useSelector((state: RootState) => state.cardReducer);\r\n\r\n  const [emptyLikedCardsDataStatus, setEmptyLikedCardsStatus] = useState<boolean>(true);\r\n  const [emptyFilteredCardsStatus, setEmptyFilteredCardsStatus] = useState<boolean>(true);\r\n  const [totalPrice, setTotalPrice] = useState<number>(0); // current total price of likedCardsData\r\n  const [list, setList] = useState<actualDataTypes[]>([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {  // define current render data\r\n    isDataFiltered ? setList(filteredCardsData) : setList(likedCardsData);\r\n  }, [filteredCardsData, likedCardsData, isDataFiltered]);\r\n\r\n  useEffect(() => {  // define array empty status\r\n    if (likedCardsData.length === 0) {\r\n      setEmptyLikedCardsStatus(true);\r\n      dispatch(setFilteredStatus(false));\r\n    } else {\r\n      setEmptyLikedCardsStatus(false);\r\n    }\r\n    if (filteredCardsData.length === 0) {\r\n      setEmptyFilteredCardsStatus(true);\r\n    } else {\r\n      setEmptyFilteredCardsStatus(false);\r\n    }\r\n  }, [likedCardsData, filteredCardsData]);\r\n\r\n  useEffect(() => { // calc current basket total price\r\n    setTotalPrice(list.reduce((prev, current) => prev + current.price, 0));\r\n  }, [list]);\r\n  // \r\n  return (\r\n    <div className=\"section\">\r\n      <div className={emptyLikedCardsDataStatus ? 'basket empty' : 'basket'}>\r\n        <div className=\"basket__wrapper\">\r\n          {emptyLikedCardsDataStatus ?\r\n            <></>\r\n            :\r\n            <div className=\"basket__section\">\r\n              <div className=\"basket__price\">\r\n                <div className=\"price\">\r\n                  <h3 className=\"price__text\">Total price:</h3>\r\n                  <div className=\"price__section\">\r\n                    <span className=\"price__count\">{totalPrice}</span>\r\n                    <span className=\"price__currency\">$</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"basket__filter\">\r\n                <Filter />\r\n              </div>\r\n            </div>\r\n          }\r\n          <div className={emptyLikedCardsDataStatus || emptyFilteredCardsStatus ? 'basket__slider empty' : 'basket__slider'}>\r\n            {emptyLikedCardsDataStatus || emptyFilteredCardsStatus\r\n              ?\r\n              <div className=\"empty\">\r\n                <img className=\"empty__preview\" src={empty_image} alt=\"empty\" />\r\n                <h4 className=\"empty__text\">No matches</h4>\r\n              </div>\r\n              :\r\n              <>\r\n                <Swiper className=\"mySwiper\"\r\n                  slidesPerView={3}\r\n                  spaceBetween={5}\r\n                  breakpoints={{\r\n                    320: {\r\n                      slidesPerView: 1,\r\n                      spaceBetween: 30\r\n                    },\r\n                    360: {\r\n                      slidesPerView: 1,\r\n                      spaceBetween: 30\r\n                    },\r\n                    768: {\r\n                      slidesPerView: 2,\r\n                      spaceBetween: 30\r\n                    },\r\n                    1024: {\r\n                      slidesPerView: 2.5,\r\n                      spaceBetween: 30\r\n                    }\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <SwiperSlide key={item.id}>\r\n                        <Card\r\n                          key={item.id}\r\n                          id={item.id}\r\n                          image={item.image}\r\n                          name={item.name}\r\n                          location={item.location}\r\n                          age={item.age}\r\n                          paw={item.paw}\r\n                          price={item.price}\r\n                          discount={item.discount}\r\n                          isFavourite={item.isFavourite}\r\n                          cardStatus={item.cardStatus}\r\n                          discountStatus={item.discountStatus}\r\n                          currentRangeValue={currentRangeValue}\r\n                        />\r\n                      </SwiperSlide>\r\n                    );\r\n                  })}\r\n                </Swiper>\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavouritePage;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport fetchGifData from '../../../store/async-actions/fetchGifData';\r\nimport { fetchGifDataToggle } from '../../../store/actions/cardActions';\r\nimport { RootState } from '../../../store/store';\r\nimport './OverviewPage.scss';\r\n\r\n// /. Imports\r\n\r\nconst OverviewPage: React.FC = () => {\r\n  const { gifData, isGifDataFetching, isGifDataFetchError, gifDataFetchErrorMessage } = useSelector((state: RootState) => state.cardReducer);\r\n  const dispatch = useDispatch();\r\n  // \r\n  const fetchNewGifData = (): void => {\r\n    dispatch(fetchGifData());\r\n    dispatch(fetchGifDataToggle(true));\r\n  };\r\n  // \r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"container container--middle\">\r\n        <div className=\"overview\">\r\n          <div className=\"overview__wrapper\">\r\n            {isGifDataFetching ?\r\n              <div className=\"overview__gallery\">\r\n                <Preloader />\r\n              </div>\r\n              :\r\n              isGifDataFetchError\r\n                ?\r\n                <div className=\"error\">{gifDataFetchErrorMessage}</div>\r\n                :\r\n                <div className=\"overview__gallery\">\r\n                  {\r\n                    gifData.map(item => {\r\n                      return (\r\n                        <div className=\"overview__card\" key={item.id}>\r\n                          <img className=\"overview__image\" src={item.image} alt=\"funny\" />\r\n                        </div>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n            }\r\n            <button className=\"overview__button\" onClick={fetchNewGifData} disabled={isGifDataFetching ? true : isGifDataFetchError ? true : false}>Watch others</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPage;\r\n","export default __webpack_public_path__ + \"static/media/in_process.448aa860.png\";","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { changeMainPageStatus } from '../../../store/actions/headerActions';\r\nimport inProcessImage from '../../../assets/images/in_process.png';\r\n\r\n// /. Imports\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  //\r\n  const goHomePage = (): void => {\r\n    dispatch(changeMainPageStatus(true));\r\n    navigate('/Cats-Store', { replace: true });\r\n  };\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"section__wrapper\">\r\n        <img className=\"section__image\" src={inProcessImage} alt=\"cat\" />\r\n        <h1 className=\"section__title\">PROFILE PAGE IN PROCESS</h1>\r\n        <p className=\"section__link\">\r\n          return to home{' '}\r\n          <span>\r\n            <Link to=\"/Cats-Store\" onClick={goHomePage}>\r\n              page\r\n            </Link>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","export default __webpack_public_path__ + \"static/media/no_found.bee11de8.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { changeMainPageStatus } from '../../../store/actions/headerActions';\r\nimport noFoundPage from '../../../assets/images/no_found.png';\r\n\r\n// /. Imports\r\n\r\nconst NoFoundPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  //\r\n  const goHomePage = (): void => {\r\n    dispatch(changeMainPageStatus(true));\r\n    navigate('/Cats-Store', { replace: true });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section\">\r\n        <div className=\"section__wrapper\">\r\n          <img className=\"section__image\" src={noFoundPage} alt=\"404 error\" />\r\n          <h1 className=\"section__title section__title-error\">404</h1>\r\n          <p className=\"section__link\">\r\n            Sorry, this page doesn't exist, return to home{' '}\r\n            <span>\r\n              <Link to=\"/Cats-Store\" onClick={goHomePage}>\r\n                page\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoFoundPage;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Layout from '../Common/Layout';\r\nimport MainPage from '../Pages/MainPage/MainPage';\r\nimport FavouritePage from '../Pages/FavouritePage/FavouritePage';\r\nimport OverviewPage from '../Pages/OverviewPage/OverviewPage';\r\nimport ProfilePage from '../Pages/ProfilePage/ProfilePage';\r\nimport NoFoundPage from '../Pages/NoFoundPage/NoFoundPage';\r\nimport '../../assets/scss/media.scss';\r\nimport './App.css';\r\nimport './App.scss';\r\n\r\n// /. Imports\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/Cats-Store\" element={<Layout />}>\r\n          <Route index element={<MainPage />} />\r\n          <Route path=\"Favourite\" element={<FavouritePage />} />\r\n          <Route path=\"Live\" element={<OverviewPage />} />\r\n          <Route path=\"Profile\" element={<ProfilePage />} />\r\n          <Route path=\"*\" element={<NoFoundPage />} />\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store/store';\r\n\r\nimport App from './components/App/App';\r\n\r\n// /. Imports\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n"],"sourceRoot":""}