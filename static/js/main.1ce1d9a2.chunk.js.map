{"version":3,"sources":["reportWebVitals.js","store/actions/cardActions.ts","store/reducers/cardReducer.ts","store/actions/headerActions.ts","store/reducers/headerReducer.ts","store/actions/formActions.ts","store/reducers/formReducer.ts","store/actions/filterActions.ts","store/reducers/filterReducer.ts","store/store.ts","store/hooks.ts","components/BurgerMenu/BurgerMenu.tsx","components/Loader/Loader.tsx","components/Header/HeaderLink.tsx","hooks/usePageName.ts","components/Header/HeaderNav.tsx","components/Burger/Burger.tsx","components/NavLayout/NavLayout.tsx","assets/images/logo.svg","components/Header/Header.tsx","components/Footer/Footer.tsx","assets/images/no_photo.png","store/async-actions/fetchCardsData.ts","store/async-actions/fetchGifsData.ts","components/Common/Alert/FormAlert/FormAlert.tsx","components/Common/Layout.tsx","components/Card/Card.tsx","components/Card/CardLits.tsx","components/SortButton/SortButtonTemplate.tsx","components/SortButton/SortButtonList.tsx","components/Common/Preloader/Preloader.tsx","components/Common/Alert/BasketAlert/BasketAlert.tsx","components/Pages/MainPage/MainPage.tsx","components/Filter/Filter.tsx","assets/images/empty.png","components/Pages/FavouritePage/FavouritePage.tsx","components/Pages/OverviewPage/OverviewPage.tsx","assets/images/in_process.png","components/Pages/ProfilePage/ProfilePage.tsx","assets/images/no_found.png","components/Pages/NoFoundPage/NoFoundPage.tsx","components/App/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ACTION_FETCH_CARDS","ACTION_FETCH_CARDS_DATA_TOGGLE","ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS","ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE","ACTION_SET_GIF_DATA","ACTION_FETCH_GIF_DATA_TOGGLE","ACTION_SET_GIF_DATA_ERROR_STATUS","ACTION_SET_GIF_DATA_ERROR_MESSAGE","ACTION_SET_LIKED_CARDS_DATA","ACTION_SET_FAVOURITE_STATUS","ACTION_SET_NOTIFICATION_VISIBLE_STATUS","ACTION_SORT_CARDS_BY_PRICE","ACTION_SORT_CARDS_BY_AGE","ACTION_SET_FILTERED_CARDS_DATA","ACTION_SET_FILTERED_STATUS","ACTION_SET_BUTTON_SORTED_STATUS","fetchCards","data","type","payload","fetchCardsDataToggle","value","setFetchCardsDataErrorMessage","setGifData","fetchGifDataToggle","setFetchGifDataErrorMessage","setNotificationVisibleStatus","status","setFavouriteStatus","id","setFilteredCardsData","setFilteredStatus","initialState","cards","gifData","likedCardsData","filteredCardsData","sortButtons","text","isSorted","isCardsDataFetching","isCardsDataFetchError","cardsDataFetchErrorMessage","isGifDataFetching","isGifDataFetchError","gifDataFetchErrorMessage","isNotificationVisible","isDataFiltered","cardReducer","state","action","map","item","isFavourite","filter","sort","a","b","price","parseInt","age","ACTION_CHANGE_BURGER_VISIBLE_STATUS","ACTION_CHANGE_BURGER_OPENED_STATUS","ACTION_GET_INPUT_VALUE","ACTION_CHANGE_MAIN_PAGE_STATUS","ACTION_CHANGE_OVERVIEW_PAGE_STATUS","changeBurgerVisibleStatus","changeBurgerOpenedStatus","getInputValue","changeMainPageStatus","changeOverviewPageStatus","headerLinks","link","isBurgerHidden","isBurgerOpen","isBodyScrolling","isHomePage","isOverviewPage","emailValue","headerReducer","ACTION_SET_FORM_ALERT_VISIBLE_STATUS","ACTION_SET_FORM_SUBMIT_STATUS","setFormAlertVisibleStatus","isFormAlertVisible","isFormSubmitted","formReducer","ACTION_SET_CURRENT_RANGE_VALUE","setCurrentRangeValue","inputRangeTotalValue","inputRangeMinValue","currentRangeValue","filterReducer","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","BurgerMenu","dispatch","className","onClick","document","body","style","overflowY","Loader","HeaderLink","handlePageName","props","pageName","usePageName","to","removeBodyStatus","HeaderNav","Burger","useEffect","keyHandler","e","code","addEventListener","removeEventListener","NavLayout","useState","window","innerWidth","width","setWidth","breakpoint","windowReizeHandler","Header","useRef","length","current","href","src","logo","alt","Footer","unavailable","setUnavailableStatus","formRef","onFormSubmit","preventDefault","reset","setTimeout","ref","onSubmit","placeholder","disabled","required","onChange","target","fetchCardsData","pageCount","Math","floor","random","fetch","response","ok","console","error","json","actualData","forEach","image","url","image_placeholder","push","name","location","origin","paw","discount","discountStatus","Boolean","round","cardStatus","message","fetchGifsData","FormAlert","role","color","size","autoFocus","Layout","Card","buttonLike","classList","remove","onError","onerror","CardList","list","setList","SortButtonTemplate","isSwitched","setSwitchStatus","makeDataSort","setButtonSortedStatus","sortCardsByPrice","sortCardsByAge","SortButtonList","Preloader","BasketAlert","alert","add","MainPage","scrollPoint","scrollIntoView","block","behavior","Filter","input","counter","fill","left","min","max","step","currentValue","inputRangeHandler","SwiperCore","use","Pagination","FavouritePage","emptyLikedCardsDataStatus","setEmptyLikedCardsStatus","emptyFilteredCardsStatus","setEmptyFilteredCardsStatus","totalPrice","setTotalPrice","reduce","prev","empty_image","slidesPerView","spaceBetween","breakpoints","OverviewPage","fetchGifData","ProfilePage","navigate","useNavigate","inProcessImage","replace","NoFoundPage","noFoundPage","App","path","element","index","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ce1d9a2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { actualDataTypes, gifDataTypes, cardActionTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_FETCH_CARDS = 'ACTION_FETCH_CARDS';\r\nexport const ACTION_FETCH_CARDS_DATA_TOGGLE = 'ACTION_FETCH_CARDS_DATA_TOGGLE';\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS = 'ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS';\r\nexport const ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE = 'ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE';\r\n\r\nexport const ACTION_SET_GIF_DATA = 'ACTION_SET_GIF_DATA';\r\nexport const ACTION_FETCH_GIF_DATA_TOGGLE = 'ACTION_FETCH_GIF_DATA_TOGGLE';\r\nexport const ACTION_SET_GIF_DATA_ERROR_STATUS = 'ACTION_SET_GIF_DATA_ERROR_STATUS';\r\nexport const ACTION_SET_GIF_DATA_ERROR_MESSAGE = 'ACTION_SET_GIF_DATA_ERROR_MESSAGE';\r\n\r\nexport const ACTION_SET_LIKED_CARDS_DATA = 'ACTION_SET_LIKED_CARDS_DATA';\r\nexport const ACTION_SET_FAVOURITE_STATUS = 'ACTION_SET_FAVOURITE_STATUS';\r\nexport const ACTION_SET_NOTIFICATION_VISIBLE_STATUS = 'ACTION_SET_NOTIFICATION_VISIBLE_STATUS';\r\n\r\nexport const ACTION_SORT_CARDS_BY_PRICE = 'ACTION_SORT_CARDS_BY_PRICE';\r\nexport const ACTION_SORT_CARDS_BY_AGE = 'ACTION_SORT_CARDS_BY_AGE';\r\n\r\nexport const ACTION_SET_FILTERED_CARDS_DATA = 'ACTION_SET_FILTERED_CARDS_DATA';\r\nexport const ACTION_SET_FILTERED_STATUS = 'ACTION_SET_FILTERED_STATUS';\r\n\r\nexport const ACTION_SET_BUTTON_SORTED_STATUS = 'ACTION_SET_BUTTON_SORTED_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const fetchCards = (data: actualDataTypes[]): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_CARDS,\r\n    payload: data\r\n  };\r\n};\r\nexport const fetchCardsDataToggle = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchCardsDataErrorStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchCardsDataErrorMessage = (value: string): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setGifData = (data: gifDataTypes[]): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA,\r\n    payload: data\r\n  };\r\n};\r\nexport const fetchGifDataToggle = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_FETCH_GIF_DATA_TOGGLE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setGifDataErrorStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\nexport const setFetchGifDataErrorMessage = (value: string): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n    payload: {\r\n      value\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setNotificationVisibleStatus = (status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n    payload: {\r\n      status\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const setLikedCardsData = (): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_LIKED_CARDS_DATA\r\n  };\r\n};\r\n\r\n\r\nexport const setFavouriteStatus = (id: string, status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FAVOURITE_STATUS,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const sortCardsByPrice = (id: string, status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_BY_PRICE,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const sortCardsByAge = (id: string, status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SORT_CARDS_BY_AGE,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\nexport const setFilteredCardsData = (value: number): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FILTERED_CARDS_DATA,\r\n    payload: value\r\n  };\r\n};\r\nexport const setFilteredStatus = (value: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_FILTERED_STATUS,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const setButtonSortedStatus = (id: string, status: boolean): cardActionTypes => {\r\n  return {\r\n    type: ACTION_SET_BUTTON_SORTED_STATUS,\r\n    payload: { id, status }\r\n  };\r\n};\r\n\r\n\r\n\r\n","import {\r\n  ACTION_FETCH_CARDS,\r\n  ACTION_FETCH_CARDS_DATA_TOGGLE,\r\n  ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS,\r\n  ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE,\r\n  ACTION_SET_GIF_DATA,\r\n  ACTION_FETCH_GIF_DATA_TOGGLE,\r\n  ACTION_SET_GIF_DATA_ERROR_STATUS,\r\n  ACTION_SET_GIF_DATA_ERROR_MESSAGE,\r\n  ACTION_SET_FAVOURITE_STATUS,\r\n  ACTION_SET_LIKED_CARDS_DATA,\r\n  ACTION_SORT_CARDS_BY_PRICE,\r\n  ACTION_SORT_CARDS_BY_AGE,\r\n  ACTION_SET_NOTIFICATION_VISIBLE_STATUS,\r\n  ACTION_SET_FILTERED_CARDS_DATA,\r\n  ACTION_SET_FILTERED_STATUS,\r\n  ACTION_SET_BUTTON_SORTED_STATUS\r\n} from '../actions/cardActions';\r\n\r\nimport { CardStateTypes, cardActionTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst initialState: CardStateTypes = {\r\n  cards: [],\r\n  gifData: [],\r\n  likedCardsData: [],\r\n  filteredCardsData: [],\r\n  sortButtons: [\r\n    {\r\n      id: 'price',\r\n      text: 'Price',\r\n      isSorted: false\r\n    },\r\n    {\r\n      id: 'age',\r\n      text: 'Age',\r\n      isSorted: false\r\n    }\r\n  ],\r\n  isCardsDataFetching: true,\r\n  isCardsDataFetchError: false,\r\n  cardsDataFetchErrorMessage: 'error from fetchCardsData thunk',\r\n  isGifDataFetching: true,\r\n  isGifDataFetchError: false,\r\n  gifDataFetchErrorMessage: 'error from fetchGifData thunk',\r\n  isNotificationVisible: false,\r\n  isDataFiltered: false\r\n};\r\n\r\n// /. initialState\r\n\r\nconst cardReducer = (state = initialState, action: cardActionTypes): CardStateTypes => {\r\n  switch (action.type) {\r\n    case ACTION_FETCH_CARDS:\r\n      return {\r\n        ...state,\r\n        cards: [...state.cards, ...action.payload]\r\n      };\r\n    case ACTION_FETCH_CARDS_DATA_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isCardsDataFetching: action.payload.value\r\n      };\r\n    case ACTION_SET_FETCH_CARDS_DATA_ERROR_STATUS:\r\n      return {\r\n        ...state,\r\n        isCardsDataFetchError: action.payload.value\r\n      };\r\n    case ACTION_SET_FETCH_CARDS_DATA_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        cardsDataFetchErrorMessage: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA:\r\n      return {\r\n        ...state,\r\n        gifData: action.payload\r\n      };\r\n    case ACTION_FETCH_GIF_DATA_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isGifDataFetching: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA_ERROR_STATUS:\r\n      return {\r\n        ...state,\r\n        isGifDataFetchError: action.payload.value\r\n      };\r\n    case ACTION_SET_GIF_DATA_ERROR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        gifDataFetchErrorMessage: action.payload.value\r\n      };\r\n    case ACTION_SET_FAVOURITE_STATUS:\r\n      return {\r\n        ...state,\r\n        cards: state.cards.map((item) => {\r\n          if (item.id === action.payload.id) {\r\n            return {\r\n              ...item,\r\n              isFavourite: action.payload.status\r\n            };\r\n          }\r\n          return item;\r\n        })\r\n      };\r\n    case ACTION_SET_LIKED_CARDS_DATA:\r\n      return {\r\n        ...state,\r\n        likedCardsData: state.cards.filter(item => item.isFavourite === true)\r\n      };\r\n    case ACTION_SET_NOTIFICATION_VISIBLE_STATUS:\r\n      return {\r\n        ...state,\r\n        isNotificationVisible: action.payload.status\r\n      };\r\n    case ACTION_SORT_CARDS_BY_PRICE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return action.payload.status ? b.price - a.price : a.price - b.price;\r\n          })\r\n        ]\r\n      };\r\n    case ACTION_SORT_CARDS_BY_AGE:\r\n      return {\r\n        ...state,\r\n        cards: [\r\n          ...state.cards.sort((a, b) => {\r\n            return action.payload.status\r\n              ? parseInt(b.age, 10) - parseInt(a.age, 10)\r\n              : parseInt(a.age, 10) - parseInt(b.age, 10);\r\n          })\r\n        ]\r\n      };\r\n    case ACTION_SET_FILTERED_CARDS_DATA:\r\n      return {\r\n        ...state,\r\n        filteredCardsData: state.likedCardsData.filter(item => item.price <= action.payload)\r\n      };\r\n    case ACTION_SET_FILTERED_STATUS:\r\n      return {\r\n        ...state,\r\n        isDataFiltered: action.payload\r\n      };\r\n    case ACTION_SET_BUTTON_SORTED_STATUS:\r\n      return {\r\n        ...state,\r\n        sortButtons: state.sortButtons.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, isSorted: action.payload.status }\r\n            : item\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardReducer;\r\n","import { headerActionTypes } from '../../Types/headerTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_CHANGE_BURGER_VISIBLE_STATUS = 'ACTION_CHANGE_BURGER_VISIBLE_STATUS';\r\nexport const ACTION_CHANGE_BURGER_OPENED_STATUS = 'ACTION_CHANGE_BURGER_OPENED_STATUS';\r\nexport const ACTION_GET_INPUT_VALUE = 'ACTION_SET_INPUT_VALUE';\r\nexport const ACTION_CHANGE_MAIN_PAGE_STATUS = 'ACTION_CHANGE_MAIN_PAGE_STATUS';\r\nexport const ACTION_CHANGE_OVERVIEW_PAGE_STATUS = 'ACTION_CHANGE_OVERVIEW_PAGE_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const changeBurgerVisibleStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_BURGER_VISIBLE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\nexport const changeBurgerOpenedStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_BURGER_OPENED_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\n\r\nexport const getInputValue = (value: string): headerActionTypes => {\r\n  return {\r\n    type: ACTION_GET_INPUT_VALUE,\r\n    payload: value\r\n  };\r\n};\r\n\r\n\r\nexport const changeMainPageStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\nexport const changeOverviewPageStatus = (status: boolean): headerActionTypes => {\r\n  return {\r\n    type: ACTION_CHANGE_OVERVIEW_PAGE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { headerStateTypes, headerActionTypes } from '../../Types/headerTypes';\r\n\r\nimport {\r\n  ACTION_CHANGE_BURGER_VISIBLE_STATUS,\r\n  ACTION_CHANGE_BURGER_OPENED_STATUS,\r\n  ACTION_GET_INPUT_VALUE,\r\n  ACTION_CHANGE_MAIN_PAGE_STATUS,\r\n  ACTION_CHANGE_OVERVIEW_PAGE_STATUS\r\n} from '../actions/headerActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: headerStateTypes = {\r\n  headerLinks: [\r\n    {\r\n      id: 1,\r\n      text: 'Main',\r\n      link: '/Cats-Store/'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'Favourite',\r\n      link: 'Favourite'\r\n    },\r\n    {\r\n      id: 3,\r\n      text: 'Live',\r\n      link: 'Live'\r\n    },\r\n    {\r\n      id: 4,\r\n      text: 'Profile',\r\n      link: 'Profile'\r\n    }\r\n  ],\r\n  isBurgerHidden: true,\r\n  isBurgerOpen: false,\r\n  isBodyScrolling: true,\r\n  isHomePage: true,\r\n  isOverviewPage: false,\r\n  emailValue: ''\r\n};\r\n\r\n// /. initialState\r\n\r\nconst headerReducer = (state = initialState, action: headerActionTypes): headerStateTypes => {\r\n  switch (action.type) {\r\n    case ACTION_CHANGE_BURGER_VISIBLE_STATUS:\r\n      return {\r\n        ...state,\r\n        isBurgerHidden: action.payload\r\n      };\r\n    case ACTION_CHANGE_BURGER_OPENED_STATUS:\r\n      return {\r\n        ...state,\r\n        isBurgerOpen: action.payload\r\n      };\r\n    case ACTION_GET_INPUT_VALUE:\r\n      return {\r\n        ...state,\r\n        emailValue: action.payload\r\n      };\r\n    case ACTION_CHANGE_MAIN_PAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        isHomePage: action.payload\r\n      };\r\n    case ACTION_CHANGE_OVERVIEW_PAGE_STATUS:\r\n      return {\r\n        ...state,\r\n        isOverviewPage: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default headerReducer;\r\n","import { formActionTypes } from '../../Types/formTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_SET_FORM_ALERT_VISIBLE_STATUS = 'ACTION_SET_FORM_ALERT_VISIBLE_STATUS';\r\nexport const ACTION_SET_FORM_SUBMIT_STATUS = 'ACTION_SET_FORM_SUBMIT_STATUS';\r\n\r\n// /. AC Names\r\n\r\nexport const setFormAlertVisibleStatus = (status: boolean): formActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FORM_ALERT_VISIBLE_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\nexport const setFormSubmitStatus = (status: boolean): formActionTypes => {\r\n    return {\r\n        type: ACTION_SET_FORM_SUBMIT_STATUS,\r\n        payload: status\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { formStateTypes, formActionTypes } from '../../Types/formTypes';\r\n\r\nimport {\r\n    ACTION_SET_FORM_ALERT_VISIBLE_STATUS,\r\n    ACTION_SET_FORM_SUBMIT_STATUS\r\n} from '../actions/formActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: formStateTypes = {\r\n    isFormAlertVisible: false,\r\n    isFormSubmitted: false\r\n};\r\n\r\n// /. initialState\r\n\r\nconst formReducer = (\r\n    state = initialState,\r\n    action: formActionTypes\r\n): formStateTypes => {\r\n    switch (action.type) {\r\n        case ACTION_SET_FORM_ALERT_VISIBLE_STATUS:\r\n            return {\r\n                ...state,\r\n                isFormAlertVisible: action.payload\r\n            };\r\n        case ACTION_SET_FORM_SUBMIT_STATUS:\r\n            return {\r\n                ...state,\r\n                isFormSubmitted: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default formReducer;\r\n","import { filterActionTypes } from '../../Types/filterTypes';\r\n\r\n// /. Imports\r\n\r\nexport const ACTION_SET_CURRENT_RANGE_VALUE = 'ACTION_SET_CURRENT_RANGE_VALUE';\r\n\r\n// /. AC Names\r\n\r\nexport const setCurrentRangeValue = (value: number): filterActionTypes => {\r\n    return {\r\n        type: ACTION_SET_CURRENT_RANGE_VALUE,\r\n        payload: value\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { filterStateTypes, filterActionTypes } from '../../Types/filterTypes';\r\n\r\nimport {\r\n    ACTION_SET_CURRENT_RANGE_VALUE\r\n} from '../actions/filterActions';\r\n\r\n// /. Imports\r\n\r\nconst initialState: filterStateTypes = {\r\n    inputRangeTotalValue: 10000,\r\n    inputRangeMinValue: 1500,\r\n    currentRangeValue: 0\r\n};\r\n\r\n// /. initialState\r\n\r\nconst filterReducer = (\r\n    state = initialState,\r\n    action: filterActionTypes\r\n): filterStateTypes => {\r\n    switch (action.type) {\r\n        case ACTION_SET_CURRENT_RANGE_VALUE:\r\n            return {\r\n                ...state,\r\n                currentRangeValue: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport cardReducer from './reducers/cardReducer';\r\nimport headerReducer from './reducers/headerReducer';\r\nimport formReducer from './reducers/formReducer';\r\nimport filterReducer from './reducers/filterReducer';\r\n\r\n// /. Imports\r\n\r\nconst reducers = combineReducers({\r\n  cardReducer: cardReducer,\r\n  headerReducer: headerReducer,\r\n  formReducer: formReducer,\r\n  filterReducer: filterReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nexport default store;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// /. imports\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from 'react';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport { changeBurgerOpenedStatus } from '../../store/actions/headerActions';\r\n\r\nimport './menu.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    isBurgerOpen: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst BurgerMenu: React.FC<propTypes> = ({ isBurgerOpen }) => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    const defineScrollStatus = (): void => {\r\n        isBurgerOpen\r\n            ? document.body.style.overflowY = 'auto'\r\n            : document.body.style.overflowY = 'hidden';\r\n    };\r\n\r\n    const openBurger = (): void => {\r\n        dispatch(changeBurgerOpenedStatus(!isBurgerOpen));\r\n        defineScrollStatus();\r\n    };\r\n\r\n    return (\r\n        <button className=\"menu\" onClick={openBurger}>\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-top opened'\r\n                        : 'menu__line menu__line-top'\r\n                }\r\n            ></span>\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-middle opened'\r\n                        : 'menu__line menu__line-middle'\r\n                }\r\n            ></span>\r\n            <span\r\n                className={\r\n                    isBurgerOpen\r\n                        ? 'menu__line menu__line-bottom opened'\r\n                        : 'menu__line menu__line-bottom'\r\n                }\r\n            ></span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default BurgerMenu;","import React from 'react';\r\nimport './Loader.scss';\r\n\r\n// /. Imports\r\n\r\nconst Loader: React.FC = () => {\r\n    return (\r\n        <h1 className=\"loader\">\r\n            Loading\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n            <span className=\"loader__dot\"></span>\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport {\r\n  changeMainPageStatus,\r\n  changeBurgerOpenedStatus\r\n} from '../../store/actions/headerActions';\r\nimport { usePageName } from '../../hooks/usePageName';\r\n\r\n// /. Imports\r\n\r\ninterface HeaderLinkProps {\r\n  isBurgerHidden?: boolean;\r\n  link: string;\r\n  text: string;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst HeaderLink: React.FC<HeaderLinkProps> = ({ isBurgerHidden, link, text }) => {\r\n  const { handlePageName } = usePageName();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  const removeBodyStatus = (text: string): void => {\r\n    dispatch(changeMainPageStatus(false));\r\n    dispatch(changeBurgerOpenedStatus(false));\r\n    handlePageName({ pageName: text });\r\n    document.body.style.overflowY = 'auto';\r\n  };\r\n\r\n  return (\r\n    <li className={isBurgerHidden ? 'nav__menu_item' : 'nav__menu_item-burger'}>\r\n      <NavLink\r\n        to={link}\r\n        className={isBurgerHidden ? 'nav__menu_link' : 'nav__menu_link-burger'}\r\n        onClick={() => removeBodyStatus(text)}\r\n      >\r\n        {text}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default HeaderLink;\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    changeMainPageStatus,\r\n    changeOverviewPageStatus\r\n} from '../store/actions/headerActions';\r\n\r\nimport { setNotificationVisibleStatus } from '../store/actions/cardActions';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n    pageName: string\r\n}\r\n\r\n// /. interfaces\r\n\r\nexport function usePageName() {\r\n    const dispatch = useDispatch();\r\n\r\n    const handlePageName = (props: propTypes) => {\r\n\r\n        const { pageName } = props;\r\n\r\n        switch (pageName) {\r\n            case 'Main':\r\n                dispatch(changeMainPageStatus(true));\r\n                dispatch(setNotificationVisibleStatus(false));\r\n                dispatch(changeOverviewPageStatus(false));\r\n                break;\r\n            case 'Favourite':\r\n                dispatch(changeOverviewPageStatus(false));\r\n                break;\r\n            case 'Live':\r\n                dispatch(changeOverviewPageStatus(true));\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    return { handlePageName };\r\n}","import React from 'react';\r\n\r\nimport HeaderLink from './HeaderLink';\r\n\r\n// /. Imports\r\n\r\ninterface HeaderNavProps {\r\n  headerLinks: any[];\r\n  isBurgerHidden?: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst HeaderNav: React.FC<HeaderNavProps> = ({ headerLinks, isBurgerHidden }) => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul className={isBurgerHidden ? 'nav__menu' : 'nav__menu-burger'}>\r\n        {headerLinks.map(item => {\r\n          return (\r\n            <HeaderLink\r\n              key={item.id}\r\n              {...item}\r\n\r\n              isBurgerHidden={isBurgerHidden}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport { changeBurgerOpenedStatus } from '../../store/actions/headerActions';\r\n\r\nimport HeaderNav from '../Header/HeaderNav';\r\n\r\nimport './burger.scss';\r\n\r\n// /. Imports\r\n\r\ninterface propTypes {\r\n  headerLinks: any[];\r\n  isBurgerOpen: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst Burger: React.FC<propTypes> = ({ headerLinks, isBurgerOpen }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent): void => {\r\n      if (isBurgerOpen && e.code === 'Escape') {\r\n        dispatch(changeBurgerOpenedStatus(false));\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', keyHandler);\r\n    return () => {\r\n      document.removeEventListener('keydown', keyHandler);\r\n    };\r\n  }, [isBurgerOpen]);\r\n\r\n  return (\r\n    <div className={isBurgerOpen ? 'burger active' : 'burger'}>\r\n      <div className=\"burger__nav\">\r\n        <HeaderNav headerLinks={headerLinks} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\n\r\nimport { changeBurgerVisibleStatus } from '../../store/actions/headerActions';\r\n\r\nimport HeaderNav from '../Header/HeaderNav';\r\nimport Burger from '../Burger/Burger';\r\n\r\nconst NavLayout: React.FC = () => {\r\n\r\n    const { headerLinks, isBurgerOpen, isBurgerHidden } = useAppSelector(state => state.headerReducer);\r\n\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    const [breakpoint] = useState<number>(800);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        const windowReizeHandler = (): void => {\r\n            setWidth(window.innerWidth);\r\n        };\r\n\r\n        window.addEventListener('resize', windowReizeHandler);\r\n        return () => {\r\n            window.removeEventListener('resize', windowReizeHandler);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        width <= breakpoint ?\r\n            dispatch(changeBurgerVisibleStatus(false)) :\r\n            dispatch(changeBurgerVisibleStatus(true));\r\n    }, [width, breakpoint]);\r\n\r\n    return (\r\n        <>\r\n            {width <= breakpoint ?\r\n                <Burger\r\n                    headerLinks={headerLinks}\r\n                    isBurgerOpen={isBurgerOpen}\r\n                />\r\n                :\r\n                <HeaderNav headerLinks={headerLinks} isBurgerHidden={isBurgerHidden} />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavLayout;","export default __webpack_public_path__ + \"static/media/logo.c8358bcd.svg\";","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport BurgerMenu from '../BurgerMenu/BurgerMenu';\r\nimport Loader from '../Loader/Loader';\r\n\r\nimport NavLayout from '../NavLayout/NavLayout';\r\n\r\nimport logo from '../../assets/images/logo.svg';\r\n\r\nimport './Header.scss';\r\n\r\n// /. Imports\r\n\r\nconst Header: React.FC = () => {\r\n  const {\r\n    isBurgerHidden,\r\n    isBurgerOpen,\r\n    isHomePage,\r\n    isOverviewPage\r\n  } = useAppSelector(state => state.headerReducer);\r\n\r\n  const {\r\n    isCardsDataFetching,\r\n    isCardsDataFetchError,\r\n    isDataFiltered,\r\n    cards,\r\n    likedCardsData,\r\n    filteredCardsData\r\n  } = useAppSelector(state => state.cardReducer);\r\n\r\n  const text = useRef<string>('cat');\r\n\r\n\r\n  useEffect(() => {\r\n    if (likedCardsData.length === 1) {\r\n      text.current = 'cat';\r\n    }\r\n    if (likedCardsData.length >= 2) {\r\n      text.current = 'cats';\r\n    }\r\n    if (filteredCardsData.length === 0) {\r\n      text.current = 'cat';\r\n    }\r\n    if (filteredCardsData.length === 1) {\r\n      text.current = 'cat';\r\n    }\r\n    if (filteredCardsData.length >= 2) {\r\n      text.current = 'cats';\r\n    }\r\n  }, [likedCardsData, filteredCardsData, isDataFiltered]);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <section className=\"header__section\">\r\n\r\n          <a className=\"header__logo logo\" href=\"#\">\r\n            <img className=\"logo__image\" src={logo} alt=\"logo\" />\r\n          </a>\r\n\r\n          <NavLayout />\r\n          <>\r\n            {!isBurgerHidden && <BurgerMenu isBurgerOpen={isBurgerOpen} />}\r\n          </>\r\n\r\n          <div className=\"header__telephone telephone\">\r\n            <a className=\"telephone__number\" href=\"tel:+544 3490 00000\">\r\n              +544 3490 00000\r\n            </a>\r\n            <span className=\"telephone__description\">Call soon!</span>\r\n          </div>\r\n\r\n        </section>\r\n        <>\r\n          <>\r\n            {isCardsDataFetching ? (\r\n              <Loader />\r\n            ) : (\r\n              <>\r\n                {isHomePage\r\n                  ? <h1 className=\"header__text\">{`Found ${isCardsDataFetchError ? '0' : cards.length} cats`}</h1>\r\n                  : isOverviewPage\r\n                    ? <h1 className=\"header__text\">{'Have a good day ;)'}</h1>\r\n                    :\r\n                    <h1 className=\"header__text\">\r\n                      {`Selected ${isCardsDataFetchError ? '0' : isDataFiltered ? filteredCardsData.length : likedCardsData.length} ${text.current}`}\r\n                    </h1>\r\n                }\r\n              </>\r\n            )}\r\n          </>\r\n        </>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\n\r\nimport { getInputValue } from '../../store/actions/headerActions';\r\nimport { setFormAlertVisibleStatus, setFormSubmitStatus } from '../../store/actions/formActions';\r\n\r\nimport './Footer.scss';\r\n\r\n// /. Imports\r\n\r\nconst Footer: React.FC = () => {\r\n  const { emailValue } = useAppSelector(state => state.headerReducer);\r\n  const { isFormAlertVisible, isFormSubmitted } = useAppSelector(state => state.formReducer);\r\n\r\n  const [unavailable, setUnavailableStatus] = useState<boolean>(false);\r\n\r\n\r\n  const formRef = useRef<HTMLFormElement>(null!);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    dispatch(setFormAlertVisibleStatus(true));\r\n    dispatch(setFormSubmitStatus(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFormSubmitted && !isFormAlertVisible) {\r\n      formRef.current.reset();\r\n      dispatch(getInputValue(''));\r\n      setUnavailableStatus(true);\r\n      setTimeout(() => {\r\n        setUnavailableStatus(false);\r\n      }, 10000);\r\n    }\r\n  }, [isFormAlertVisible, isFormSubmitted]);\r\n  // \r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <section className=\"footer__wrapper\">\r\n          <article className=\"footer__description\">\r\n            <h2 className=\"footer__title\">Hurry up to buy!</h2>\r\n            <p className=\"footer__subtitle\">\r\n              Subscribe and catch all the promotions\r\n            </p>\r\n          </article>\r\n          <form ref={formRef} className=\"form\" onSubmit={e => onFormSubmit(e)}>\r\n            <div className=\"form__controls\">\r\n              <input\r\n                className=\"form__input\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                disabled={unavailable}\r\n                required\r\n                value={emailValue}\r\n                onChange={(e) => dispatch(getInputValue(e.target.value))}\r\n              />\r\n              <button className=\"form__button button\" type=\"submit\" disabled={unavailable}>Subscribe</button>\r\n            </div>\r\n            <label className=\"form__cheakbox-label\">\r\n              Subscribe to news\r\n              <input\r\n                className=\"form__cheakbox-input\"\r\n                type=\"checkbox\"\r\n                disabled={unavailable}\r\n                required\r\n              />\r\n              <span className=\"form__cheakbox-fake\"></span>\r\n            </label>\r\n          </form>\r\n        </section>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/no_photo.bb351cb8.png\";","import { Dispatch } from 'redux';\r\n\r\nimport {\r\n    fetchCards,\r\n    fetchCardsDataToggle,\r\n    setFetchCardsDataErrorMessage,\r\n    setFetchCardsDataErrorStatus\r\n} from '../actions/cardActions';\r\n\r\nimport { cardActionTypes, actualDataTypes } from '../../Types/cardTypes';\r\n\r\nimport image_placeholder from '../../assets/images/no_photo.png';\r\n\r\n\r\n// /. Imports\r\n\r\nconst fetchCardsData = () => {\r\n    const pageCount = Math.floor(Math.random() * 10);\r\n\r\n    return async function (dispatch: Dispatch<cardActionTypes>) {\r\n        try {\r\n            const response = await fetch(`https://api.thecatapi.com/v1/breeds?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=6&page=${pageCount}`);\r\n\r\n            if (!response.ok) {\r\n                dispatch(setFetchCardsDataErrorMessage('Error: There are some problems with response of breeds data'));\r\n                console.error('There are some problems with response');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            const actualData: actualDataTypes[] = [];\r\n\r\n            data.forEach((item: any) => {\r\n\r\n                if (!item['image']) {\r\n                    item.image = { url: image_placeholder };\r\n                }\r\n                // /. response validation\r\n\r\n                actualData.push(\r\n                    {\r\n                        id: `${Math.random() + item.id}`,\r\n                        image: item.image.url, \r\n                        name: item.name,\r\n                        location: item.origin,\r\n                        paw: '4',\r\n                        age: `${Math.floor(Math.random() * 12) + 1} mth.`,\r\n                        price: +Math.floor(Math.random() * 10000), // max 10000\r\n                        discount: `-${Math.floor(Math.random() * 60) + 10}%`,\r\n                        discountStatus: Boolean(Math.round(Math.random())),\r\n                        cardStatus: Boolean(Math.round(Math.random())),\r\n                        isFavourite: false\r\n                    }\r\n                );\r\n            });\r\n\r\n            dispatch(fetchCards(actualData));\r\n\r\n        } catch (error: any) {\r\n            dispatch(setFetchCardsDataErrorMessage(`Error: ${error.message} breeds data.`));\r\n            dispatch(setFetchCardsDataErrorStatus(true));\r\n            console.error(error.message);\r\n        } finally {\r\n            setTimeout(() => {\r\n                dispatch(fetchCardsDataToggle(false));\r\n            }, 2600);\r\n        }\r\n    };\r\n};\r\n\r\nexport default fetchCardsData;\r\n\r\n","import { Dispatch } from 'redux';\r\n\r\nimport {\r\n    setGifData,\r\n    fetchGifDataToggle,\r\n    setGifDataErrorStatus,\r\n    setFetchGifDataErrorMessage\r\n} from '../actions/cardActions';\r\n\r\nimport { cardActionTypes, gifDataTypes } from '../../Types/cardTypes';\r\n\r\n// /. Imports\r\n\r\nconst fetchGifsData = () => {\r\n    return async function (dispatch: Dispatch<cardActionTypes>) {\r\n        try {\r\n            const response = await fetch('https://api.thecatapi.com/v1/images/search?api_key=8df551cd-f3e4-4f5d-947a-5c7e82d333ca&limit=8&size=full&mime_types=gif');\r\n\r\n            if (!response.ok) {\r\n                dispatch(setFetchGifDataErrorMessage('Error: There are some problems with response of gifs data'));\r\n                console.error('There are some problems with response');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            const actualData: gifDataTypes[] = [];\r\n\r\n            data.forEach((item: any) => {\r\n                actualData.push(\r\n                    {\r\n                        id: `${Math.random() + item.id}`,\r\n                        image: item.url\r\n                    }\r\n                );\r\n            });\r\n\r\n            dispatch(setGifData(actualData));\r\n\r\n        } catch (error: any) {\r\n            dispatch(setFetchGifDataErrorMessage(`Error: ${error.message} gifs data.`));\r\n            dispatch(setGifDataErrorStatus(true));\r\n            console.error(error.message);\r\n        } finally {\r\n            setTimeout(() => {\r\n                dispatch(fetchGifDataToggle(false));\r\n            }, 2600);\r\n        }\r\n    };\r\n};\r\n\r\nexport default fetchGifsData;\r\n\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\n\r\nimport { useAppDispatch } from '../../../../store/hooks';\r\n\r\nimport { setFormAlertVisibleStatus } from '../../../../store/actions/formActions';\r\n\r\nimport './FormAlert.scss';\r\n\r\n// /. Imports\r\n\r\nconst FormAlert: React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const submitAlert = (): void => {\r\n        dispatch(setFormAlertVisibleStatus(false));\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const keyHandler = (e: KeyboardEvent): void => {\r\n            if (e.code === 'Escape') {\r\n                dispatch(setFormAlertVisibleStatus(false));\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', keyHandler);\r\n        return () => {\r\n            document.removeEventListener('keydown', keyHandler);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"form-alert\" role=\"alert\">\r\n            <div className=\"form-alert__wrapper\">\r\n                <div className=\"form-alert__description\">\r\n                    <RiErrorWarningLine color={'#e52d2d'} size={'24px'} />\r\n                    <p className=\"form-alert__text\" >Sorry! Function temporarily unavailable</p>\r\n                </div>\r\n                <div className=\"form-alert__controls\">\r\n                    <button className=\"form-alert__button\" autoFocus onClick={submitAlert} >Ok</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormAlert;","import React, { useEffect } from 'react';\r\n\r\nimport { Outlet } from 'react-router';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport fetchCardsData from '../../store/async-actions/fetchCardsData';\r\nimport fetchGifsData from '../../store/async-actions/fetchGifsData';\r\n\r\nimport FormAlert from './Alert/FormAlert/FormAlert';\r\n\r\n// /. Imports\r\n\r\nconst Layout: React.FC = () => {\r\n  const { isFormAlertVisible } = useAppSelector(state => state.formReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCardsData());\r\n    dispatch(fetchGifsData());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <>\r\n        {isFormAlertVisible && <FormAlert />}\r\n      </>\r\n      <Header />\r\n      <main className=\"main\">\r\n        <Outlet />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { BsHeartFill } from 'react-icons/bs';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport { setFavouriteStatus, setLikedCardsData, setFilteredCardsData } from '../../store/actions/cardActions';\r\n\r\nimport image_placeholder from '../../assets/images/no_photo.png';\r\n\r\nimport './Card.scss';\r\n\r\n// /. Imports\r\n\r\ninterface CardProps {\r\n  id: string;\r\n  image: string;\r\n  name: string;\r\n  location: string;\r\n  age: string;\r\n  paw: string;\r\n  price: number;\r\n  discount: string;\r\n  isFavourite: boolean;\r\n  cardStatus: boolean;\r\n  discountStatus: boolean;\r\n  currentRangeValue: number;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst Card: React.FC<CardProps> = (props) => {\r\n\r\n  const {\r\n    id,\r\n    image,\r\n    name,\r\n    location,\r\n    age,\r\n    paw,\r\n    price,\r\n    discount,\r\n    isFavourite,\r\n    cardStatus,\r\n    discountStatus,\r\n    currentRangeValue\r\n  } = props;\r\n\r\n  const buttonLike = useRef<HTMLButtonElement>(null!);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setFavourite = (): void => {\r\n    isFavourite\r\n      ? dispatch(setFavouriteStatus(id, false))\r\n      : dispatch(setFavouriteStatus(id, true));\r\n    dispatch(setLikedCardsData()); // filter cards for likedCardsData\r\n    dispatch(setFilteredCardsData(currentRangeValue)); // update filteredCardsData\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    buttonLike.current.classList.remove('unlike');\r\n  }, []);\r\n\r\n  return (\r\n    <article className=\"card\">\r\n      <div className=\"card__preview\">\r\n        <div className=\"card__icons\">\r\n          <>\r\n            {discountStatus &&\r\n              <span className=\"card__icons_discount\">{discount}</span>}\r\n          </>\r\n          <button\r\n            ref={buttonLike}\r\n            className={isFavourite ? 'card__icons_button like' : 'card__icons_button unlike'}\r\n            disabled={!cardStatus}\r\n            onClick={setFavourite}\r\n            aria-label=\"add to favourite\" \r\n          >\r\n            <BsHeartFill color={'#fff'} size={'42px'} />\r\n          </button>\r\n        </div>\r\n        <img\r\n          className=\"card__image\"\r\n          src={image}\r\n          alt=\"cat\"\r\n          onError={e => {\r\n            (e.target as HTMLImageElement).src = image_placeholder;\r\n            (e.target as HTMLImageElement).onerror = null;\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"card__information\">\r\n        <span className=\"card__name\">{name}</span>\r\n        <ul className=\"card__description description\">\r\n          <li className=\"description__item description__item_location\">\r\n            Location: <br />\r\n            <strong>{location}</strong>\r\n          </li>\r\n          <li className=\"description__item description__item_age\">\r\n            <span className=\"bold\">{age}</span> <br /> Age\r\n          </li>\r\n          <li className=\"description__item description__item_paw\">\r\n            <span className=\"bold\">{paw}</span> <br /> Paws count\r\n          </li>\r\n        </ul>\r\n        <span className=\"card__price\">{`${price} USD`}</span>\r\n      </div>\r\n      <button\r\n        className={\r\n          cardStatus ? 'card__button button' : 'card__button-sold button'\r\n        }\r\n      >\r\n        {cardStatus ? 'Buy' : 'Sold'}\r\n      </button>\r\n    </article>\r\n  );\r\n};\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport { actualDataTypes } from '../../Types/cardTypes';\r\n\r\nimport Card from './Card';\r\n\r\n// /. Imports\r\n\r\nconst CardList: React.FC = () => {\r\n  const { cards, likedCardsData } = useAppSelector(state => state.cardReducer);\r\n  const { isHomePage } = useAppSelector(state => state.headerReducer);\r\n  const { currentRangeValue } = useAppSelector(state => state.filterReducer);\r\n\r\n  const [list, setList] = useState<actualDataTypes[]>([]);\r\n\r\n\r\n  useEffect(() => {\r\n    isHomePage ? setList(cards) : setList(likedCardsData);\r\n  }, [cards, likedCardsData, isHomePage]);\r\n\r\n  return (\r\n    <div className=\"gallery__cards\">\r\n      {list.map(item => {\r\n        return (\r\n          <Card\r\n            key={item.id}\r\n            {...item}\r\n\r\n            currentRangeValue={currentRangeValue}\r\n          />\r\n        );\r\n      })\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState } from 'react';\r\n\r\nimport { MdKeyboardArrowUp, MdKeyboardArrowDown } from 'react-icons/md';\r\n\r\nimport { useAppDispatch } from '../../store/hooks';\r\n\r\nimport { sortCardsByPrice, sortCardsByAge, setButtonSortedStatus } from '../../store/actions/cardActions';\r\n\r\n// /. Imports\r\n\r\ninterface SortButtonTemplateProps {\r\n  id: string;\r\n  text: string;\r\n  isCardsDataFetching: boolean;\r\n  isCardsDataFetchError: boolean;\r\n  isSorted: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst SortButtonTemplate: React.FC<SortButtonTemplateProps> = (props) => {\r\n\r\n  const { id, text, isCardsDataFetching, isCardsDataFetchError } = props;\r\n\r\n  const [isSwitched, setSwitchStatus] = useState<boolean>(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const makeDataSort = (e: React.SyntheticEvent): void => {\r\n    setSwitchStatus(!isSwitched);\r\n\r\n    dispatch(setButtonSortedStatus(id, isSwitched));\r\n\r\n    id === 'price'\r\n      ? dispatch(sortCardsByPrice(id, isSwitched))\r\n      : dispatch(sortCardsByAge(id, isSwitched));\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"controls__menu\"\r\n      disabled={isCardsDataFetching || isCardsDataFetchError}\r\n      aria-label={`sort by ${id}`}\r\n      onClick={e => makeDataSort(e)}\r\n    >\r\n      <span className=\"controls__menu_text\">{text}</span>\r\n      <span>\r\n        {isSwitched ?\r\n          <MdKeyboardArrowUp color={'#000'} size={'26px'} />\r\n          : <MdKeyboardArrowDown color={'#000'} size={'26px'} />\r\n        }\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SortButtonTemplate;\r\n","import React from 'react';\r\n\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport { RootState } from '../../store/store';\r\n\r\nimport SortButtonTemplate from './SortButtonTemplate';\r\nimport './Sort.scss';\r\n\r\n// /. Imports\r\n\r\nconst SortButtonList: React.FC = () => {\r\n\r\n  const {\r\n    isCardsDataFetching,\r\n    isCardsDataFetchError,\r\n    sortButtons\r\n  } = useAppSelector((state: RootState) => state.cardReducer);\r\n\r\n  return (\r\n    <div className=\"controls__wrapper\">\r\n      {sortButtons.map(item => {\r\n        return (\r\n          <SortButtonTemplate\r\n            key={item.id}\r\n            {...item}\r\n\r\n            isCardsDataFetching={isCardsDataFetching}\r\n            isCardsDataFetchError={isCardsDataFetchError}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortButtonList;\r\n","import React from 'react';\r\nimport './Preloader.scss';\r\n\r\n// /. Imports\r\n\r\nconst Preloader: React.FC = () => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { RiErrorWarningLine } from 'react-icons/ri';\r\nimport { IoCloseOutline } from 'react-icons/io5';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../../store/hooks';\r\n\r\nimport { setNotificationVisibleStatus } from '../../../../store/actions/cardActions';\r\nimport { changeMainPageStatus } from '../../../../store/actions/headerActions';\r\n\r\nimport './BasketAlert.scss';\r\n\r\n// /. Imports\r\n\r\nconst BasketAlert: React.FC = () => {\r\n    const { likedCardsData } = useAppSelector(state => state.cardReducer);\r\n\r\n    const alert = useRef<HTMLDivElement>(null);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    const closeAlert = (): void => {\r\n        dispatch(setNotificationVisibleStatus(false));\r\n        alert.current?.classList.remove('visible');\r\n        alert.current?.classList.add('hide');\r\n    };\r\n\r\n    const relocateToFavouritePage = (): void => {\r\n        dispatch(changeMainPageStatus(false));\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (likedCardsData.length > 1 && likedCardsData.length % 2 === 0) { // logic of show/hide BasketAlert\r\n            dispatch(setNotificationVisibleStatus(true));\r\n            alert.current?.classList.add('visible');\r\n            alert.current?.classList.add('opacity');\r\n            alert.current?.classList.remove('hide');\r\n            setTimeout(() => {\r\n                dispatch(setNotificationVisibleStatus(false));\r\n                alert.current?.classList.remove('visible');\r\n                alert.current?.classList.add('hide');\r\n            }, 3500);\r\n        }\r\n        if (likedCardsData.length === 0) {\r\n            dispatch(setNotificationVisibleStatus(false));\r\n        }\r\n    }, [likedCardsData]);\r\n\r\n    return (\r\n        <div ref={alert} className=\"alert\" role=\"alert\">\r\n            <div className=\"alert__wrapper\">\r\n                <div className=\"alert__notification\">\r\n                    <Link to=\"Favourite\" onClick={relocateToFavouritePage} aria-label=\"redirect to basket\">\r\n                        <RiErrorWarningLine color={'#000'} size={'22px'} />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"alert__information\">\r\n                    <span className=\"alert__message\">Visit to Favourite page!</span>\r\n                    <span className=\"alert__count\">{`${likedCardsData.length} in basket!`}</span>\r\n                </div>\r\n                <button className=\"alert__button\" onClick={closeAlert} aria-label=\"close this modal\">\r\n                    <IoCloseOutline color={'#000'} size={'18px'} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BasketAlert;","import React, { useRef } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { MdKeyboardArrowUp } from 'react-icons/md';\r\n\r\nimport { useAppSelector } from '../../../store/hooks';\r\n\r\nimport CardList from '../../Card/CardLits';\r\nimport SortButtonList from '../../SortButton/SortButtonList';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport BasketAlert from '../../Common/Alert/BasketAlert/BasketAlert';\r\n\r\nimport fetchCardsData from '../../../store/async-actions/fetchCardsData';\r\n\r\n// /. Imports\r\n\r\nconst MainPage: React.FC = () => {\r\n  const {\r\n    isCardsDataFetching,\r\n    isCardsDataFetchError,\r\n    cardsDataFetchErrorMessage\r\n  } = useAppSelector(state => state.cardReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const scrollPoint = useRef<HTMLDivElement>(null!);\r\n\r\n  const scrollTop = (): void => {\r\n    scrollPoint.current.scrollIntoView({ block: 'start', behavior: 'smooth' });\r\n  };\r\n\r\n  const fetchRequest = (): void => {\r\n    dispatch(fetchCardsData());\r\n  };\r\n\r\n  return (\r\n    <div ref={scrollPoint} className=\"section\">\r\n      <div className=\"container\">\r\n        <section className=\"gallery\">\r\n          <div className=\"controls\">\r\n            <span className=\"controls__title\">Sorted by:</span>\r\n            <>\r\n              <SortButtonList />\r\n            </>\r\n          </div>\r\n          <div className=\"gallery__wrapper\">\r\n            <>\r\n              {isCardsDataFetching ? (\r\n                <Preloader />\r\n              ) : isCardsDataFetchError ? (\r\n                <div className=\"error\">{cardsDataFetchErrorMessage}</div>\r\n              ) : (\r\n                <CardList />\r\n              )}</>\r\n            <button\r\n              className=\"gallery__button button\"\r\n              disabled={isCardsDataFetching || isCardsDataFetchError}\r\n              onClick={fetchRequest}\r\n            >\r\n              Watch more\r\n            </button>\r\n            <button\r\n              className=\"pagination\"\r\n              disabled={isCardsDataFetching || isCardsDataFetchError}\r\n              onClick={scrollTop}\r\n              aria-label=\"scroll top\"\r\n            >\r\n              <MdKeyboardArrowUp color={'#fff'} size={'36px'} aria-label=\"scroll top\" />\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <BasketAlert />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\n\r\nimport { setCurrentRangeValue } from '../../store/actions/filterActions';\r\nimport { setFilteredCardsData, setFilteredStatus } from '../../store/actions/cardActions';\r\n\r\nimport './Filter.scss';\r\n\r\n// /. Imports\r\n\r\nconst Filter: React.FC = () => {\r\n    const {\r\n        inputRangeTotalValue,\r\n        inputRangeMinValue,\r\n        currentRangeValue\r\n    } = useAppSelector(state => state.filterReducer);\r\n\r\n    const input = useRef<HTMLInputElement>(null!);\r\n    const counter = useRef<HTMLDivElement>(null!);\r\n    const fill = useRef<HTMLDivElement>(null!);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n\r\n    const inputRangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const currentValue = +e.target.value;\r\n\r\n        dispatch(setCurrentRangeValue(currentValue));\r\n        dispatch(setFilteredCardsData(currentValue));\r\n        dispatch(setFilteredStatus(true)); // many calls => return all true \r\n        fill.current.style.width = 100 * (currentValue - inputRangeMinValue) / (inputRangeTotalValue - inputRangeMinValue) + '%';\r\n        counter.current.style.left = 100 * (currentValue - inputRangeMinValue) / (inputRangeTotalValue - inputRangeMinValue) + '%';\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setCurrentRangeValue(inputRangeTotalValue));\r\n        dispatch(setFilteredCardsData(inputRangeTotalValue));\r\n        fill.current.style.width = 100 + '%';\r\n        counter.current.style.left = 100 + '%';\r\n    }, []);\r\n\r\n    return (\r\n        <form className=\"filter\">\r\n            <input\r\n                ref={input}\r\n                className=\"filter__input\"\r\n                type=\"range\"\r\n                value={currentRangeValue}\r\n                min={inputRangeMinValue}\r\n                max={inputRangeTotalValue}\r\n                step=\"100\"\r\n                onChange={e => inputRangeHandler(e)}\r\n            />\r\n            <span className=\"filter__progress\"><span ref={fill} className=\"filter__progress-fill\"></span></span>\r\n            <span ref={counter} className=\"filter__current\">{currentRangeValue}</span>\r\n            <div className=\"filter__indicators\">\r\n                <span className=\"filter__counter filter__counter--min\">{`${inputRangeMinValue} $`}</span>\r\n                <span className=\"filter__counter filter__counter--max\">{`${inputRangeTotalValue} $`}</span>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n\r\n","export default __webpack_public_path__ + \"static/media/empty.cd1884f0.png\";","import React, { useState, useEffect } from 'react';\r\n\r\nimport SwiperCore from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\n\r\nimport { Pagination } from 'swiper';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\r\n\r\nimport Card from '../../Card/Card';\r\nimport Filter from '../../Filter/Filter';\r\n\r\nimport { actualDataTypes } from '../../../Types/cardTypes';\r\nimport { setFilteredStatus } from '../../../store/actions/cardActions';\r\n\r\nimport empty_image from '../../../assets/images/empty.png';\r\n\r\nimport './FavouritePage.scss';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss'; // core Swiper\r\nimport 'swiper/modules/pagination/pagination.scss'; // Pagination module\r\n// import required modules\r\nSwiperCore.use([Pagination]);\r\n\r\n// /. Imports\r\n\r\nconst FavouritePage: React.FC = () => {\r\n  const { currentRangeValue } = useAppSelector(state => state.filterReducer);\r\n  const { likedCardsData, filteredCardsData, isDataFiltered } = useAppSelector(state => state.cardReducer);\r\n\r\n  const [emptyLikedCardsDataStatus, setEmptyLikedCardsStatus] = useState<boolean>(true);\r\n  const [emptyFilteredCardsStatus, setEmptyFilteredCardsStatus] = useState<boolean>(true);\r\n  const [totalPrice, setTotalPrice] = useState<number>(0); // current total price of likedCardsData\r\n  const [list, setList] = useState<actualDataTypes[]>([]);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {  // define current render data\r\n    isDataFiltered ? setList(filteredCardsData) : setList(likedCardsData);\r\n  }, [filteredCardsData, likedCardsData, isDataFiltered]);\r\n\r\n  useEffect(() => {  // define array empty status\r\n    if (likedCardsData.length === 0) {\r\n      setEmptyLikedCardsStatus(true);\r\n      dispatch(setFilteredStatus(false));\r\n    } else {\r\n      setEmptyLikedCardsStatus(false);\r\n    }\r\n    if (filteredCardsData.length === 0) {\r\n      setEmptyFilteredCardsStatus(true);\r\n    } else {\r\n      setEmptyFilteredCardsStatus(false);\r\n    }\r\n  }, [likedCardsData, filteredCardsData]);\r\n\r\n  useEffect(() => { // calc current basket total price\r\n    setTotalPrice(list.reduce((prev, current) => prev + current.price, 0));\r\n  }, [list]);\r\n  // \r\n  return (\r\n    <div className=\"section\">\r\n      <section className={emptyLikedCardsDataStatus ? 'basket empty' : 'basket'}>\r\n        <div className=\"basket__wrapper\">\r\n          {emptyLikedCardsDataStatus ?\r\n            <></>\r\n            :\r\n            <div className=\"basket__section\">\r\n              <div className=\"basket__price\">\r\n                <div className=\"price\">\r\n                  <h3 className=\"price__text\">Total price:</h3>\r\n                  <div className=\"price__section\">\r\n                    <span className=\"price__count\">{totalPrice}</span>\r\n                    <span className=\"price__currency\">$</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"basket__filter\">\r\n                <Filter />\r\n              </div>\r\n            </div>\r\n          }\r\n          <div className={emptyLikedCardsDataStatus || emptyFilteredCardsStatus ? 'basket__slider empty' : 'basket__slider'}>\r\n            {emptyLikedCardsDataStatus || emptyFilteredCardsStatus\r\n              ?\r\n              <div className=\"empty\">\r\n                <img className=\"empty__preview\" src={empty_image} alt=\"empty\" />\r\n                <h4 className=\"empty__text\">No matches</h4>\r\n              </div>\r\n              :\r\n              <>\r\n                <Swiper className=\"mySwiper\"\r\n                  slidesPerView={3}\r\n                  spaceBetween={5}\r\n                  breakpoints={{\r\n                    320: {\r\n                      slidesPerView: 1,\r\n                      spaceBetween: 30\r\n                    },\r\n                    360: {\r\n                      slidesPerView: 1,\r\n                      spaceBetween: 30\r\n                    },\r\n                    768: {\r\n                      slidesPerView: 2,\r\n                      spaceBetween: 30\r\n                    },\r\n                    1024: {\r\n                      slidesPerView: 2.5,\r\n                      spaceBetween: 30\r\n                    }\r\n                  }}\r\n                >\r\n                  {list.map(item => {\r\n                    return (\r\n                      <SwiperSlide key={item.id}>\r\n                        <Card\r\n                          key={item.id}\r\n                          {...item}\r\n\r\n                          currentRangeValue={currentRangeValue}\r\n                        />\r\n                      </SwiperSlide>\r\n                    );\r\n                  })}\r\n                </Swiper>\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavouritePage;\r\n","import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useAppSelector } from '../../../store/hooks';\r\n\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\n\r\nimport { fetchGifDataToggle } from '../../../store/actions/cardActions';\r\n\r\nimport fetchGifData from '../../../store/async-actions/fetchGifsData';\r\n\r\nimport './OverviewPage.scss';\r\n\r\n// /. Imports\r\n\r\nconst OverviewPage: React.FC = () => {\r\n  const {\r\n    gifData,\r\n    isGifDataFetching,\r\n    isGifDataFetchError,\r\n    gifDataFetchErrorMessage\r\n  } = useAppSelector(state => state.cardReducer);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const fetchNewGifData = (): void => {\r\n    dispatch(fetchGifData());\r\n    dispatch(fetchGifDataToggle(true));\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"container container--middle\">\r\n        <section className=\"overview\">\r\n          <div className=\"overview__wrapper\">\r\n            {isGifDataFetching ?\r\n              <div className=\"overview__gallery\">\r\n                <Preloader />\r\n              </div>\r\n              :\r\n              isGifDataFetchError\r\n                ?\r\n                <div className=\"error\">{gifDataFetchErrorMessage}</div>\r\n                :\r\n                <div className=\"overview__gallery\">\r\n                  {\r\n                    gifData.map(item => {\r\n                      return (\r\n                        <div className=\"overview__card\" key={item.id}>\r\n                          <img className=\"overview__image\" src={item.image} alt=\"funny\" />\r\n                        </div>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n            }\r\n            <button\r\n              className=\"overview__button\"\r\n              onClick={fetchNewGifData}\r\n              disabled={isGifDataFetching || isGifDataFetchError}>\r\n              Watch others\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OverviewPage;\r\n","export default __webpack_public_path__ + \"static/media/in_process.448aa860.png\";","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { useAppDispatch } from '../../../store/hooks';\r\n\r\nimport { changeMainPageStatus } from '../../../store/actions/headerActions';\r\n\r\nimport inProcessImage from '../../../assets/images/in_process.png';\r\n\r\n// /. Imports\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  const goHomePage = (): void => {\r\n    dispatch(changeMainPageStatus(true));\r\n    navigate('/Cats-Store', { replace: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <article className=\"section__wrapper\">\r\n        <img className=\"section__image\" src={inProcessImage} alt=\"cat\" />\r\n        <h1 className=\"section__title\">PROFILE PAGE IN PROCESS</h1>\r\n        <p className=\"section__link\">\r\n          return to home{' '}\r\n          <span>\r\n            <Link to=\"/Cats-Store\" onClick={goHomePage}>age</Link>\r\n          </span>\r\n        </p>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","export default __webpack_public_path__ + \"static/media/no_found.bee11de8.png\";","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { useAppDispatch } from '../../../store/hooks';\r\n\r\nimport { changeMainPageStatus } from '../../../store/actions/headerActions';\r\n\r\nimport noFoundPage from '../../../assets/images/no_found.png';\r\n\r\n// /. Imports\r\n\r\nconst NoFoundPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n\r\n  const goHomePage = (): void => {\r\n    dispatch(changeMainPageStatus(true));\r\n    navigate('/Cats-Store', { replace: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <article className=\"section__wrapper\">\r\n        <img className=\"section__image\" src={noFoundPage} alt=\"404 error\" />\r\n        <h1 className=\"section__title section__title-error\">404</h1>\r\n        <p className=\"section__link\">\r\n          Sorry, this page doesn't exist, return to home{' '}\r\n          <span>\r\n            <Link to=\"/Cats-Store\" onClick={goHomePage}>\r\n              page\r\n            </Link>\r\n          </span>\r\n        </p>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoFoundPage;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Layout from '../Common/Layout';\r\nimport MainPage from '../Pages/MainPage/MainPage';\r\nimport FavouritePage from '../Pages/FavouritePage/FavouritePage';\r\nimport OverviewPage from '../Pages/OverviewPage/OverviewPage';\r\nimport ProfilePage from '../Pages/ProfilePage/ProfilePage';\r\nimport NoFoundPage from '../Pages/NoFoundPage/NoFoundPage';\r\n\r\nimport './App.css';\r\nimport '../../assets/styles/_styles.scss';\r\nimport '../../assets/styles/_media.scss';\r\n\r\n// /. Imports\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/Cats-Store\" element={<Layout />}>\r\n          <Route index element={<MainPage />} />\r\n          <Route path=\"Favourite\" element={<FavouritePage />} />\r\n          <Route path=\"Live\" element={<OverviewPage />} />\r\n          <Route path=\"Profile\" element={<ProfilePage />} />\r\n          <Route path=\"*\" element={<NoFoundPage />} />\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store/store';\r\n\r\nimport App from './components/App/App';\r\n\r\n// /. Imports\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n"],"sourceRoot":""}